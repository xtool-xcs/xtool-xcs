import{cd as Ie}from"../assets/index-83a10b2e.js";import"./index-55948043.js";import"./xcs-vue-family-70642f71.js";import"./xcs-canvas-5c2592d6.js";const Gn={utf16le:"utf-16le",ucs2:"utf-16le",utf16be:"utf-16be"};class ke{constructor(e){this.buffer=e,this.view=new DataView(e.buffer,e.byteOffset,e.byteLength),this.pos=0,this.length=this.buffer.length}readString(e,t="ascii"){t=Gn[t]||t;let r=this.readBuffer(e);try{return new TextDecoder(t).decode(r)}catch{return r}}readBuffer(e){return this.buffer.slice(this.pos,this.pos+=e)}readUInt24BE(){return(this.readUInt16BE()<<8)+this.readUInt8()}readUInt24LE(){return this.readUInt16LE()+(this.readUInt8()<<16)}readInt24BE(){return(this.readInt16BE()<<8)+this.readUInt8()}readInt24LE(){return this.readUInt16LE()+(this.readInt8()<<16)}}ke.TYPES={UInt8:1,UInt16:2,UInt24:3,UInt32:4,Int8:1,Int16:2,Int24:3,Int32:4,Float:4,Double:8};for(let s of Object.getOwnPropertyNames(DataView.prototype))if(s.slice(0,3)==="get"){let e=s.slice(3).replace("Ui","UI");e==="Float32"?e="Float":e==="Float64"&&(e="Double");let t=ke.TYPES[e];ke.prototype["read"+e+(t===1?"":"BE")]=function(){const r=this.view[s](this.pos,!1);return this.pos+=t,r},t!==1&&(ke.prototype["read"+e+"LE"]=function(){const r=this.view[s](this.pos,!0);return this.pos+=t,r})}const zn=new TextEncoder,Ea=new Uint8Array(new Uint16Array([4660]).buffer)[0]==18;class Rt{constructor(e){this.buffer=e,this.view=new DataView(this.buffer.buffer,this.buffer.byteOffset,this.buffer.byteLength),this.pos=0}writeBuffer(e){this.buffer.set(e,this.pos),this.pos+=e.length}writeString(e,t="ascii"){let r;switch(t){case"utf16le":case"utf16-le":case"ucs2":r=Ta(e,Ea);break;case"utf16be":case"utf16-be":r=Ta(e,!Ea);break;case"utf8":r=zn.encode(e);break;case"ascii":r=Wn(e);break;default:throw new Error(`Unsupported encoding: ${t}`)}this.writeBuffer(r)}writeUInt24BE(e){this.buffer[this.pos++]=e>>>16&255,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=e&255}writeUInt24LE(e){this.buffer[this.pos++]=e&255,this.buffer[this.pos++]=e>>>8&255,this.buffer[this.pos++]=e>>>16&255}writeInt24BE(e){e>=0?this.writeUInt24BE(e):this.writeUInt24BE(e+16777215+1)}writeInt24LE(e){e>=0?this.writeUInt24LE(e):this.writeUInt24LE(e+16777215+1)}fill(e,t){if(t<this.buffer.length)this.buffer.fill(e,this.pos,this.pos+t),this.pos+=t;else{const r=new Uint8Array(t);r.fill(e),this.writeBuffer(r)}}}function Ta(s,e){let t=new Uint16Array(s.length);for(let r=0;r<s.length;r++){let a=s.charCodeAt(r);e&&(a=a>>8|(a&255)<<8),t[r]=a}return new Uint8Array(t.buffer)}function Wn(s){let e=new Uint8Array(s.length);for(let t=0;t<s.length;t++)e[t]=s.charCodeAt(t);return e}for(let s of Object.getOwnPropertyNames(DataView.prototype))if(s.slice(0,3)==="set"){let e=s.slice(3).replace("Ui","UI");e==="Float32"?e="Float":e==="Float64"&&(e="Double");let t=ke.TYPES[e];Rt.prototype["write"+e+(t===1?"":"BE")]=function(r){this.view[s](this.pos,r,!1),this.pos+=t},t!==1&&(Rt.prototype["write"+e+"LE"]=function(r){this.view[s](this.pos,r,!0),this.pos+=t})}class u0{fromBuffer(e){let t=new ke(e);return this.decode(t)}toBuffer(e){let t=this.size(e),r=new Uint8Array(t),a=new Rt(r);return this.encode(a,e),r}}class le extends u0{constructor(e,t="BE"){super(),this.type=e,this.endian=t,this.fn=this.type,this.type[this.type.length-1]!=="8"&&(this.fn+=this.endian)}size(){return ke.TYPES[this.type]}decode(e){return e[`read${this.fn}`]()}encode(e,t){return e[`write${this.fn}`](t)}}const O=new le("UInt8"),Hn=new le("UInt16","BE"),l=Hn;new le("UInt16","LE");const qn=new le("UInt24","BE"),g0=qn;new le("UInt24","LE");const $n=new le("UInt32","BE"),g=$n;new le("UInt32","LE");const Se=new le("Int8"),Xn=new le("Int16","BE"),w=Xn;new le("Int16","LE");new le("Int24","BE");new le("Int24","LE");const Yn=new le("Int32","BE"),I0=Yn;new le("Int32","LE");new le("Float","BE");new le("Float","LE");new le("Double","BE");new le("Double","LE");class D0 extends le{constructor(e,t,r=e>>1){super(`Int${e}`,t),this._point=1<<r}decode(e){return super.decode(e)/this._point}encode(e,t){return super.encode(e,t*this._point|0)}}const Kn=new D0(16,"BE"),jn=Kn;new D0(16,"LE");const Zn=new D0(32,"BE"),be=Zn;new D0(32,"LE");function a0(s,e,t){let r;if(typeof s=="number"?r=s:typeof s=="function"?r=s.call(t,t):t&&typeof s=="string"?r=t[s]:e&&s instanceof le&&(r=s.decode(e)),isNaN(r))throw new Error("Not a fixed size");return r}class jr{constructor(e={}){this.enumerable=!0,this.configurable=!0;for(let t in e){const r=e[t];this[t]=r}}}class p extends u0{constructor(e,t,r="count"){super(),this.type=e,this.length=t,this.lengthType=r}decode(e,t){let r;const{pos:a}=e,n=[];let i=t;if(this.length!=null&&(r=a0(this.length,e,t)),this.length instanceof le&&(Object.defineProperties(n,{parent:{value:t},_startOffset:{value:a},_currentOffset:{value:0,writable:!0},_length:{value:r}}),i=n),r==null||this.lengthType==="bytes"){const o=r!=null?e.pos+r:t!=null&&t._length?t._startOffset+t._length:e.length;for(;e.pos<o;)n.push(this.type.decode(e,i))}else for(let o=0,u=r;o<u;o++)n.push(this.type.decode(e,i));return n}size(e,t,r=!0){if(!e)return this.type.size(null,t)*a0(this.length,null,t);let a=0;this.length instanceof le&&(a+=this.length.size(),t={parent:t,pointerSize:0});for(let n of e)a+=this.type.size(n,t);return t&&r&&this.length instanceof le&&(a+=t.pointerSize),a}encode(e,t,r){let a=r;this.length instanceof le&&(a={pointers:[],startOffset:e.pos,parent:r},a.pointerOffset=e.pos+this.size(t,a,!1),this.length.encode(e,t.length));for(let n of t)this.type.encode(e,n,a);if(this.length instanceof le){let n=0;for(;n<a.pointers.length;){const i=a.pointers[n++];i.type.encode(e,i.val,i.parent)}}}}class fe extends p{decode(e,t){const{pos:r}=e,a=a0(this.length,e,t);this.length instanceof le&&(t={parent:t,_startOffset:r,_currentOffset:0,_length:a});const n=new mr(this.type,a,e,t);return e.pos+=a*this.type.size(null,t),n}size(e,t){return e instanceof mr&&(e=e.toArray()),super.size(e,t)}encode(e,t,r){return t instanceof mr&&(t=t.toArray()),super.encode(e,t,r)}}class mr{constructor(e,t,r,a){this.type=e,this.length=t,this.stream=r,this.ctx=a,this.base=this.stream.pos,this.items=[]}get(e){if(!(e<0||e>=this.length)){if(this.items[e]==null){const{pos:t}=this.stream;this.stream.pos=this.base+this.type.size(null,this.ctx)*e,this.items[e]=this.type.decode(this.stream,this.ctx),this.stream.pos=t}return this.items[e]}}toArray(){const e=[];for(let t=0,r=this.length;t<r;t++)e.push(this.get(t));return e}}class Xe extends u0{constructor(e,t=[]){super(),this.type=e,this.flags=t}decode(e){const t=this.type.decode(e),r={};for(let a=0;a<this.flags.length;a++){const n=this.flags[a];n!=null&&(r[n]=!!(t&1<<a))}return r}size(){return this.type.size()}encode(e,t){let r=0;for(let a=0;a<this.flags.length;a++){const n=this.flags[a];n!=null&&t[n]&&(r|=1<<a)}return this.type.encode(e,r)}}class r0 extends u0{constructor(e){super(),this.length=e}decode(e,t){const r=a0(this.length,e,t);return e.readBuffer(r)}size(e,t){if(!e)return a0(this.length,null,t);let r=e.length;return this.length instanceof le&&(r+=this.length.size()),r}encode(e,t,r){return this.length instanceof le&&this.length.encode(e,t.length),e.writeBuffer(t)}}class Nt extends u0{constructor(e,t=!0){super(),this.type=e,this.condition=t}decode(e,t){let{condition:r}=this;if(typeof r=="function"&&(r=r.call(t,t)),r)return this.type.decode(e,t)}size(e,t){let{condition:r}=this;return typeof r=="function"&&(r=r.call(t,t)),r?this.type.size(e,t):0}encode(e,t,r){let{condition:a}=this;if(typeof a=="function"&&(a=a.call(r,r)),a)return this.type.encode(e,t,r)}}class pe extends u0{constructor(e,t=1){super(),this.type=e,this.count=t}decode(e,t){e.pos+=this.size(null,t)}size(e,t){const r=a0(this.count,null,t);return this.type.size()*r}encode(e,t,r){return e.fill(0,this.size(t,r))}}class ce extends u0{constructor(e,t="ascii"){super(),this.length=e,this.encoding=t}decode(e,t){let r,a;if(this.length!=null)r=a0(this.length,e,t);else{let o;for({buffer:o,length:r,pos:a}=e;a<r&&o[a]!==0;)++a;r=a-e.pos}let{encoding:n}=this;typeof n=="function"&&(n=n.call(t,t)||"ascii");const i=e.readString(r,n);return this.length==null&&e.pos<e.length&&e.pos++,i}size(e,t){if(!e)return a0(this.length,null,t);let{encoding:r}=this;typeof r=="function"&&(r=r.call(t!=null?t.val:void 0,t!=null?t.val:void 0)||"ascii"),r==="utf16be"&&(r="utf16le");let a=Fa(e,r);return this.length instanceof le&&(a+=this.length.size()),this.length==null&&a++,a}encode(e,t,r){let{encoding:a}=this;if(typeof a=="function"&&(a=a.call(r!=null?r.val:void 0,r!=null?r.val:void 0)||"ascii"),this.length instanceof le&&this.length.encode(e,Fa(t,a)),e.writeString(t,a),this.length==null)return e.writeUInt8(0)}}function Fa(s,e){switch(e){case"ascii":return s.length;case"utf8":let t=0;for(let r=0;r<s.length;r++){let a=s.charCodeAt(r);if(a>=55296&&a<=56319&&r<s.length-1){let n=s.charCodeAt(++r);(n&64512)===56320?a=((a&1023)<<10)+(n&1023)+65536:r--}a&4294967168?a&4294965248?a&4294901760?a&4292870144||(t+=4):t+=3:t+=2:t++}return t;case"utf16le":case"utf16-le":case"utf16be":case"utf16-be":case"ucs2":return s.length*2;default:throw new Error("Unknown encoding "+e)}}class v extends u0{constructor(e={}){super(),this.fields=e}decode(e,t,r=0){const a=this._setup(e,t,r);return this._parseFields(e,a,this.fields),this.process!=null&&this.process.call(a,e),a}_setup(e,t,r){const a={};return Object.defineProperties(a,{parent:{value:t},_startOffset:{value:e.pos},_currentOffset:{value:0,writable:!0},_length:{value:r}}),a}_parseFields(e,t,r){for(let n in r){var a;const i=r[n];typeof i=="function"?a=i.call(t,t):a=i.decode(e,t),a!==void 0&&(a instanceof jr?Object.defineProperty(t,n,a):t[n]=a),t._currentOffset=e.pos-t._startOffset}}size(e,t,r=!0){e==null&&(e={});const a={parent:t,val:e,pointerSize:0};this.preEncode!=null&&this.preEncode.call(e);let n=0;for(let i in this.fields){const o=this.fields[i];o.size!=null&&(n+=o.size(e[i],a))}return r&&(n+=a.pointerSize),n}encode(e,t,r){let a;this.preEncode!=null&&this.preEncode.call(t,e);const n={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};n.pointerOffset=e.pos+this.size(t,n,!1);for(let o in this.fields)a=this.fields[o],a.encode!=null&&a.encode(e,t[o],n);let i=0;for(;i<n.pointers.length;){const o=n.pointers[i++];o.type.encode(e,o.val,o.parent)}}}const Jn=(s,e)=>e.reduce((t,r)=>t&&t[r],s);class J extends v{constructor(e,t={}){super(),this.type=e,this.versions=t,typeof e=="string"&&(this.versionPath=e.split("."))}decode(e,t,r=0){const a=this._setup(e,t,r);typeof this.type=="string"?a.version=Jn(t,this.versionPath):a.version=this.type.decode(e),this.versions.header&&this._parseFields(e,a,this.versions.header);const n=this.versions[a.version];if(n==null)throw new Error(`Unknown version ${a.version}`);return n instanceof J?n.decode(e,t):(this._parseFields(e,a,n),this.process!=null&&this.process.call(a,e),a)}size(e,t,r=!0){let a,n;if(!e)throw new Error("Not a fixed size");this.preEncode!=null&&this.preEncode.call(e);const i={parent:t,val:e,pointerSize:0};let o=0;if(typeof this.type!="string"&&(o+=this.type.size(e.version,i)),this.versions.header)for(a in this.versions.header)n=this.versions.header[a],n.size!=null&&(o+=n.size(e[a],i));const u=this.versions[e.version];if(u==null)throw new Error(`Unknown version ${e.version}`);for(a in u)n=u[a],n.size!=null&&(o+=n.size(e[a],i));return r&&(o+=i.pointerSize),o}encode(e,t,r){let a,n;this.preEncode!=null&&this.preEncode.call(t,e);const i={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};if(i.pointerOffset=e.pos+this.size(t,i,!1),typeof this.type!="string"&&this.type.encode(e,t.version),this.versions.header)for(a in this.versions.header)n=this.versions.header[a],n.encode!=null&&n.encode(e,t[a],i);const o=this.versions[t.version];for(a in o)n=o[a],n.encode!=null&&n.encode(e,t[a],i);let u=0;for(;u<i.pointers.length;){const c=i.pointers[u++];c.type.encode(e,c.val,c.parent)}}}class b extends u0{constructor(e,t,r={}){if(super(),this.offsetType=e,this.type=t,this.options=r,this.type==="void"&&(this.type=null),this.options.type==null&&(this.options.type="local"),this.options.allowNull==null&&(this.options.allowNull=!0),this.options.nullValue==null&&(this.options.nullValue=0),this.options.lazy==null&&(this.options.lazy=!1),this.options.relativeTo){if(typeof this.options.relativeTo!="function")throw new Error("relativeTo option must be a function");this.relativeToGetter=r.relativeTo}}decode(e,t){const r=this.offsetType.decode(e,t);if(r===this.options.nullValue&&this.options.allowNull)return null;let a;switch(this.options.type){case"local":a=t._startOffset;break;case"immediate":a=e.pos-this.offsetType.size();break;case"parent":a=t.parent._startOffset;break;default:for(var n=t;n.parent;)n=n.parent;a=n._startOffset||0}this.options.relativeTo&&(a+=this.relativeToGetter(t));const i=r+a;if(this.type!=null){let o=null;const u=()=>{if(o!=null)return o;const{pos:c}=e;return e.pos=i,o=this.type.decode(e,t),e.pos=c,o};return this.options.lazy?new jr({get:u}):u()}else return i}size(e,t){const r=t;switch(this.options.type){case"local":case"immediate":break;case"parent":t=t.parent;break;default:for(;t.parent;)t=t.parent}let{type:a}=this;if(a==null){if(!(e instanceof Nr))throw new Error("Must be a VoidPointer");({type:a}=e),e=e.value}if(e&&t){let n=a.size(e,r);t.pointerSize+=n}return this.offsetType.size()}encode(e,t,r){let a;const n=r;if(t==null){this.offsetType.encode(e,this.options.nullValue);return}switch(this.options.type){case"local":a=r.startOffset;break;case"immediate":a=e.pos+this.offsetType.size(t,n);break;case"parent":r=r.parent,a=r.startOffset;break;default:for(a=0;r.parent;)r=r.parent}this.options.relativeTo&&(a+=this.relativeToGetter(n.val)),this.offsetType.encode(e,r.pointerOffset-a);let{type:i}=this;if(i==null){if(!(t instanceof Nr))throw new Error("Must be a VoidPointer");({type:i}=t),t=t.value}return r.pointers.push({type:i,val:t,parent:n}),r.pointerOffset+=i.size(t,n)}}class Nr{constructor(e,t){this.type=e,this.value=t}}function Ue(s,e,t){return e in s?Object.defineProperty(s,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):s[e]=t,s}var Da=function s(e,t){if(e===t)return!0;if(e&&t&&typeof e=="object"&&typeof t=="object"){if(e.constructor!==t.constructor)return!1;var r,a,n;if(Array.isArray(e)){if(r=e.length,r!=t.length)return!1;for(a=r;a--!==0;)if(!s(e[a],t[a]))return!1;return!0}if(e.constructor===RegExp)return e.source===t.source&&e.flags===t.flags;if(e.valueOf!==Object.prototype.valueOf)return e.valueOf()===t.valueOf();if(e.toString!==Object.prototype.toString)return e.toString()===t.toString();if(n=Object.keys(e),r=n.length,r!==Object.keys(t).length)return!1;for(a=r;a--!==0;)if(!Object.prototype.hasOwnProperty.call(t,n[a]))return!1;for(a=r;a--!==0;){var i=n[a];if(!s(e[i],t[i]))return!1}return!0}return e!==e&&t!==t},gt={};gt.byteLength=ei;gt.toByteArray=ri;gt.fromByteArray=ni;var _e=[],We=[],Qn=typeof Uint8Array<"u"?Uint8Array:Array,wr="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";for(var U0=0,_n=wr.length;U0<_n;++U0)_e[U0]=wr[U0],We[wr.charCodeAt(U0)]=U0;We["-".charCodeAt(0)]=62;We["_".charCodeAt(0)]=63;function Ns(s){var e=s.length;if(e%4>0)throw new Error("Invalid string. Length must be a multiple of 4");var t=s.indexOf("=");t===-1&&(t=e);var r=t===e?0:4-t%4;return[t,r]}function ei(s){var e=Ns(s),t=e[0],r=e[1];return(t+r)*3/4-r}function ti(s,e,t){return(e+t)*3/4-t}function ri(s){var e,t=Ns(s),r=t[0],a=t[1],n=new Qn(ti(s,r,a)),i=0,o=a>0?r-4:r,u;for(u=0;u<o;u+=4)e=We[s.charCodeAt(u)]<<18|We[s.charCodeAt(u+1)]<<12|We[s.charCodeAt(u+2)]<<6|We[s.charCodeAt(u+3)],n[i++]=e>>16&255,n[i++]=e>>8&255,n[i++]=e&255;return a===2&&(e=We[s.charCodeAt(u)]<<2|We[s.charCodeAt(u+1)]>>4,n[i++]=e&255),a===1&&(e=We[s.charCodeAt(u)]<<10|We[s.charCodeAt(u+1)]<<4|We[s.charCodeAt(u+2)]>>2,n[i++]=e>>8&255,n[i++]=e&255),n}function ai(s){return _e[s>>18&63]+_e[s>>12&63]+_e[s>>6&63]+_e[s&63]}function si(s,e,t){for(var r,a=[],n=e;n<t;n+=3)r=(s[n]<<16&16711680)+(s[n+1]<<8&65280)+(s[n+2]&255),a.push(ai(r));return a.join("")}function ni(s){for(var e,t=s.length,r=t%3,a=[],n=16383,i=0,o=t-r;i<o;i+=n)a.push(si(s,i,i+n>o?o:i+n));return r===1?(e=s[t-1],a.push(_e[e>>2]+_e[e<<4&63]+"==")):r===2&&(e=(s[t-2]<<8)+s[t-1],a.push(_e[e>>10]+_e[e>>4&63]+_e[e<<2&63]+"=")),a.join("")}var Zr=0,Us=-3;function ft(){this.table=new Uint16Array(16),this.trans=new Uint16Array(288)}function ii(s,e){this.source=s,this.sourceIndex=0,this.tag=0,this.bitcount=0,this.dest=e,this.destLen=0,this.ltree=new ft,this.dtree=new ft}var Vs=new ft,Gs=new ft,Jr=new Uint8Array(30),Qr=new Uint16Array(30),zs=new Uint8Array(30),Ws=new Uint16Array(30),li=new Uint8Array([16,17,18,0,8,7,9,6,10,5,11,4,12,3,13,2,14,1,15]),Ba=new ft,je=new Uint8Array(288+32);function Hs(s,e,t,r){var a,n;for(a=0;a<t;++a)s[a]=0;for(a=0;a<30-t;++a)s[a+t]=a/t|0;for(n=r,a=0;a<30;++a)e[a]=n,n+=1<<s[a]}function oi(s,e){var t;for(t=0;t<7;++t)s.table[t]=0;for(s.table[7]=24,s.table[8]=152,s.table[9]=112,t=0;t<24;++t)s.trans[t]=256+t;for(t=0;t<144;++t)s.trans[24+t]=t;for(t=0;t<8;++t)s.trans[24+144+t]=280+t;for(t=0;t<112;++t)s.trans[24+144+8+t]=144+t;for(t=0;t<5;++t)e.table[t]=0;for(e.table[5]=32,t=0;t<32;++t)e.trans[t]=t}var La=new Uint16Array(16);function yr(s,e,t,r){var a,n;for(a=0;a<16;++a)s.table[a]=0;for(a=0;a<r;++a)s.table[e[t+a]]++;for(s.table[0]=0,n=0,a=0;a<16;++a)La[a]=n,n+=s.table[a];for(a=0;a<r;++a)e[t+a]&&(s.trans[La[e[t+a]]++]=a)}function ui(s){s.bitcount--||(s.tag=s.source[s.sourceIndex++],s.bitcount=7);var e=s.tag&1;return s.tag>>>=1,e}function Je(s,e,t){if(!e)return t;for(;s.bitcount<24;)s.tag|=s.source[s.sourceIndex++]<<s.bitcount,s.bitcount+=8;var r=s.tag&65535>>>16-e;return s.tag>>>=e,s.bitcount-=e,r+t}function Ur(s,e){for(;s.bitcount<24;)s.tag|=s.source[s.sourceIndex++]<<s.bitcount,s.bitcount+=8;var t=0,r=0,a=0,n=s.tag;do r=2*r+(n&1),n>>>=1,++a,t+=e.table[a],r-=e.table[a];while(r>=0);return s.tag=n,s.bitcount-=a,e.trans[t+r]}function ci(s,e,t){var r,a,n,i,o,u;for(r=Je(s,5,257),a=Je(s,5,1),n=Je(s,4,4),i=0;i<19;++i)je[i]=0;for(i=0;i<n;++i){var c=Je(s,3,0);je[li[i]]=c}for(yr(Ba,je,0,19),o=0;o<r+a;){var d=Ur(s,Ba);switch(d){case 16:var f=je[o-1];for(u=Je(s,2,3);u;--u)je[o++]=f;break;case 17:for(u=Je(s,3,3);u;--u)je[o++]=0;break;case 18:for(u=Je(s,7,11);u;--u)je[o++]=0;break;default:je[o++]=d;break}}yr(e,je,0,r),yr(t,je,r,a)}function Ma(s,e,t){for(;;){var r=Ur(s,e);if(r===256)return Zr;if(r<256)s.dest[s.destLen++]=r;else{var a,n,i,o;for(r-=257,a=Je(s,Jr[r],Qr[r]),n=Ur(s,t),i=s.destLen-Je(s,zs[n],Ws[n]),o=i;o<i+a;++o)s.dest[s.destLen++]=s.dest[o]}}}function fi(s){for(var e,t,r;s.bitcount>8;)s.sourceIndex--,s.bitcount-=8;if(e=s.source[s.sourceIndex+1],e=256*e+s.source[s.sourceIndex],t=s.source[s.sourceIndex+3],t=256*t+s.source[s.sourceIndex+2],e!==(~t&65535))return Us;for(s.sourceIndex+=4,r=e;r;--r)s.dest[s.destLen++]=s.source[s.sourceIndex++];return s.bitcount=0,Zr}function di(s,e){var t=new ii(s,e),r,a,n;do{switch(r=ui(t),a=Je(t,2,0),a){case 0:n=fi(t);break;case 1:n=Ma(t,Vs,Gs);break;case 2:ci(t,t.ltree,t.dtree),n=Ma(t,t.ltree,t.dtree);break;default:n=Us}if(n!==Zr)throw new Error("Data error")}while(!r);return t.destLen<t.dest.length?typeof t.dest.slice=="function"?t.dest.slice(0,t.destLen):t.dest.subarray(0,t.destLen):t.dest}oi(Vs,Gs);Hs(Jr,Qr,4,3);Hs(zs,Ws,2,1);Jr[28]=0;Qr[28]=258;var qs=di;const hi=new Uint8Array(new Uint32Array([305419896]).buffer)[0]===18,Ra=(s,e,t)=>{let r=s[e];s[e]=s[t],s[t]=r},pi=s=>{const e=s.length;for(let t=0;t<e;t+=4)Ra(s,t,t+3),Ra(s,t+1,t+2)},bi=s=>{hi&&pi(s)};var gi={swap32LE:bi};const Na=qs,{swap32LE:vi}=gi,_r=6+5,T0=5,xi=_r-T0,mi=65536>>_r,wi=1<<xi,yi=wi-1,Dt=2,Ci=1<<T0,Cr=Ci-1,$s=65536>>T0,Si=1024>>T0,Ai=$s+Si,ki=Ai,Ii=32,Oi=ki+Ii,Pi=1<<Dt;class Ei{constructor(e){const t=typeof e.readUInt32BE=="function"&&typeof e.slice=="function";if(t||e instanceof Uint8Array){let r;if(t)this.highStart=e.readUInt32LE(0),this.errorValue=e.readUInt32LE(4),r=e.readUInt32LE(8),e=e.slice(12);else{const a=new DataView(e.buffer);this.highStart=a.getUint32(0,!0),this.errorValue=a.getUint32(4,!0),r=a.getUint32(8,!0),e=e.subarray(12)}e=Na(e,new Uint8Array(r)),e=Na(e,new Uint8Array(r)),vi(e),this.data=new Uint32Array(e.buffer)}else({data:this.data,highStart:this.highStart,errorValue:this.errorValue}=e)}get(e){let t;return e<0||e>1114111?this.errorValue:e<55296||e>56319&&e<=65535?(t=(this.data[e>>T0]<<Dt)+(e&Cr),this.data[t]):e<=65535?(t=(this.data[$s+(e-55296>>T0)]<<Dt)+(e&Cr),this.data[t]):e<this.highStart?(t=this.data[Oi-mi+(e>>_r)],t=this.data[t+(e>>T0&yi)],t=(t<<Dt)+(e&Cr),this.data[t]):this.data[this.data.length-Pi]}}var Jt=Ei;function B0(s){return s&&s.__esModule?s.default:s}var y0={};y0=JSON.parse('{"categories":["Cc","Zs","Po","Sc","Ps","Pe","Sm","Pd","Nd","Lu","Sk","Pc","Ll","So","Lo","Pi","Cf","No","Pf","Lt","Lm","Mn","Me","Mc","Nl","Zl","Zp","Cs","Co"],"combiningClasses":["Not_Reordered","Above","Above_Right","Below","Attached_Above_Right","Attached_Below","Overlay","Iota_Subscript","Double_Below","Double_Above","Below_Right","Above_Left","CCC10","CCC11","CCC12","CCC13","CCC14","CCC15","CCC16","CCC17","CCC18","CCC19","CCC20","CCC21","CCC22","CCC23","CCC24","CCC25","CCC30","CCC31","CCC32","CCC27","CCC28","CCC29","CCC33","CCC34","CCC35","CCC36","Nukta","Virama","CCC84","CCC91","CCC103","CCC107","CCC118","CCC122","CCC129","CCC130","CCC132","Attached_Above","Below_Left","Left","Kana_Voicing","CCC26","Right"],"scripts":["Common","Latin","Bopomofo","Inherited","Greek","Coptic","Cyrillic","Armenian","Hebrew","Arabic","Syriac","Thaana","Nko","Samaritan","Mandaic","Devanagari","Bengali","Gurmukhi","Gujarati","Oriya","Tamil","Telugu","Kannada","Malayalam","Sinhala","Thai","Lao","Tibetan","Myanmar","Georgian","Hangul","Ethiopic","Cherokee","Canadian_Aboriginal","Ogham","Runic","Tagalog","Hanunoo","Buhid","Tagbanwa","Khmer","Mongolian","Limbu","Tai_Le","New_Tai_Lue","Buginese","Tai_Tham","Balinese","Sundanese","Batak","Lepcha","Ol_Chiki","Braille","Glagolitic","Tifinagh","Han","Hiragana","Katakana","Yi","Lisu","Vai","Bamum","Syloti_Nagri","Phags_Pa","Saurashtra","Kayah_Li","Rejang","Javanese","Cham","Tai_Viet","Meetei_Mayek","null","Linear_B","Lycian","Carian","Old_Italic","Gothic","Old_Permic","Ugaritic","Old_Persian","Deseret","Shavian","Osmanya","Osage","Elbasan","Caucasian_Albanian","Linear_A","Cypriot","Imperial_Aramaic","Palmyrene","Nabataean","Hatran","Phoenician","Lydian","Meroitic_Hieroglyphs","Meroitic_Cursive","Kharoshthi","Old_South_Arabian","Old_North_Arabian","Manichaean","Avestan","Inscriptional_Parthian","Inscriptional_Pahlavi","Psalter_Pahlavi","Old_Turkic","Old_Hungarian","Hanifi_Rohingya","Old_Sogdian","Sogdian","Elymaic","Brahmi","Kaithi","Sora_Sompeng","Chakma","Mahajani","Sharada","Khojki","Multani","Khudawadi","Grantha","Newa","Tirhuta","Siddham","Modi","Takri","Ahom","Dogra","Warang_Citi","Nandinagari","Zanabazar_Square","Soyombo","Pau_Cin_Hau","Bhaiksuki","Marchen","Masaram_Gondi","Gunjala_Gondi","Makasar","Cuneiform","Egyptian_Hieroglyphs","Anatolian_Hieroglyphs","Mro","Bassa_Vah","Pahawh_Hmong","Medefaidrin","Miao","Tangut","Nushu","Duployan","SignWriting","Nyiakeng_Puachue_Hmong","Wancho","Mende_Kikakui","Adlam"],"eaw":["N","Na","A","W","H","F"]}');const ea=new Jt(gt.toByteArray("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")),Ti=Math.log2||(s=>Math.log(s)/Math.LN2),Qt=s=>Ti(s)+1|0,Fi=Qt(B0(y0).categories.length-1),Xs=Qt(B0(y0).combiningClasses.length-1),ta=Qt(B0(y0).scripts.length-1),ra=Qt(B0(y0).eaw.length-1),aa=10,Di=Xs+ta+ra+aa,Bi=ta+ra+aa,Li=ra+aa,Mi=(1<<Fi)-1,Ri=(1<<Xs)-1,Ni=(1<<ta)-1;function _t(s){const e=ea.get(s);return B0(y0).categories[e>>Di&Mi]}function Ui(s){const e=ea.get(s);return B0(y0).combiningClasses[e>>Bi&Ri]}function Ys(s){const e=ea.get(s);return B0(y0).scripts[e>>Li&Ni]}function Ua(s){return _t(s)==="Nd"}function Ks(s){const e=_t(s);return e==="Mn"||e==="Me"||e==="Mc"}var Sr=1,Ar=0;class Vi{constructor(e){this.stateTable=e.stateTable,this.accepting=e.accepting,this.tags=e.tags}match(e){var t=this;return{*[Symbol.iterator](){for(var r=Sr,a=null,n=null,i=null,o=0;o<e.length;o++){var u=e[o];i=r,r=t.stateTable[r][u],r===Ar&&(a!=null&&n!=null&&n>=a&&(yield[a,n,t.tags[i]]),r=t.stateTable[Sr][u],a=null),r!==Ar&&a==null&&(a=o),t.accepting[r]&&(n=o),r===Ar&&(r=Sr)}a!=null&&n!=null&&n>=a&&(yield[a,n,t.tags[r]])}}}apply(e,t){for(var[r,a,n]of this.match(e))for(var i of n)typeof t[i]=="function"&&t[i](r,a,e.slice(r,a+1))}}var js=Vi,it={},Gi={get exports(){return it},set exports(s){it=s}};(function(s){var e=function(){function t(x,C){return C!=null&&x instanceof C}var r;try{r=Map}catch{r=function(){}}var a;try{a=Set}catch{a=function(){}}var n;try{n=Promise}catch{n=function(){}}function i(x,C,A,D,$){typeof C=="object"&&(A=C.depth,D=C.prototype,$=C.includeNonEnumerable,C=C.circular);var B=[],R=[],m=typeof Buffer<"u";typeof C>"u"&&(C=!0),typeof A>"u"&&(A=1/0);function T(h,j){if(h===null)return null;if(j===0)return h;var H,N;if(typeof h!="object")return h;if(t(h,r))H=new r;else if(t(h,a))H=new a;else if(t(h,n))H=new n(function(Pe,Ve){h.then(function(de){Pe(T(de,j-1))},function(de){Ve(T(de,j-1))})});else if(i.__isArray(h))H=[];else if(i.__isRegExp(h))H=new RegExp(h.source,f(h)),h.lastIndex&&(H.lastIndex=h.lastIndex);else if(i.__isDate(h))H=new Date(h.getTime());else{if(m&&Buffer.isBuffer(h))return Buffer.allocUnsafe?H=Buffer.allocUnsafe(h.length):H=new Buffer(h.length),h.copy(H),H;t(h,Error)?H=Object.create(h):typeof D>"u"?(N=Object.getPrototypeOf(h),H=Object.create(N)):(H=Object.create(D),N=D)}if(C){var re=B.indexOf(h);if(re!=-1)return R[re];B.push(h),R.push(H)}t(h,r)&&h.forEach(function(Pe,Ve){var de=T(Ve,j-1),we=T(Pe,j-1);H.set(de,we)}),t(h,a)&&h.forEach(function(Pe){var Ve=T(Pe,j-1);H.add(Ve)});for(var z in h){var ae;N&&(ae=Object.getOwnPropertyDescriptor(N,z)),!(ae&&ae.set==null)&&(H[z]=T(h[z],j-1))}if(Object.getOwnPropertySymbols)for(var xe=Object.getOwnPropertySymbols(h),z=0;z<xe.length;z++){var X=xe[z],ee=Object.getOwnPropertyDescriptor(h,X);ee&&!ee.enumerable&&!$||(H[X]=T(h[X],j-1),ee.enumerable||Object.defineProperty(H,X,{enumerable:!1}))}if($)for(var Y=Object.getOwnPropertyNames(h),z=0;z<Y.length;z++){var K=Y[z],ee=Object.getOwnPropertyDescriptor(h,K);ee&&ee.enumerable||(H[K]=T(h[K],j-1),Object.defineProperty(H,K,{enumerable:!1}))}return H}return T(x,A)}i.clonePrototype=function(C){if(C===null)return null;var A=function(){};return A.prototype=C,new A};function o(x){return Object.prototype.toString.call(x)}i.__objToStr=o;function u(x){return typeof x=="object"&&o(x)==="[object Date]"}i.__isDate=u;function c(x){return typeof x=="object"&&o(x)==="[object Array]"}i.__isArray=c;function d(x){return typeof x=="object"&&o(x)==="[object RegExp]"}i.__isRegExp=d;function f(x){var C="";return x.global&&(C+="g"),x.ignoreCase&&(C+="i"),x.multiline&&(C+="m"),C}return i.__getRegExpFlags=f,i}();s.exports&&(s.exports=e)})(Gi);var tt={},Ut={};function Zs(s){this.buffer=s,this.pos=0}Zs.prototype.read=function(s,e,t){this.pos+t>this.buffer.length&&(t=this.buffer.length-this.pos);for(var r=0;r<t;r++)s[e+r]=this.buffer[this.pos+r];return this.pos+=t,t};Ut.BrotliInput=Zs;function Js(s){this.buffer=s,this.pos=0}Js.prototype.write=function(s,e){if(this.pos+e>this.buffer.length)throw new Error("Output buffer is not large enough");return this.buffer.set(s.subarray(0,e),this.pos),this.pos+=e,e};Ut.BrotliOutput=Js;var O0=4096,zi=2*O0+32,Qs=2*O0-1,Wi=new Uint32Array([0,1,3,7,15,31,63,127,255,511,1023,2047,4095,8191,16383,32767,65535,131071,262143,524287,1048575,2097151,4194303,8388607,16777215]);function L0(s){this.buf_=new Uint8Array(zi),this.input_=s,this.reset()}L0.READ_SIZE=O0;L0.IBUF_MASK=Qs;L0.prototype.reset=function(){this.buf_ptr_=0,this.val_=0,this.pos_=0,this.bit_pos_=0,this.bit_end_pos_=0,this.eos_=0,this.readMoreInput();for(var s=0;s<4;s++)this.val_|=this.buf_[this.pos_]<<8*s,++this.pos_;return this.bit_end_pos_>0};L0.prototype.readMoreInput=function(){if(!(this.bit_end_pos_>256))if(this.eos_){if(this.bit_pos_>this.bit_end_pos_)throw new Error("Unexpected end of input "+this.bit_pos_+" "+this.bit_end_pos_)}else{var s=this.buf_ptr_,e=this.input_.read(this.buf_,s,O0);if(e<0)throw new Error("Unexpected end of input");if(e<O0){this.eos_=1;for(var t=0;t<32;t++)this.buf_[s+e+t]=0}if(s===0){for(var t=0;t<32;t++)this.buf_[(O0<<1)+t]=this.buf_[t];this.buf_ptr_=O0}else this.buf_ptr_=0;this.bit_end_pos_+=e<<3}};L0.prototype.fillBitWindow=function(){for(;this.bit_pos_>=8;)this.val_>>>=8,this.val_|=this.buf_[this.pos_&Qs]<<24,++this.pos_,this.bit_pos_=this.bit_pos_-8>>>0,this.bit_end_pos_=this.bit_end_pos_-8>>>0};L0.prototype.readBits=function(s){32-this.bit_pos_<s&&this.fillBitWindow();var e=this.val_>>>this.bit_pos_&Wi[s];return this.bit_pos_+=s,e};var Hi=L0,f0={},kr={},Ir,Va;function qi(){return Va||(Va=1,Ir=""),Ir}var Ga;function $i(){if(Ga)return kr;Ga=1;var s=gt;return kr.init=function(){var e=en().BrotliDecompressBuffer,t=s.toByteArray(qi());return e(t)},kr}var za;function _s(){if(za)return f0;za=1;var s=$i();return f0.init=function(){f0.dictionary=s.init()},f0.offsetsByLength=new Uint32Array([0,0,0,0,0,4096,9216,21504,35840,44032,53248,63488,74752,87040,93696,100864,104704,106752,108928,113536,115968,118528,119872,121280,122016]),f0.sizeBitsByLength=new Uint8Array([0,0,0,0,10,10,11,11,10,10,10,10,10,9,9,8,7,7,8,7,7,6,6,5,5]),f0.minDictionaryWordLength=4,f0.maxDictionaryWordLength=24,f0}var Vt={};function W0(s,e){this.bits=s,this.value=e}Vt.HuffmanCode=W0;var G0=15;function Wa(s,e){for(var t=1<<e-1;s&t;)t>>=1;return(s&t-1)+t}function Ha(s,e,t,r,a){do r-=t,s[e+r]=new W0(a.bits,a.value);while(r>0)}function Xi(s,e,t){for(var r=1<<e-t;e<G0&&(r-=s[e],!(r<=0));)++e,r<<=1;return e-t}Vt.BrotliBuildHuffmanTable=function(s,e,t,r,a){var n=e,i,o,u,c,d,f,x,C,A,D,$,B=new Int32Array(G0+1),R=new Int32Array(G0+1);for($=new Int32Array(a),u=0;u<a;u++)B[r[u]]++;for(R[1]=0,o=1;o<G0;o++)R[o+1]=R[o]+B[o];for(u=0;u<a;u++)r[u]!==0&&($[R[r[u]]++]=u);if(C=t,A=1<<C,D=A,R[G0]===1){for(c=0;c<D;++c)s[e+c]=new W0(0,$[0]&65535);return D}for(c=0,u=0,o=1,d=2;o<=t;++o,d<<=1)for(;B[o]>0;--B[o])i=new W0(o&255,$[u++]&65535),Ha(s,e+c,d,A,i),c=Wa(c,o);for(x=D-1,f=-1,o=t+1,d=2;o<=G0;++o,d<<=1)for(;B[o]>0;--B[o])(c&x)!==f&&(e+=A,C=Xi(B,o,t),A=1<<C,D+=A,f=c&x,s[n+f]=new W0(C+t&255,e-n-f&65535)),i=new W0(o-t&255,$[u++]&65535),Ha(s,e+(c>>t),d,A,i),c=Wa(c,o);return D};var sa={};sa.lookup=new Uint8Array([0,0,0,0,0,0,0,0,0,4,4,0,0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,12,16,12,12,20,12,16,24,28,12,12,32,12,36,12,44,44,44,44,44,44,44,44,44,44,32,32,24,40,28,12,12,48,52,52,52,48,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,48,52,52,52,52,52,24,12,28,12,12,12,56,60,60,60,56,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,56,60,60,60,60,60,24,12,28,12,0,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,1,1,1,1,1,1,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,7,0,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,56,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,0,0,0,0,1,1,1,1,2,2,2,2,3,3,3,3,4,4,4,4,5,5,5,5,6,6,6,6,7,7,7,7,8,8,8,8,9,9,9,9,10,10,10,10,11,11,11,11,12,12,12,12,13,13,13,13,14,14,14,14,15,15,15,15,16,16,16,16,17,17,17,17,18,18,18,18,19,19,19,19,20,20,20,20,21,21,21,21,22,22,22,22,23,23,23,23,24,24,24,24,25,25,25,25,26,26,26,26,27,27,27,27,28,28,28,28,29,29,29,29,30,30,30,30,31,31,31,31,32,32,32,32,33,33,33,33,34,34,34,34,35,35,35,35,36,36,36,36,37,37,37,37,38,38,38,38,39,39,39,39,40,40,40,40,41,41,41,41,42,42,42,42,43,43,43,43,44,44,44,44,45,45,45,45,46,46,46,46,47,47,47,47,48,48,48,48,49,49,49,49,50,50,50,50,51,51,51,51,52,52,52,52,53,53,53,53,54,54,54,54,55,55,55,55,56,56,56,56,57,57,57,57,58,58,58,58,59,59,59,59,60,60,60,60,61,61,61,61,62,62,62,62,63,63,63,63,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);sa.lookupOffsets=new Uint16Array([1024,1536,1280,1536,0,256,768,512]);var Y0={};function E(s,e){this.offset=s,this.nbits=e}Y0.kBlockLengthPrefixCode=[new E(1,2),new E(5,2),new E(9,2),new E(13,2),new E(17,3),new E(25,3),new E(33,3),new E(41,3),new E(49,4),new E(65,4),new E(81,4),new E(97,4),new E(113,5),new E(145,5),new E(177,5),new E(209,5),new E(241,6),new E(305,6),new E(369,7),new E(497,8),new E(753,9),new E(1265,10),new E(2289,11),new E(4337,12),new E(8433,13),new E(16625,24)];Y0.kInsertLengthPrefixCode=[new E(0,0),new E(1,0),new E(2,0),new E(3,0),new E(4,0),new E(5,0),new E(6,1),new E(8,1),new E(10,2),new E(14,2),new E(18,3),new E(26,3),new E(34,4),new E(50,4),new E(66,5),new E(98,5),new E(130,6),new E(194,7),new E(322,8),new E(578,9),new E(1090,10),new E(2114,12),new E(6210,14),new E(22594,24)];Y0.kCopyLengthPrefixCode=[new E(2,0),new E(3,0),new E(4,0),new E(5,0),new E(6,0),new E(7,0),new E(8,0),new E(9,0),new E(10,1),new E(12,1),new E(14,2),new E(18,2),new E(22,3),new E(30,3),new E(38,4),new E(54,4),new E(70,5),new E(102,5),new E(134,6),new E(198,7),new E(326,8),new E(582,9),new E(1094,10),new E(2118,24)];Y0.kInsertRangeLut=[0,0,8,8,0,16,8,16,16];Y0.kCopyRangeLut=[0,8,0,8,16,0,16,8,16];var rt={},qa;function Yi(){if(qa)return rt;qa=1;var s=_s(),e=0,t=1,r=2,a=3,n=4,i=5,o=6,u=7,c=8,d=9,f=10,x=11,C=12,A=13,D=14,$=15,B=16,R=17,m=18,T=20;function h(N,re,z){this.prefix=new Uint8Array(N.length),this.transform=re,this.suffix=new Uint8Array(z.length);for(var ae=0;ae<N.length;ae++)this.prefix[ae]=N.charCodeAt(ae);for(var ae=0;ae<z.length;ae++)this.suffix[ae]=z.charCodeAt(ae)}var j=[new h("",e,""),new h("",e," "),new h(" ",e," "),new h("",C,""),new h("",f," "),new h("",e," the "),new h(" ",e,""),new h("s ",e," "),new h("",e," of "),new h("",f,""),new h("",e," and "),new h("",A,""),new h("",t,""),new h(", ",e," "),new h("",e,", "),new h(" ",f," "),new h("",e," in "),new h("",e," to "),new h("e ",e," "),new h("",e,'"'),new h("",e,"."),new h("",e,'">'),new h("",e,`
`),new h("",a,""),new h("",e,"]"),new h("",e," for "),new h("",D,""),new h("",r,""),new h("",e," a "),new h("",e," that "),new h(" ",f,""),new h("",e,". "),new h(".",e,""),new h(" ",e,", "),new h("",$,""),new h("",e," with "),new h("",e,"'"),new h("",e," from "),new h("",e," by "),new h("",B,""),new h("",R,""),new h(" the ",e,""),new h("",n,""),new h("",e,". The "),new h("",x,""),new h("",e," on "),new h("",e," as "),new h("",e," is "),new h("",u,""),new h("",t,"ing "),new h("",e,`
	`),new h("",e,":"),new h(" ",e,". "),new h("",e,"ed "),new h("",T,""),new h("",m,""),new h("",o,""),new h("",e,"("),new h("",f,", "),new h("",c,""),new h("",e," at "),new h("",e,"ly "),new h(" the ",e," of "),new h("",i,""),new h("",d,""),new h(" ",f,", "),new h("",f,'"'),new h(".",e,"("),new h("",x," "),new h("",f,'">'),new h("",e,'="'),new h(" ",e,"."),new h(".com/",e,""),new h(" the ",e," of the "),new h("",f,"'"),new h("",e,". This "),new h("",e,","),new h(".",e," "),new h("",f,"("),new h("",f,"."),new h("",e," not "),new h(" ",e,'="'),new h("",e,"er "),new h(" ",x," "),new h("",e,"al "),new h(" ",x,""),new h("",e,"='"),new h("",x,'"'),new h("",f,". "),new h(" ",e,"("),new h("",e,"ful "),new h(" ",f,". "),new h("",e,"ive "),new h("",e,"less "),new h("",x,"'"),new h("",e,"est "),new h(" ",f,"."),new h("",x,'">'),new h(" ",e,"='"),new h("",f,","),new h("",e,"ize "),new h("",x,"."),new h("Â ",e,""),new h(" ",e,","),new h("",f,'="'),new h("",x,'="'),new h("",e,"ous "),new h("",x,", "),new h("",f,"='"),new h(" ",f,","),new h(" ",x,'="'),new h(" ",x,", "),new h("",x,","),new h("",x,"("),new h("",x,". "),new h(" ",x,"."),new h("",x,"='"),new h(" ",x,". "),new h(" ",f,'="'),new h(" ",x,"='"),new h(" ",f,"='")];rt.kTransforms=j,rt.kNumTransforms=j.length;function H(N,re){return N[re]<192?(N[re]>=97&&N[re]<=122&&(N[re]^=32),1):N[re]<224?(N[re+1]^=32,2):(N[re+2]^=5,3)}return rt.transformDictionaryWord=function(N,re,z,ae,xe){var X=j[xe].prefix,ee=j[xe].suffix,Y=j[xe].transform,K=Y<C?0:Y-(C-1),Pe=0,Ve=re,de;K>ae&&(K=ae);for(var we=0;we<X.length;)N[re++]=X[we++];for(z+=K,ae-=K,Y<=d&&(ae-=Y),Pe=0;Pe<ae;Pe++)N[re++]=s.dictionary[z+Pe];if(de=re-ae,Y===f)H(N,de);else if(Y===x)for(;ae>0;){var Ee=H(N,de);de+=Ee,ae-=Ee}for(var De=0;De<ee.length;)N[re++]=ee[De++];return re-Ve},rt}var $a;function en(){if($a)return tt;$a=1;var s=Ut.BrotliInput,e=Ut.BrotliOutput,t=Hi,r=_s(),a=Vt.HuffmanCode,n=Vt.BrotliBuildHuffmanTable,i=sa,o=Y0,u=Yi(),c=8,d=16,f=256,x=704,C=26,A=6,D=2,$=8,B=255,R=1080,m=18,T=new Uint8Array([1,2,3,4,0,5,17,6,16,7,8,9,10,11,12,13,14,15]),h=16,j=new Uint8Array([3,2,1,0,3,3,3,3,3,3,2,2,2,2,2,2]),H=new Int8Array([0,0,0,0,-1,1,-2,2,-3,3,-1,1,-2,2,-3,3]),N=new Uint16Array([256,402,436,468,500,534,566,598,630,662,694,726,758,790,822,854,886,920,952,984,1016,1048,1080]);function re(P){var S;return P.readBits(1)===0?16:(S=P.readBits(3),S>0?17+S:(S=P.readBits(3),S>0?8+S:17))}function z(P){if(P.readBits(1)){var S=P.readBits(3);return S===0?1:P.readBits(S)+(1<<S)}return 0}function ae(){this.meta_block_length=0,this.input_end=0,this.is_uncompressed=0,this.is_metadata=!1}function xe(P){var S=new ae,k,y,L;if(S.input_end=P.readBits(1),S.input_end&&P.readBits(1))return S;if(k=P.readBits(2)+4,k===7){if(S.is_metadata=!0,P.readBits(1)!==0)throw new Error("Invalid reserved bit");if(y=P.readBits(2),y===0)return S;for(L=0;L<y;L++){var W=P.readBits(8);if(L+1===y&&y>1&&W===0)throw new Error("Invalid size byte");S.meta_block_length|=W<<L*8}}else for(L=0;L<k;++L){var M=P.readBits(4);if(L+1===k&&k>4&&M===0)throw new Error("Invalid size nibble");S.meta_block_length|=M<<L*4}return++S.meta_block_length,!S.input_end&&!S.is_metadata&&(S.is_uncompressed=P.readBits(1)),S}function X(P,S,k){var y;return k.fillBitWindow(),S+=k.val_>>>k.bit_pos_&B,y=P[S].bits-$,y>0&&(k.bit_pos_+=$,S+=P[S].value,S+=k.val_>>>k.bit_pos_&(1<<y)-1),k.bit_pos_+=P[S].bits,P[S].value}function ee(P,S,k,y){for(var L=0,W=c,M=0,U=0,Q=32768,G=[],F=0;F<32;F++)G.push(new a(0,0));for(n(G,0,5,P,m);L<S&&Q>0;){var ie=0,me;if(y.readMoreInput(),y.fillBitWindow(),ie+=y.val_>>>y.bit_pos_&31,y.bit_pos_+=G[ie].bits,me=G[ie].value&255,me<d)M=0,k[L++]=me,me!==0&&(W=me,Q-=32768>>me);else{var ye=me-14,Be,Te,oe=0;if(me===d&&(oe=W),U!==oe&&(M=0,U=oe),Be=M,M>0&&(M-=2,M<<=ye),M+=y.readBits(ye)+3,Te=M-Be,L+Te>S)throw new Error("[ReadHuffmanCodeLengths] symbol + repeat_delta > num_symbols");for(var Ce=0;Ce<Te;Ce++)k[L+Ce]=U;L+=Te,U!==0&&(Q-=Te<<15-U)}}if(Q!==0)throw new Error("[ReadHuffmanCodeLengths] space = "+Q);for(;L<S;L++)k[L]=0}function Y(P,S,k,y){var L=0,W,M=new Uint8Array(P);if(y.readMoreInput(),W=y.readBits(2),W===1){for(var U,Q=P-1,G=0,F=new Int32Array(4),ie=y.readBits(2)+1;Q;)Q>>=1,++G;for(U=0;U<ie;++U)F[U]=y.readBits(G)%P,M[F[U]]=2;switch(M[F[0]]=1,ie){case 1:break;case 3:if(F[0]===F[1]||F[0]===F[2]||F[1]===F[2])throw new Error("[ReadHuffmanCode] invalid symbols");break;case 2:if(F[0]===F[1])throw new Error("[ReadHuffmanCode] invalid symbols");M[F[1]]=1;break;case 4:if(F[0]===F[1]||F[0]===F[2]||F[0]===F[3]||F[1]===F[2]||F[1]===F[3]||F[2]===F[3])throw new Error("[ReadHuffmanCode] invalid symbols");y.readBits(1)?(M[F[2]]=3,M[F[3]]=3):M[F[0]]=2;break}}else{var U,me=new Uint8Array(m),ye=32,Be=0,Te=[new a(2,0),new a(2,4),new a(2,3),new a(3,2),new a(2,0),new a(2,4),new a(2,3),new a(4,1),new a(2,0),new a(2,4),new a(2,3),new a(3,2),new a(2,0),new a(2,4),new a(2,3),new a(4,5)];for(U=W;U<m&&ye>0;++U){var oe=T[U],Ce=0,ze;y.fillBitWindow(),Ce+=y.val_>>>y.bit_pos_&15,y.bit_pos_+=Te[Ce].bits,ze=Te[Ce].value,me[oe]=ze,ze!==0&&(ye-=32>>ze,++Be)}if(!(Be===1||ye===0))throw new Error("[ReadHuffmanCode] invalid num_codes or space");ee(me,P,M,y)}if(L=n(S,k,$,M,P),L===0)throw new Error("[ReadHuffmanCode] BuildHuffmanTable failed: ");return L}function K(P,S,k){var y,L;return y=X(P,S,k),L=o.kBlockLengthPrefixCode[y].nbits,o.kBlockLengthPrefixCode[y].offset+k.readBits(L)}function Pe(P,S,k){var y;return P<h?(k+=j[P],k&=3,y=S[k]+H[P]):y=P-h+1,y}function Ve(P,S){for(var k=P[S],y=S;y;--y)P[y]=P[y-1];P[0]=k}function de(P,S){var k=new Uint8Array(256),y;for(y=0;y<256;++y)k[y]=y;for(y=0;y<S;++y){var L=P[y];P[y]=k[L],L&&Ve(k,L)}}function we(P,S){this.alphabet_size=P,this.num_htrees=S,this.codes=new Array(S+S*N[P+31>>>5]),this.htrees=new Uint32Array(S)}we.prototype.decode=function(P){var S,k,y=0;for(S=0;S<this.num_htrees;++S)this.htrees[S]=y,k=Y(this.alphabet_size,this.codes,y,P),y+=k};function Ee(P,S){var k={num_htrees:null,context_map:null},y,L=0,W,M;S.readMoreInput();var U=k.num_htrees=z(S)+1,Q=k.context_map=new Uint8Array(P);if(U<=1)return k;for(y=S.readBits(1),y&&(L=S.readBits(4)+1),W=[],M=0;M<R;M++)W[M]=new a(0,0);for(Y(U+L,W,0,S),M=0;M<P;){var G;if(S.readMoreInput(),G=X(W,0,S),G===0)Q[M]=0,++M;else if(G<=L)for(var F=1+(1<<G)+S.readBits(G);--F;){if(M>=P)throw new Error("[DecodeContextMap] i >= context_map_size");Q[M]=0,++M}else Q[M]=G-L,++M}return S.readBits(1)&&de(Q,P),k}function De(P,S,k,y,L,W,M){var U=k*2,Q=k,G=X(S,k*R,M),F;G===0?F=L[U+(W[Q]&1)]:G===1?F=L[U+(W[Q]-1&1)]+1:F=G-2,F>=P&&(F-=P),y[k]=F,L[U+(W[Q]&1)]=F,++W[Q]}function ne(P,S,k,y,L,W){var M=L+1,U=k&L,Q=W.pos_&t.IBUF_MASK,G;if(S<8||W.bit_pos_+(S<<3)<W.bit_end_pos_){for(;S-- >0;)W.readMoreInput(),y[U++]=W.readBits(8),U===M&&(P.write(y,M),U=0);return}if(W.bit_end_pos_<32)throw new Error("[CopyUncompressedBlockToOutput] br.bit_end_pos_ < 32");for(;W.bit_pos_<32;)y[U]=W.val_>>>W.bit_pos_,W.bit_pos_+=8,++U,--S;if(G=W.bit_end_pos_-W.bit_pos_>>3,Q+G>t.IBUF_MASK){for(var F=t.IBUF_MASK+1-Q,ie=0;ie<F;ie++)y[U+ie]=W.buf_[Q+ie];G-=F,U+=F,S-=F,Q=0}for(var ie=0;ie<G;ie++)y[U+ie]=W.buf_[Q+ie];if(U+=G,S-=G,U>=M){P.write(y,M),U-=M;for(var ie=0;ie<U;ie++)y[ie]=y[M+ie]}for(;U+S>=M;){if(G=M-U,W.input_.read(y,U,G)<G)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");P.write(y,M),S-=G,U=0}if(W.input_.read(y,U,S)<S)throw new Error("[CopyUncompressedBlockToOutput] not enough bytes");W.reset()}function ge(P){var S=P.bit_pos_+7&-8,k=P.readBits(S-P.bit_pos_);return k==0}function C0(P){var S=new s(P),k=new t(S);re(k);var y=xe(k);return y.meta_block_length}tt.BrotliDecompressedSize=C0;function Me(P,S){var k=new s(P);S==null&&(S=C0(P));var y=new Uint8Array(S),L=new e(y);return S0(k,L),L.pos<L.buffer.length&&(L.buffer=L.buffer.subarray(0,L.pos)),L.buffer}tt.BrotliDecompressBuffer=Me;function S0(P,S){var k,y=0,L=0,W=0,M,U=0,Q,G,F,ie,me=[16,15,11,4],ye=0,Be=0,Te=0,oe=[new we(0,0),new we(0,0),new we(0,0)],Ce,ze,te,Nn=128+t.READ_SIZE;te=new t(P),W=re(te),M=(1<<W)-16,Q=1<<W,G=Q-1,F=new Uint8Array(Q+Nn+r.maxDictionaryWordLength),ie=Q,Ce=[],ze=[];for(var wt=0;wt<3*R;wt++)Ce[wt]=new a(0,0),ze[wt]=new a(0,0);for(;!L;){var Ae=0,fa,Ke=[1<<28,1<<28,1<<28],c0=[0],He=[1,1,1],or=[0,1,0,1,0,1],yt=[0],M0,Z0,da,ha,pa=null,Ct=null,ba,ga=null,va,xa=0,ur=null,ma=0,wa=0,cr=null,ya=0,fr=0,dr=0,R0,hr;for(k=0;k<3;++k)oe[k].codes=null,oe[k].htrees=null;te.readMoreInput();var St=xe(te);if(Ae=St.meta_block_length,y+Ae>S.buffer.length){var Ca=new Uint8Array(y+Ae);Ca.set(S.buffer),S.buffer=Ca}if(L=St.input_end,fa=St.is_uncompressed,St.is_metadata){for(ge(te);Ae>0;--Ae)te.readMoreInput(),te.readBits(8);continue}if(Ae!==0){if(fa){te.bit_pos_=te.bit_pos_+7&-8,ne(S,Ae,y,F,G,te),y+=Ae;continue}for(k=0;k<3;++k)He[k]=z(te)+1,He[k]>=2&&(Y(He[k]+2,Ce,k*R,te),Y(C,ze,k*R,te),Ke[k]=K(ze,k*R,te),yt[k]=1);for(te.readMoreInput(),M0=te.readBits(2),Z0=h+(te.readBits(4)<<M0),da=(1<<M0)-1,ha=Z0+(48<<M0),Ct=new Uint8Array(He[0]),k=0;k<He[0];++k)te.readMoreInput(),Ct[k]=te.readBits(2)<<1;var Sa=Ee(He[0]<<A,te);ba=Sa.num_htrees,pa=Sa.context_map;var Aa=Ee(He[2]<<D,te);for(va=Aa.num_htrees,ga=Aa.context_map,oe[0]=new we(f,ba),oe[1]=new we(x,He[1]),oe[2]=new we(ha,va),k=0;k<3;++k)oe[k].decode(te);for(ur=0,cr=0,R0=Ct[c0[0]],fr=i.lookupOffsets[R0],dr=i.lookupOffsets[R0+1],hr=oe[1].htrees[0];Ae>0;){var At,J0,pr,br,gr,Re,Ge,n0,Q0,N0,_0;for(te.readMoreInput(),Ke[1]===0&&(De(He[1],Ce,1,c0,or,yt,te),Ke[1]=K(ze,R,te),hr=oe[1].htrees[c0[1]]),--Ke[1],At=X(oe[1].codes,hr,te),J0=At>>6,J0>=2?(J0-=2,Ge=-1):Ge=0,pr=o.kInsertRangeLut[J0]+(At>>3&7),br=o.kCopyRangeLut[J0]+(At&7),gr=o.kInsertLengthPrefixCode[pr].offset+te.readBits(o.kInsertLengthPrefixCode[pr].nbits),Re=o.kCopyLengthPrefixCode[br].offset+te.readBits(o.kCopyLengthPrefixCode[br].nbits),Be=F[y-1&G],Te=F[y-2&G],N0=0;N0<gr;++N0)te.readMoreInput(),Ke[0]===0&&(De(He[0],Ce,0,c0,or,yt,te),Ke[0]=K(ze,0,te),xa=c0[0]<<A,ur=xa,R0=Ct[c0[0]],fr=i.lookupOffsets[R0],dr=i.lookupOffsets[R0+1]),Q0=i.lookup[fr+Be]|i.lookup[dr+Te],ma=pa[ur+Q0],--Ke[0],Te=Be,Be=X(oe[0].codes,oe[0].htrees[ma],te),F[y&G]=Be,(y&G)===G&&S.write(F,Q),++y;if(Ae-=gr,Ae<=0)break;if(Ge<0){var Q0;if(te.readMoreInput(),Ke[2]===0&&(De(He[2],Ce,2,c0,or,yt,te),Ke[2]=K(ze,2*R,te),wa=c0[2]<<D,cr=wa),--Ke[2],Q0=(Re>4?3:Re-2)&255,ya=ga[cr+Q0],Ge=X(oe[2].codes,oe[2].htrees[ya],te),Ge>=Z0){var vr,ka,et;Ge-=Z0,ka=Ge&da,Ge>>=M0,vr=(Ge>>1)+1,et=(2+(Ge&1)<<vr)-4,Ge=Z0+(et+te.readBits(vr)<<M0)+ka}}if(n0=Pe(Ge,me,ye),n0<0)throw new Error("[BrotliDecompress] invalid distance");if(y<M&&U!==M?U=y:U=M,_0=y&G,n0>U)if(Re>=r.minDictionaryWordLength&&Re<=r.maxDictionaryWordLength){var et=r.offsetsByLength[Re],Ia=n0-U-1,Oa=r.sizeBitsByLength[Re],Un=(1<<Oa)-1,Vn=Ia&Un,Pa=Ia>>Oa;if(et+=Vn*Re,Pa<u.kNumTransforms){var xr=u.transformDictionaryWord(F,_0,et,Re,Pa);if(_0+=xr,y+=xr,Ae-=xr,_0>=ie){S.write(F,Q);for(var kt=0;kt<_0-ie;kt++)F[kt]=F[ie+kt]}}else throw new Error("Invalid backward reference. pos: "+y+" distance: "+n0+" len: "+Re+" bytes left: "+Ae)}else throw new Error("Invalid backward reference. pos: "+y+" distance: "+n0+" len: "+Re+" bytes left: "+Ae);else{if(Ge>0&&(me[ye&3]=n0,++ye),Re>Ae)throw new Error("Invalid backward reference. pos: "+y+" distance: "+n0+" len: "+Re+" bytes left: "+Ae);for(N0=0;N0<Re;++N0)F[y&G]=F[y-n0&G],(y&G)===G&&S.write(F,Q),++y,--Ae}Be=F[y-1&G],Te=F[y-2&G]}y&=1073741823}}S.write(F,y&G)}return tt.BrotliDecompress=S0,r.init(),tt}var Ki=en().BrotliDecompressBuffer;function vt(s,e,t,r){Object.defineProperty(s,e,{get:t,set:r,enumerable:!0,configurable:!0})}function er(s){return s&&s.__esModule?s.default:s}var xt={};vt(xt,"logErrors",()=>ji);vt(xt,"registerFormat",()=>K0);vt(xt,"create",()=>Zi);vt(xt,"defaultLanguage",()=>Gt);vt(xt,"setDefaultLanguage",()=>Ji);let ji=!1,Vr=[];function K0(s){Vr.push(s)}function Zi(s,e){for(let t=0;t<Vr.length;t++){let r=Vr[t];if(r.probe(s)){let a=new r(new ke(s));return e?a.getFont(e):a}}throw new Error("Unknown font format")}let Gt="en";function Ji(s="en"){Gt=s}function Oe(s,e,t){if(t.get){let r=t.get;t.get=function(){let a=r.call(this);return Object.defineProperty(this,e,{value:a}),a}}else if(typeof t.value=="function"){let r=t.value;return{get(){let a=new Map;function n(...i){let o=i.length>0?i[0]:"value";if(a.has(o))return a.get(o);let u=r.apply(this,i);return a.set(o,u),u}return Object.defineProperty(this,e,{value:n}),n}}}}let Qi=new v({firstCode:l,entryCount:l,idDelta:w,idRangeOffset:l}),Or=new v({startCharCode:g,endCharCode:g,glyphID:g}),_i=new v({startUnicodeValue:g0,additionalCount:O}),el=new v({unicodeValue:g0,glyphID:l}),tl=new p(_i,g),rl=new p(el,g),al=new v({varSelector:g0,defaultUVS:new b(g,tl,{type:"parent"}),nonDefaultUVS:new b(g,rl,{type:"parent"})}),sl=new J(l,{0:{length:l,language:l,codeMap:new fe(O,256)},2:{length:l,language:l,subHeaderKeys:new p(l,256),subHeaderCount:s=>Math.max.apply(Math,s.subHeaderKeys),subHeaders:new fe(Qi,"subHeaderCount"),glyphIndexArray:new fe(l,"subHeaderCount")},4:{length:l,language:l,segCountX2:l,segCount:s=>s.segCountX2>>1,searchRange:l,entrySelector:l,rangeShift:l,endCode:new fe(l,"segCount"),reservedPad:new pe(l),startCode:new fe(l,"segCount"),idDelta:new fe(w,"segCount"),idRangeOffset:new fe(l,"segCount"),glyphIndexArray:new fe(l,s=>(s.length-s._currentOffset)/2)},6:{length:l,language:l,firstCode:l,entryCount:l,glyphIndices:new fe(l,"entryCount")},8:{reserved:new pe(l),length:g,language:l,is32:new fe(O,8192),nGroups:g,groups:new fe(Or,"nGroups")},10:{reserved:new pe(l),length:g,language:g,firstCode:g,entryCount:g,glyphIndices:new fe(l,"numChars")},12:{reserved:new pe(l),length:g,language:g,nGroups:g,groups:new fe(Or,"nGroups")},13:{reserved:new pe(l),length:g,language:g,nGroups:g,groups:new fe(Or,"nGroups")},14:{length:g,numRecords:g,varSelectors:new fe(al,"numRecords")}}),nl=new v({platformID:l,encodingID:l,table:new b(g,sl,{type:"parent",lazy:!0})});var il=new v({version:l,numSubtables:l,tables:new p(nl,"numSubtables")}),ll=new v({version:I0,revision:I0,checkSumAdjustment:g,magicNumber:g,flags:l,unitsPerEm:l,created:new p(I0,2),modified:new p(I0,2),xMin:w,yMin:w,xMax:w,yMax:w,macStyle:new Xe(l,["bold","italic","underline","outline","shadow","condensed","extended"]),lowestRecPPEM:l,fontDirectionHint:w,indexToLocFormat:w,glyphDataFormat:w}),ol=new v({version:I0,ascent:w,descent:w,lineGap:w,advanceWidthMax:l,minLeftSideBearing:w,minRightSideBearing:w,xMaxExtent:w,caretSlopeRise:w,caretSlopeRun:w,caretOffset:w,reserved:new pe(w,4),metricDataFormat:w,numberOfMetrics:l});let ul=new v({advance:l,bearing:w});var cl=new v({metrics:new fe(ul,s=>s.parent.hhea.numberOfMetrics),bearings:new fe(w,s=>s.parent.maxp.numGlyphs-s.parent.hhea.numberOfMetrics)}),fl=new v({version:I0,numGlyphs:l,maxPoints:l,maxContours:l,maxComponentPoints:l,maxComponentContours:l,maxZones:l,maxTwilightPoints:l,maxStorage:l,maxFunctionDefs:l,maxInstructionDefs:l,maxStackElements:l,maxSizeOfInstructions:l,maxComponentElements:l,maxComponentDepth:l});function tn(s,e,t=0){return s===1&&Xa[t]?Xa[t]:bl[s][e]}const dl=new Set(["x-mac-roman","x-mac-cyrillic","iso-8859-6","iso-8859-8"]),hl={"x-mac-croatian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®Š™´¨≠ŽØ∞±≤≥∆µ∂∑∏š∫ªºΩžø¿¡¬√ƒ≈Ć«Č… ÀÃÕŒœĐ—“”‘’÷◊©⁄€‹›Æ»–·‚„‰ÂćÁčÈÍÎÏÌÓÔđÒÚÛÙıˆ˜¯πË˚¸Êæˇ","x-mac-gaelic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØḂ±≤≥ḃĊċḊḋḞḟĠġṀæøṁṖṗɼƒſṠ«»… ÀÃÕŒœ–—“”‘’ṡẛÿŸṪ€‹›Ŷŷṫ·Ỳỳ⁊ÂÊÁËÈÍÎÏÌÓÔ♣ÒÚÛÙıÝýŴŵẄẅẀẁẂẃ","x-mac-greek":"Ä¹²É³ÖÜ΅àâä΄¨çéèêë£™îï•½‰ôö¦€ùûü†ΓΔΘΛΞΠß®©ΣΪ§≠°·Α±≤≥¥ΒΕΖΗΙΚΜΦΫΨΩάΝ¬ΟΡ≈Τ«»… ΥΧΆΈœ–―“”‘’÷ΉΊΌΎέήίόΏύαβψδεφγηιξκλμνοπώρστθωςχυζϊϋΐΰ­","x-mac-icelandic":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûüÝ°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€ÐðÞþý·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-inuit":"ᐃᐄᐅᐆᐊᐋᐱᐲᐳᐴᐸᐹᑉᑎᑏᑐᑑᑕᑖᑦᑭᑮᑯᑰᑲᑳᒃᒋᒌᒍᒎᒐᒑ°ᒡᒥᒦ•¶ᒧ®©™ᒨᒪᒫᒻᓂᓃᓄᓅᓇᓈᓐᓯᓰᓱᓲᓴᓵᔅᓕᓖᓗᓘᓚᓛᓪᔨᔩᔪᔫᔭ… ᔮᔾᕕᕖᕗ–—“”‘’ᕘᕙᕚᕝᕆᕇᕈᕉᕋᕌᕐᕿᖀᖁᖂᖃᖄᖅᖏᖐᖑᖒᖓᖔᖕᙱᙲᙳᙴᙵᙶᖖᖠᖡᖢᖣᖤᖥᖦᕼŁł","x-mac-ce":"ÄĀāÉĄÖÜáąČäčĆćéŹźĎíďĒēĖóėôöõúĚěü†°Ę£§•¶ß®©™ę¨≠ģĮįĪ≤≥īĶ∂∑łĻļĽľĹĺŅņŃ¬√ńŇ∆«»… ňŐÕőŌ–—“”‘’÷◊ōŔŕŘ‹›řŖŗŠ‚„šŚśÁŤťÍŽžŪÓÔūŮÚůŰűŲųÝýķŻŁżĢˇ","x-mac-romanian":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ĂȘ∞±≤≥¥µ∂∑∏π∫ªºΩăș¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸ⁄€‹›Țț‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙıˆ˜¯˘˙˚¸˝˛ˇ","x-mac-turkish":"ÄÅÇÉÑÖÜáàâäãåçéèêëíìîïñóòôöõúùûü†°¢£§•¶ß®©™´¨≠ÆØ∞±≤≥¥µ∂∑∏π∫ªºΩæø¿¡¬√ƒ≈∆«»… ÀÃÕŒœ–—“”‘’÷◊ÿŸĞğİıŞş‡·‚„‰ÂÊÁËÈÍÎÏÌÓÔÒÚÛÙˆ˜¯˘˙˚¸˝˛ˇ"},Pr=new Map;function pl(s){let e=Pr.get(s);if(e)return e;let t=hl[s];if(t){let r=new Map;for(let a=0;a<t.length;a++)r.set(t.charCodeAt(a),128+a);return Pr.set(s,r),r}if(dl.has(s)){let r=new TextDecoder(s),a=new Uint8Array(128);for(let o=0;o<128;o++)a[o]=128+o;let n=new Map,i=r.decode(a);for(let o=0;o<128;o++)n.set(i.charCodeAt(o),128+o);return Pr.set(s,n),n}}const bl=[["utf16be","utf16be","utf16be","utf16be","utf16be","utf16be"],["x-mac-roman","shift-jis","big5","euc-kr","iso-8859-6","iso-8859-8","x-mac-greek","x-mac-cyrillic","x-mac-symbol","x-mac-devanagari","x-mac-gurmukhi","x-mac-gujarati","Oriya","Bengali","Tamil","Telugu","Kannada","Malayalam","Sinhalese","Burmese","Khmer","iso-8859-11","Laotian","Georgian","Armenian","hz-gb-2312","Tibetan","Mongolian","Geez","x-mac-ce","Vietnamese","Sindhi"],["ascii"],["symbol","utf16be","shift-jis","gb18030","big5","x-cp20949","johab",null,null,null,"utf16be"]],Xa={15:"x-mac-icelandic",17:"x-mac-turkish",18:"x-mac-croatian",24:"x-mac-ce",25:"x-mac-ce",26:"x-mac-ce",27:"x-mac-ce",28:"x-mac-ce",30:"x-mac-icelandic",37:"x-mac-romanian",38:"x-mac-ce",39:"x-mac-ce",40:"x-mac-ce",143:"x-mac-inuit",146:"x-mac-gaelic"},gl=[[],{0:"en",30:"fo",60:"ks",90:"rw",1:"fr",31:"fa",61:"ku",91:"rn",2:"de",32:"ru",62:"sd",92:"ny",3:"it",33:"zh",63:"bo",93:"mg",4:"nl",34:"nl-BE",64:"ne",94:"eo",5:"sv",35:"ga",65:"sa",128:"cy",6:"es",36:"sq",66:"mr",129:"eu",7:"da",37:"ro",67:"bn",130:"ca",8:"pt",38:"cz",68:"as",131:"la",9:"no",39:"sk",69:"gu",132:"qu",10:"he",40:"si",70:"pa",133:"gn",11:"ja",41:"yi",71:"or",134:"ay",12:"ar",42:"sr",72:"ml",135:"tt",13:"fi",43:"mk",73:"kn",136:"ug",14:"el",44:"bg",74:"ta",137:"dz",15:"is",45:"uk",75:"te",138:"jv",16:"mt",46:"be",76:"si",139:"su",17:"tr",47:"uz",77:"my",140:"gl",18:"hr",48:"kk",78:"km",141:"af",19:"zh-Hant",49:"az-Cyrl",79:"lo",142:"br",20:"ur",50:"az-Arab",80:"vi",143:"iu",21:"hi",51:"hy",81:"id",144:"gd",22:"th",52:"ka",82:"tl",145:"gv",23:"ko",53:"mo",83:"ms",146:"ga",24:"lt",54:"ky",84:"ms-Arab",147:"to",25:"pl",55:"tg",85:"am",148:"el-polyton",26:"hu",56:"tk",86:"ti",149:"kl",27:"es",57:"mn-CN",87:"om",150:"az",28:"lv",58:"mn",88:"so",151:"nn",29:"se",59:"ps",89:"sw"},[],{1078:"af",16393:"en-IN",1159:"rw",1074:"tn",1052:"sq",6153:"en-IE",1089:"sw",1115:"si",1156:"gsw",8201:"en-JM",1111:"kok",1051:"sk",1118:"am",17417:"en-MY",1042:"ko",1060:"sl",5121:"ar-DZ",5129:"en-NZ",1088:"ky",11274:"es-AR",15361:"ar-BH",13321:"en-PH",1108:"lo",16394:"es-BO",3073:"ar",18441:"en-SG",1062:"lv",13322:"es-CL",2049:"ar-IQ",7177:"en-ZA",1063:"lt",9226:"es-CO",11265:"ar-JO",11273:"en-TT",2094:"dsb",5130:"es-CR",13313:"ar-KW",2057:"en-GB",1134:"lb",7178:"es-DO",12289:"ar-LB",1033:"en",1071:"mk",12298:"es-EC",4097:"ar-LY",12297:"en-ZW",2110:"ms-BN",17418:"es-SV",6145:"ary",1061:"et",1086:"ms",4106:"es-GT",8193:"ar-OM",1080:"fo",1100:"ml",18442:"es-HN",16385:"ar-QA",1124:"fil",1082:"mt",2058:"es-MX",1025:"ar-SA",1035:"fi",1153:"mi",19466:"es-NI",10241:"ar-SY",2060:"fr-BE",1146:"arn",6154:"es-PA",7169:"aeb",3084:"fr-CA",1102:"mr",15370:"es-PY",14337:"ar-AE",1036:"fr",1148:"moh",10250:"es-PE",9217:"ar-YE",5132:"fr-LU",1104:"mn",20490:"es-PR",1067:"hy",6156:"fr-MC",2128:"mn-CN",3082:"es",1101:"as",4108:"fr-CH",1121:"ne",1034:"es",2092:"az-Cyrl",1122:"fy",1044:"nb",21514:"es-US",1068:"az",1110:"gl",2068:"nn",14346:"es-UY",1133:"ba",1079:"ka",1154:"oc",8202:"es-VE",1069:"eu",3079:"de-AT",1096:"or",2077:"sv-FI",1059:"be",1031:"de",1123:"ps",1053:"sv",2117:"bn",5127:"de-LI",1045:"pl",1114:"syr",1093:"bn-IN",4103:"de-LU",1046:"pt",1064:"tg",8218:"bs-Cyrl",2055:"de-CH",2070:"pt-PT",2143:"tzm",5146:"bs",1032:"el",1094:"pa",1097:"ta",1150:"br",1135:"kl",1131:"qu-BO",1092:"tt",1026:"bg",1095:"gu",2155:"qu-EC",1098:"te",1027:"ca",1128:"ha",3179:"qu",1054:"th",3076:"zh-HK",1037:"he",1048:"ro",1105:"bo",5124:"zh-MO",1081:"hi",1047:"rm",1055:"tr",2052:"zh",1038:"hu",1049:"ru",1090:"tk",4100:"zh-SG",1039:"is",9275:"smn",1152:"ug",1028:"zh-TW",1136:"ig",4155:"smj-NO",1058:"uk",1155:"co",1057:"id",5179:"smj",1070:"hsb",1050:"hr",1117:"iu",3131:"se-FI",1056:"ur",4122:"hr-BA",2141:"iu-Latn",1083:"se",2115:"uz-Cyrl",1029:"cs",2108:"ga",2107:"se-SE",1091:"uz",1030:"da",1076:"xh",8251:"sms",1066:"vi",1164:"prs",1077:"zu",6203:"sma-NO",1106:"cy",1125:"dv",1040:"it",7227:"sms",1160:"wo",2067:"nl-BE",2064:"it-CH",1103:"sa",1157:"sah",1043:"nl",1041:"ja",7194:"sr-Cyrl-BA",1144:"ii",3081:"en-AU",1099:"kn",3098:"sr",1130:"yo",10249:"en-BZ",1087:"kk",6170:"sr-Latn-BA",4105:"en-CA",1107:"km",2074:"sr-Latn",9225:"en-029",1158:"quc",1132:"nso"}];let Ya=new v({platformID:l,encodingID:l,languageID:l,nameID:l,length:l,string:new b(l,new ce("length",s=>tn(s.platformID,s.encodingID,s.languageID)),{type:"parent",relativeTo:s=>s.parent.stringOffset,allowNull:!1})}),vl=new v({length:l,tag:new b(l,new ce("length","utf16be"),{type:"parent",relativeTo:s=>s.stringOffset})});var zt=new J(l,{0:{count:l,stringOffset:l,records:new p(Ya,"count")},1:{count:l,stringOffset:l,records:new p(Ya,"count"),langTagCount:l,langTags:new p(vl,"langTagCount")}}),xl=zt;const Gr=["copyright","fontFamily","fontSubfamily","uniqueSubfamily","fullName","version","postscriptName","trademark","manufacturer","designer","description","vendorURL","designerURL","license","licenseURL",null,"preferredFamily","preferredSubfamily","compatibleFull","sampleText","postscriptCIDFontName","wwsFamilyName","wwsSubfamilyName"];zt.process=function(s){var e={};for(let t of this.records){let r=gl[t.platformID][t.languageID];r==null&&this.langTags!=null&&t.languageID>=32768&&(r=this.langTags[t.languageID-32768].tag),r==null&&(r=t.platformID+"-"+t.languageID);let a=t.nameID>=256?"fontFeatures":Gr[t.nameID]||t.nameID;e[a]==null&&(e[a]={});let n=e[a];t.nameID>=256&&(n=n[t.nameID]||(n[t.nameID]={})),(typeof t.string=="string"||typeof n[r]!="string")&&(n[r]=t.string)}this.records=e};zt.preEncode=function(){if(Array.isArray(this.records))return;this.version=0;let s=[];for(let e in this.records){let t=this.records[e];e!=="fontFeatures"&&(s.push({platformID:3,encodingID:1,languageID:1033,nameID:Gr.indexOf(e),length:t.en.length*2,string:t.en}),e==="postscriptName"&&s.push({platformID:1,encodingID:0,languageID:0,nameID:Gr.indexOf(e),length:t.en.length,string:t.en}))}this.records=s,this.count=s.length,this.stringOffset=zt.size(this,null,!1)};var rn=new J(l,{header:{xAvgCharWidth:w,usWeightClass:l,usWidthClass:l,fsType:new Xe(l,[null,"noEmbedding","viewOnly","editable",null,null,null,null,"noSubsetting","bitmapOnly"]),ySubscriptXSize:w,ySubscriptYSize:w,ySubscriptXOffset:w,ySubscriptYOffset:w,ySuperscriptXSize:w,ySuperscriptYSize:w,ySuperscriptXOffset:w,ySuperscriptYOffset:w,yStrikeoutSize:w,yStrikeoutPosition:w,sFamilyClass:w,panose:new p(O,10),ulCharRange:new p(g,4),vendorID:new ce(4),fsSelection:new Xe(l,["italic","underscore","negative","outlined","strikeout","bold","regular","useTypoMetrics","wws","oblique"]),usFirstCharIndex:l,usLastCharIndex:l},0:{},1:{typoAscender:w,typoDescender:w,typoLineGap:w,winAscent:l,winDescent:l,codePageRange:new p(g,2)},2:{typoAscender:w,typoDescender:w,typoLineGap:w,winAscent:l,winDescent:l,codePageRange:new p(g,2),xHeight:w,capHeight:w,defaultChar:l,breakChar:l,maxContent:l},5:{typoAscender:w,typoDescender:w,typoLineGap:w,winAscent:l,winDescent:l,codePageRange:new p(g,2),xHeight:w,capHeight:w,defaultChar:l,breakChar:l,maxContent:l,usLowerOpticalPointSize:l,usUpperOpticalPointSize:l}});let Er=rn.versions;Er[3]=Er[4]=Er[2];var ml=rn,wl=new J(be,{header:{italicAngle:be,underlinePosition:w,underlineThickness:w,isFixedPitch:g,minMemType42:g,maxMemType42:g,minMemType1:g,maxMemType1:g},1:{},2:{numberOfGlyphs:l,glyphNameIndex:new p(l,"numberOfGlyphs"),names:new p(new ce(O))},2.5:{numberOfGlyphs:l,offsets:new p(O,"numberOfGlyphs")},3:{},4:{map:new p(g,s=>s.parent.maxp.numGlyphs)}}),yl=new v({controlValues:new p(w)}),Cl=new v({instructions:new p(O)});let na=new J("head.indexToLocFormat",{0:{offsets:new p(l)},1:{offsets:new p(g)}});na.process=function(){if(this.version===0&&!this._processed){for(let s=0;s<this.offsets.length;s++)this.offsets[s]<<=1;this._processed=!0}};na.preEncode=function(){if(this.version===0&&this._processed!==!1){for(let s=0;s<this.offsets.length;s++)this.offsets[s]>>>=1;this._processed=!1}};var Sl=na,Al=new v({controlValueProgram:new p(O)}),kl=new p(new r0);class e0{getCFFVersion(e){for(;e&&!e.hdrSize;)e=e.parent;return e?e.version:-1}decode(e,t){let a=this.getCFFVersion(t)>=2?e.readUInt32BE():e.readUInt16BE();if(a===0)return[];let n=e.readUInt8(),i;if(n===1)i=O;else if(n===2)i=l;else if(n===3)i=g0;else if(n===4)i=g;else throw new Error(`Bad offset size in CFFIndex: ${n} ${e.pos}`);let o=[],u=e.pos+(a+1)*n-1,c=i.decode(e);for(let d=0;d<a;d++){let f=i.decode(e);if(this.type!=null){let x=e.pos;e.pos=u+c,t.length=f-c,o.push(this.type.decode(e,t)),e.pos=x}else o.push({offset:u+c,length:f-c});c=f}return e.pos=u+c,o}size(e,t){let r=2;if(e.length===0)return r;let a=this.type||new r0,n=1;for(let o=0;o<e.length;o++){let u=e[o];n+=a.size(u,t)}let i;if(n<=255)i=O;else if(n<=65535)i=l;else if(n<=16777215)i=g0;else if(n<=4294967295)i=g;else throw new Error("Bad offset in CFFIndex");return r+=1+i.size()*(e.length+1),r+=n-1,r}encode(e,t,r){if(e.writeUInt16BE(t.length),t.length===0)return;let a=this.type||new r0,n=[],i=1;for(let u of t){let c=a.size(u,r);n.push(c),i+=c}let o;if(i<=255)o=O;else if(i<=65535)o=l;else if(i<=16777215)o=g0;else if(i<=4294967295)o=g;else throw new Error("Bad offset in CFFIndex");e.writeUInt8(o.size()),i=1,o.encode(e,i);for(let u of n)i+=u,o.encode(e,i);for(let u of t)a.encode(e,u,r)}constructor(e){this.type=e}}const at=15,Ka=["0","1","2","3","4","5","6","7","8","9",".","E","E-",null,"-"],ja={".":10,E:11,"E-":12,"-":14};class Tr{static decode(e,t){if(32<=t&&t<=246)return t-139;if(247<=t&&t<=250)return(t-247)*256+e.readUInt8()+108;if(251<=t&&t<=254)return-(t-251)*256-e.readUInt8()-108;if(t===28)return e.readInt16BE();if(t===29)return e.readInt32BE();if(t===30){let r="";for(;;){let a=e.readUInt8(),n=a>>4;if(n===at)break;r+=Ka[n];let i=a&15;if(i===at)break;r+=Ka[i]}return parseFloat(r)}return null}static size(e){if(e.forceLarge&&(e=32768),(e|0)!==e){let t=""+e;return 1+Math.ceil((t.length+1)/2)}else return-107<=e&&e<=107?1:108<=e&&e<=1131||-1131<=e&&e<=-108?2:-32768<=e&&e<=32767?3:5}static encode(e,t){let r=Number(t);if(t.forceLarge)return e.writeUInt8(29),e.writeInt32BE(r);if((r|0)!==r){e.writeUInt8(30);let n=""+r;for(let i=0;i<n.length;i+=2){let o=n[i],u=ja[o]||+o;if(i===n.length-1)var a=at;else{let c=n[i+1];var a=ja[c]||+c}e.writeUInt8(u<<4|a&15)}if(a!==at)return e.writeUInt8(at<<4)}else return-107<=r&&r<=107?e.writeUInt8(r+139):108<=r&&r<=1131?(r-=108,e.writeUInt8((r>>8)+247),e.writeUInt8(r&255)):-1131<=r&&r<=-108?(r=-r-108,e.writeUInt8((r>>8)+251),e.writeUInt8(r&255)):-32768<=r&&r<=32767?(e.writeUInt8(28),e.writeInt16BE(r)):(e.writeUInt8(29),e.writeInt32BE(r))}}class tr{decodeOperands(e,t,r,a){if(Array.isArray(e))return a.map((n,i)=>this.decodeOperands(e[i],t,r,[n]));if(e.decode!=null)return e.decode(t,r,a);switch(e){case"number":case"offset":case"sid":return a[0];case"boolean":return!!a[0];default:return a}}encodeOperands(e,t,r,a){return Array.isArray(e)?a.map((n,i)=>this.encodeOperands(e[i],t,r,n)[0]):e.encode!=null?e.encode(t,a,r):typeof a=="number"?[a]:typeof a=="boolean"?[+a]:Array.isArray(a)?a:[a]}decode(e,t){let r=e.pos+t.length,a={},n=[];Object.defineProperties(a,{parent:{value:t},_startOffset:{value:e.pos}});for(let i in this.fields){let o=this.fields[i];a[o[1]]=o[3]}for(;e.pos<r;){let i=e.readUInt8();if(i<28){i===12&&(i=i<<8|e.readUInt8());let o=this.fields[i];if(!o)throw new Error(`Unknown operator ${i}`);let u=this.decodeOperands(o[2],e,a,n);u!=null&&(u instanceof jr?Object.defineProperty(a,o[1],u):a[o[1]]=u),n=[]}else n.push(Tr.decode(e,i))}return a}size(e,t,r=!0){let a={parent:t,val:e,pointerSize:0,startOffset:t.startOffset||0},n=0;for(let i in this.fields){let o=this.fields[i],u=e[o[1]];if(u==null||Da(u,o[3]))continue;let c=this.encodeOperands(o[2],null,a,u);for(let f of c)n+=Tr.size(f);let d=Array.isArray(o[0])?o[0]:[o[0]];n+=d.length}return r&&(n+=a.pointerSize),n}encode(e,t,r){let a={pointers:[],startOffset:e.pos,parent:r,val:t,pointerSize:0};a.pointerOffset=e.pos+this.size(t,a,!1);for(let i of this.ops){let o=t[i[1]];if(o==null||Da(o,i[3]))continue;let u=this.encodeOperands(i[2],e,a,o);for(let d of u)Tr.encode(e,d);let c=Array.isArray(i[0])?i[0]:[i[0]];for(let d of c)e.writeUInt8(d)}let n=0;for(;n<a.pointers.length;){let i=a.pointers[n++];i.type.encode(e,i.val,i.parent)}}constructor(e=[]){this.ops=e,this.fields={};for(let t of e){let r=Array.isArray(t[0])?t[0][0]<<8|t[0][1]:t[0];this.fields[r]=t}}}class $e extends b{decode(e,t,r){return this.offsetType={decode:()=>r[0]},super.decode(e,t,r)}encode(e,t,r){if(!e)return this.offsetType={size:()=>0},this.size(t,r),[new Za(0)];let a=null;return this.offsetType={encode:(n,i)=>a=i},super.encode(e,t,r),[new Za(a)]}constructor(e,t={}){t.type==null&&(t.type="global"),super(null,e,t)}}class Za{valueOf(){return this.val}constructor(e){this.val=e,this.forceLarge=!0}}class Il{static decode(e,t,r){let a=r.pop();for(;r.length>a;)r.pop()}}var zr=new tr([[6,"BlueValues","delta",null],[7,"OtherBlues","delta",null],[8,"FamilyBlues","delta",null],[9,"FamilyOtherBlues","delta",null],[[12,9],"BlueScale","number",.039625],[[12,10],"BlueShift","number",7],[[12,11],"BlueFuzz","number",1],[10,"StdHW","number",null],[11,"StdVW","number",null],[[12,12],"StemSnapH","delta",null],[[12,13],"StemSnapV","delta",null],[[12,14],"ForceBold","boolean",!1],[[12,17],"LanguageGroup","number",0],[[12,18],"ExpansionFactor","number",.06],[[12,19],"initialRandomSeed","number",0],[20,"defaultWidthX","number",0],[21,"nominalWidthX","number",0],[22,"vsindex","number",0],[23,"blend",Il,null],[19,"Subrs",new $e(new e0,{type:"local"}),null]]),Bt=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall","001.000","001.001","001.002","001.003","Black","Bold","Book","Light","Medium","Regular","Roman","Semibold"];let an=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","","endash","dagger","daggerdbl","periodcentered","","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","","questiondown","","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","","ring","cedilla","","hungarumlaut","ogonek","caron","emdash","","","","","","","","","","","","","","","","","AE","","ordfeminine","","","","","Lslash","Oslash","OE","ordmasculine","","","","","","ae","","","","dotlessi","","","lslash","oslash","oe","germandbls"],Ol=["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","space","exclamsmall","Hungarumlautsmall","","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","","asuperior","bsuperior","centsuperior","dsuperior","esuperior","","","isuperior","","","lsuperior","msuperior","nsuperior","osuperior","","","rsuperior","ssuperior","tsuperior","","ff","fi","fl","ffi","ffl","parenleftinferior","","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","exclamdownsmall","centoldstyle","Lslashsmall","","","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","","Dotaccentsmall","","","Macronsmall","","","figuredash","hypheninferior","","","Ogoneksmall","Ringsmall","Cedillasmall","","","","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","","","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],sn=[".notdef","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quoteright","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","quoteleft","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","exclamdown","cent","sterling","fraction","yen","florin","section","currency","quotesingle","quotedblleft","guillemotleft","guilsinglleft","guilsinglright","fi","fl","endash","dagger","daggerdbl","periodcentered","paragraph","bullet","quotesinglbase","quotedblbase","quotedblright","guillemotright","ellipsis","perthousand","questiondown","grave","acute","circumflex","tilde","macron","breve","dotaccent","dieresis","ring","cedilla","hungarumlaut","ogonek","caron","emdash","AE","ordfeminine","Lslash","Oslash","OE","ordmasculine","ae","dotlessi","lslash","oslash","oe","germandbls","onesuperior","logicalnot","mu","trademark","Eth","onehalf","plusminus","Thorn","onequarter","divide","brokenbar","degree","thorn","threequarters","twosuperior","registered","minus","eth","multiply","threesuperior","copyright","Aacute","Acircumflex","Adieresis","Agrave","Aring","Atilde","Ccedilla","Eacute","Ecircumflex","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Ntilde","Oacute","Ocircumflex","Odieresis","Ograve","Otilde","Scaron","Uacute","Ucircumflex","Udieresis","Ugrave","Yacute","Ydieresis","Zcaron","aacute","acircumflex","adieresis","agrave","aring","atilde","ccedilla","eacute","ecircumflex","edieresis","egrave","iacute","icircumflex","idieresis","igrave","ntilde","oacute","ocircumflex","odieresis","ograve","otilde","scaron","uacute","ucircumflex","udieresis","ugrave","yacute","ydieresis","zcaron"],Pl=[".notdef","space","exclamsmall","Hungarumlautsmall","dollaroldstyle","dollarsuperior","ampersandsmall","Acutesmall","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","questionsmall","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","Circumflexsmall","hyphensuperior","Gravesmall","Asmall","Bsmall","Csmall","Dsmall","Esmall","Fsmall","Gsmall","Hsmall","Ismall","Jsmall","Ksmall","Lsmall","Msmall","Nsmall","Osmall","Psmall","Qsmall","Rsmall","Ssmall","Tsmall","Usmall","Vsmall","Wsmall","Xsmall","Ysmall","Zsmall","colonmonetary","onefitted","rupiah","Tildesmall","exclamdownsmall","centoldstyle","Lslashsmall","Scaronsmall","Zcaronsmall","Dieresissmall","Brevesmall","Caronsmall","Dotaccentsmall","Macronsmall","figuredash","hypheninferior","Ogoneksmall","Ringsmall","Cedillasmall","onequarter","onehalf","threequarters","questiondownsmall","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior","Agravesmall","Aacutesmall","Acircumflexsmall","Atildesmall","Adieresissmall","Aringsmall","AEsmall","Ccedillasmall","Egravesmall","Eacutesmall","Ecircumflexsmall","Edieresissmall","Igravesmall","Iacutesmall","Icircumflexsmall","Idieresissmall","Ethsmall","Ntildesmall","Ogravesmall","Oacutesmall","Ocircumflexsmall","Otildesmall","Odieresissmall","OEsmall","Oslashsmall","Ugravesmall","Uacutesmall","Ucircumflexsmall","Udieresissmall","Yacutesmall","Thornsmall","Ydieresissmall"],El=[".notdef","space","dollaroldstyle","dollarsuperior","parenleftsuperior","parenrightsuperior","twodotenleader","onedotenleader","comma","hyphen","period","fraction","zerooldstyle","oneoldstyle","twooldstyle","threeoldstyle","fouroldstyle","fiveoldstyle","sixoldstyle","sevenoldstyle","eightoldstyle","nineoldstyle","colon","semicolon","commasuperior","threequartersemdash","periodsuperior","asuperior","bsuperior","centsuperior","dsuperior","esuperior","isuperior","lsuperior","msuperior","nsuperior","osuperior","rsuperior","ssuperior","tsuperior","ff","fi","fl","ffi","ffl","parenleftinferior","parenrightinferior","hyphensuperior","colonmonetary","onefitted","rupiah","centoldstyle","figuredash","hypheninferior","onequarter","onehalf","threequarters","oneeighth","threeeighths","fiveeighths","seveneighths","onethird","twothirds","zerosuperior","onesuperior","twosuperior","threesuperior","foursuperior","fivesuperior","sixsuperior","sevensuperior","eightsuperior","ninesuperior","zeroinferior","oneinferior","twoinferior","threeinferior","fourinferior","fiveinferior","sixinferior","seveninferior","eightinferior","nineinferior","centinferior","dollarinferior","periodinferior","commainferior"],nn=new v({reserved:new pe(l),reqFeatureIndex:l,featureCount:l,featureIndexes:new p(l,"featureCount")}),Tl=new v({tag:new ce(4),langSys:new b(l,nn,{type:"parent"})}),Fl=new v({defaultLangSys:new b(l,nn),count:l,langSysRecords:new p(Tl,"count")}),Dl=new v({tag:new ce(4),script:new b(l,Fl,{type:"parent"})}),ln=new p(Dl,l),Bl=new v({version:l,nameID:l}),on=new v({featureParams:new b(l,Bl),lookupCount:l,lookupListIndexes:new p(l,"lookupCount")}),Ll=new v({tag:new ce(4),feature:new b(l,on,{type:"parent"})}),un=new p(Ll,l),Ml=new v({markAttachmentType:O,flags:new Xe(O,["rightToLeft","ignoreBaseGlyphs","ignoreLigatures","ignoreMarks","useMarkFilteringSet"])});function Wt(s){let e=new v({lookupType:l,flags:Ml,subTableCount:l,subTables:new p(new b(l,s),"subTableCount"),markFilteringSet:new Nt(l,t=>t.flags.flags.useMarkFilteringSet)});return new fe(new b(l,e),l)}let Rl=new v({start:l,end:l,startCoverageIndex:l}),ue=new J(l,{1:{glyphCount:l,glyphs:new p(l,"glyphCount")},2:{rangeCount:l,rangeRecords:new p(Rl,"rangeCount")}}),Nl=new v({start:l,end:l,class:l}),v0=new J(l,{1:{startGlyph:l,glyphCount:l,classValueArray:new p(l,"glyphCount")},2:{classRangeCount:l,classRangeRecord:new p(Nl,"classRangeCount")}}),b0=new v({a:l,b:l,deltaFormat:l}),mt=new v({sequenceIndex:l,lookupListIndex:l}),Ul=new v({glyphCount:l,lookupCount:l,input:new p(l,s=>s.glyphCount-1),lookupRecords:new p(mt,"lookupCount")}),Vl=new p(new b(l,Ul),l),Gl=new v({glyphCount:l,lookupCount:l,classes:new p(l,s=>s.glyphCount-1),lookupRecords:new p(mt,"lookupCount")}),zl=new p(new b(l,Gl),l),cn=new J(l,{1:{coverage:new b(l,ue),ruleSetCount:l,ruleSets:new p(new b(l,Vl),"ruleSetCount")},2:{coverage:new b(l,ue),classDef:new b(l,v0),classSetCnt:l,classSet:new p(new b(l,zl),"classSetCnt")},3:{glyphCount:l,lookupCount:l,coverages:new p(new b(l,ue),"glyphCount"),lookupRecords:new p(mt,"lookupCount")}}),Wl=new v({backtrackGlyphCount:l,backtrack:new p(l,"backtrackGlyphCount"),inputGlyphCount:l,input:new p(l,s=>s.inputGlyphCount-1),lookaheadGlyphCount:l,lookahead:new p(l,"lookaheadGlyphCount"),lookupCount:l,lookupRecords:new p(mt,"lookupCount")}),Ja=new p(new b(l,Wl),l),fn=new J(l,{1:{coverage:new b(l,ue),chainCount:l,chainRuleSets:new p(new b(l,Ja),"chainCount")},2:{coverage:new b(l,ue),backtrackClassDef:new b(l,v0),inputClassDef:new b(l,v0),lookaheadClassDef:new b(l,v0),chainCount:l,chainClassSet:new p(new b(l,Ja),"chainCount")},3:{backtrackGlyphCount:l,backtrackCoverage:new p(new b(l,ue),"backtrackGlyphCount"),inputGlyphCount:l,inputCoverage:new p(new b(l,ue),"inputGlyphCount"),lookaheadGlyphCount:l,lookaheadCoverage:new p(new b(l,ue),"lookaheadGlyphCount"),lookupCount:l,lookupRecords:new p(mt,"lookupCount")}}),lt=new D0(16,"BE",14),Hl=new v({startCoord:lt,peakCoord:lt,endCoord:lt}),ql=new v({axisCount:l,regionCount:l,variationRegions:new p(new p(Hl,"axisCount"),"regionCount")}),$l=new v({shortDeltas:new p(w,s=>s.parent.shortDeltaCount),regionDeltas:new p(Se,s=>s.parent.regionIndexCount-s.parent.shortDeltaCount),deltas:s=>s.shortDeltas.concat(s.regionDeltas)}),Xl=new v({itemCount:l,shortDeltaCount:l,regionIndexCount:l,regionIndexes:new p(l,"regionIndexCount"),deltaSets:new p($l,"itemCount")}),rr=new v({format:l,variationRegionList:new b(g,ql),variationDataCount:l,itemVariationData:new p(new b(g,Xl),"variationDataCount")}),Yl=new J(l,{1:{axisIndex:l,axisIndex:l,filterRangeMinValue:lt,filterRangeMaxValue:lt}}),Kl=new v({conditionCount:l,conditionTable:new p(new b(g,Yl),"conditionCount")}),jl=new v({featureIndex:l,alternateFeatureTable:new b(g,on,{type:"parent"})}),Zl=new v({version:be,substitutionCount:l,substitutions:new p(jl,"substitutionCount")}),Jl=new v({conditionSet:new b(g,Kl,{type:"parent"}),featureTableSubstitution:new b(g,Zl,{type:"parent"})}),dn=new v({majorVersion:l,minorVersion:l,featureVariationRecordCount:g,featureVariationRecords:new p(Jl,"featureVariationRecordCount")});class hn{decode(e,t,r){return this.predefinedOps[r[0]]?this.predefinedOps[r[0]]:this.type.decode(e,t,r)}size(e,t){return this.type.size(e,t)}encode(e,t,r){let a=this.predefinedOps.indexOf(t);return a!==-1?a:this.type.encode(e,t,r)}constructor(e,t){this.predefinedOps=e,this.type=t}}class Ql extends le{decode(e){return O.decode(e)&127}constructor(){super("UInt8")}}let pn=new v({first:l,nLeft:O}),_l=new v({first:l,nLeft:l}),eo=new J(new Ql,{0:{nCodes:O,codes:new p(O,"nCodes")},1:{nRanges:O,ranges:new p(pn,"nRanges")}}),to=new hn([an,Ol],new $e(eo,{lazy:!0}));class Qa extends p{decode(e,t){let r=a0(this.length,e,t),a=0,n=[];for(;a<r;){let i=this.type.decode(e,t);i.offset=a,a+=i.nLeft+1,n.push(i)}return n}}let ro=new J(O,{0:{glyphs:new p(l,s=>s.parent.CharStrings.length-1)},1:{ranges:new Qa(pn,s=>s.parent.CharStrings.length-1)},2:{ranges:new Qa(_l,s=>s.parent.CharStrings.length-1)}}),ao=new hn([sn,Pl,El],new $e(ro,{lazy:!0})),so=new v({first:l,fd:O}),no=new v({first:g,fd:l}),bn=new J(O,{0:{fds:new p(O,s=>s.parent.CharStrings.length)},3:{nRanges:l,ranges:new p(so,"nRanges"),sentinel:l},4:{nRanges:g,ranges:new p(no,"nRanges"),sentinel:g}}),Fr=new $e(zr);class gn{decode(e,t,r){return t.length=r[0],Fr.decode(e,t,[r[1]])}size(e,t){return[zr.size(e,t,!1),Fr.size(e,t)[0]]}encode(e,t,r){return[zr.size(t,r,!1),Fr.encode(e,t,r)[0]]}}let vn=new tr([[18,"Private",new gn,null],[[12,38],"FontName","sid",null],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[[12,5],"PaintType","number",0]]),io=new tr([[[12,30],"ROS",["sid","sid","number"],null],[0,"version","sid",null],[1,"Notice","sid",null],[[12,0],"Copyright","sid",null],[2,"FullName","sid",null],[3,"FamilyName","sid",null],[4,"Weight","sid",null],[[12,1],"isFixedPitch","boolean",!1],[[12,2],"ItalicAngle","number",0],[[12,3],"UnderlinePosition","number",-100],[[12,4],"UnderlineThickness","number",50],[[12,5],"PaintType","number",0],[[12,6],"CharstringType","number",2],[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[13,"UniqueID","number",null],[5,"FontBBox","array",[0,0,0,0]],[[12,8],"StrokeWidth","number",0],[14,"XUID","array",null],[15,"charset",ao,sn],[16,"Encoding",to,an],[17,"CharStrings",new $e(new e0),null],[18,"Private",new gn,null],[[12,20],"SyntheticBase","number",null],[[12,21],"PostScript","sid",null],[[12,22],"BaseFontName","sid",null],[[12,23],"BaseFontBlend","delta",null],[[12,31],"CIDFontVersion","number",0],[[12,32],"CIDFontRevision","number",0],[[12,33],"CIDFontType","number",0],[[12,34],"CIDCount","number",8720],[[12,35],"UIDBase","number",null],[[12,37],"FDSelect",new $e(bn),null],[[12,36],"FDArray",new $e(new e0(vn)),null],[[12,38],"FontName","sid",null]]),lo=new v({length:l,itemVariationStore:rr}),oo=new tr([[[12,7],"FontMatrix","array",[.001,0,0,.001,0,0]],[17,"CharStrings",new $e(new e0),null],[[12,37],"FDSelect",new $e(bn),null],[[12,36],"FDArray",new $e(new e0(vn)),null],[24,"vstore",new $e(lo),null],[25,"maxstack","number",193]]),uo=new J(jn,{1:{hdrSize:O,offSize:O,nameIndex:new e0(new ce("length")),topDictIndex:new e0(io),stringIndex:new e0(new ce("length")),globalSubrIndex:new e0},2:{hdrSize:O,length:l,topDict:oo,globalSubrIndex:new e0}});var xn=uo;class ia{static decode(e){return new ia(e)}decode(){this.stream.pos;let e=xn.decode(this.stream);for(let t in e){let r=e[t];this[t]=r}if(this.version<2){if(this.topDictIndex.length!==1)throw new Error("Only a single font is allowed in CFF");this.topDict=this.topDictIndex[0]}return this.isCIDFont=this.topDict.ROS!=null,this}string(e){return this.version>=2?null:e<Bt.length?Bt[e]:this.stringIndex[e-Bt.length]}get postscriptName(){return this.version<2?this.nameIndex[0]:null}get fullName(){return this.string(this.topDict.FullName)}get familyName(){return this.string(this.topDict.FamilyName)}getCharString(e){return this.stream.pos=this.topDict.CharStrings[e].offset,this.stream.readBuffer(this.topDict.CharStrings[e].length)}getGlyphName(e){if(this.version>=2||this.isCIDFont)return null;let{charset:t}=this.topDict;if(Array.isArray(t))return t[e];if(e===0)return".notdef";switch(e-=1,t.version){case 0:return this.string(t.glyphs[e]);case 1:case 2:for(let r=0;r<t.ranges.length;r++){let a=t.ranges[r];if(a.offset<=e&&e<=a.offset+a.nLeft)return this.string(a.first+(e-a.offset))}break}return null}fdForGlyph(e){if(!this.topDict.FDSelect)return null;switch(this.topDict.FDSelect.version){case 0:return this.topDict.FDSelect.fds[e];case 3:case 4:let{ranges:t}=this.topDict.FDSelect,r=0,a=t.length-1;for(;r<=a;){let n=r+a>>1;if(e<t[n].first)a=n-1;else if(n<a&&e>=t[n+1].first)r=n+1;else return t[n].fd}default:throw new Error(`Unknown FDSelect version: ${this.topDict.FDSelect.version}`)}}privateDictForGlyph(e){if(this.topDict.FDSelect){let t=this.fdForGlyph(e);return this.topDict.FDArray[t]?this.topDict.FDArray[t].Private:null}return this.version<2?this.topDict.Private:this.topDict.FDArray[0].Private}constructor(e){this.stream=e,this.decode()}}var mn=ia;let co=new v({glyphIndex:l,vertOriginY:w});var fo=new v({majorVersion:l,minorVersion:l,defaultVertOriginY:w,numVertOriginYMetrics:l,metrics:new p(co,"numVertOriginYMetrics")});let H0=new v({height:O,width:O,horiBearingX:Se,horiBearingY:Se,horiAdvance:O,vertBearingX:Se,vertBearingY:Se,vertAdvance:O}),It=new v({height:O,width:O,bearingX:Se,bearingY:Se,advance:O}),_a=new v({glyph:l,xOffset:Se,yOffset:Se});class es{}class Dr{}new J("version",{1:{metrics:It,data:es},2:{metrics:It,data:Dr},5:{data:Dr},6:{metrics:H0,data:es},7:{metrics:H0,data:Dr},8:{metrics:It,pad:new pe(O),numComponents:l,components:new p(_a,"numComponents")},9:{metrics:H0,pad:new pe(O),numComponents:l,components:new p(_a,"numComponents")},17:{metrics:It,dataLen:g,data:new r0("dataLen")},18:{metrics:H0,dataLen:g,data:new r0("dataLen")},19:{dataLen:g,data:new r0("dataLen")}});let ts=new v({ascender:Se,descender:Se,widthMax:O,caretSlopeNumerator:Se,caretSlopeDenominator:Se,caretOffset:Se,minOriginSB:Se,minAdvanceSB:Se,maxBeforeBL:Se,minAfterBL:Se,pad:new pe(Se,2)}),ho=new v({glyphCode:l,offset:l}),po=new J(l,{header:{imageFormat:l,imageDataOffset:g},1:{offsetArray:new p(g,s=>s.parent.lastGlyphIndex-s.parent.firstGlyphIndex+1)},2:{imageSize:g,bigMetrics:H0},3:{offsetArray:new p(l,s=>s.parent.lastGlyphIndex-s.parent.firstGlyphIndex+1)},4:{numGlyphs:g,glyphArray:new p(ho,s=>s.numGlyphs+1)},5:{imageSize:g,bigMetrics:H0,numGlyphs:g,glyphCodeArray:new p(l,"numGlyphs")}}),bo=new v({firstGlyphIndex:l,lastGlyphIndex:l,subtable:new b(g,po)}),go=new v({indexSubTableArray:new b(g,new p(bo,1),{type:"parent"}),indexTablesSize:g,numberOfIndexSubTables:g,colorRef:g,hori:ts,vert:ts,startGlyphIndex:l,endGlyphIndex:l,ppemX:O,ppemY:O,bitDepth:O,flags:new Xe(O,["horizontal","vertical"])});var vo=new v({version:g,numSizes:g,sizes:new p(go,"numSizes")});let xo=new v({ppem:l,resolution:l,imageOffsets:new p(new b(g,"void"),s=>s.parent.parent.maxp.numGlyphs+1)});var mo=new v({version:l,flags:new Xe(l,["renderOutlines"]),numImgTables:g,imageTables:new p(new b(g,xo),"numImgTables")});let wo=new v({gid:l,paletteIndex:l}),yo=new v({gid:l,firstLayerIndex:l,numLayers:l});var Co=new v({version:l,numBaseGlyphRecords:l,baseGlyphRecord:new b(g,new p(yo,"numBaseGlyphRecords")),layerRecords:new b(g,new p(wo,"numLayerRecords"),{lazy:!0}),numLayerRecords:l});let So=new v({blue:O,green:O,red:O,alpha:O});var Ao=new J(l,{header:{numPaletteEntries:l,numPalettes:l,numColorRecords:l,colorRecords:new b(g,new p(So,"numColorRecords")),colorRecordIndices:new p(l,"numPalettes")},0:{},1:{offsetPaletteTypeArray:new b(g,new p(g,"numPalettes")),offsetPaletteLabelArray:new b(g,new p(l,"numPalettes")),offsetPaletteEntryLabelArray:new b(g,new p(l,"numPaletteEntries"))}});let dt=new J(l,{1:{coordinate:w},2:{coordinate:w,referenceGlyph:l,baseCoordPoint:l},3:{coordinate:w,deviceTable:new b(l,b0)}}),ko=new v({defaultIndex:l,baseCoordCount:l,baseCoords:new p(new b(l,dt),"baseCoordCount")}),Io=new v({tag:new ce(4),minCoord:new b(l,dt,{type:"parent"}),maxCoord:new b(l,dt,{type:"parent"})}),wn=new v({minCoord:new b(l,dt),maxCoord:new b(l,dt),featMinMaxCount:l,featMinMaxRecords:new p(Io,"featMinMaxCount")}),Oo=new v({tag:new ce(4),minMax:new b(l,wn,{type:"parent"})}),Po=new v({baseValues:new b(l,ko),defaultMinMax:new b(l,wn),baseLangSysCount:l,baseLangSysRecords:new p(Oo,"baseLangSysCount")}),Eo=new v({tag:new ce(4),script:new b(l,Po,{type:"parent"})}),To=new p(Eo,l),Fo=new p(new ce(4),l),rs=new v({baseTagList:new b(l,Fo),baseScriptList:new b(l,To)});var Do=new J(g,{header:{horizAxis:new b(l,rs),vertAxis:new b(l,rs)},65536:{},65537:{itemVariationStore:new b(g,rr)}});let Bo=new p(l,l),Lo=new v({coverage:new b(l,ue),glyphCount:l,attachPoints:new p(new b(l,Bo),"glyphCount")}),Mo=new J(l,{1:{coordinate:w},2:{caretValuePoint:l},3:{coordinate:w,deviceTable:new b(l,b0)}}),Ro=new p(new b(l,Mo),l),No=new v({coverage:new b(l,ue),ligGlyphCount:l,ligGlyphs:new p(new b(l,Ro),"ligGlyphCount")}),as=new v({markSetTableFormat:l,markSetCount:l,coverage:new p(new b(g,ue),"markSetCount")});var Uo=new J(g,{header:{glyphClassDef:new b(l,v0),attachList:new b(l,Lo),ligCaretList:new b(l,No),markAttachClassDef:new b(l,v0)},65536:{},65538:{markGlyphSetsDef:new b(l,as)},65539:{markGlyphSetsDef:new b(l,as),itemVariationStore:new b(g,rr)}});let V0=new Xe(l,["xPlacement","yPlacement","xAdvance","yAdvance","xPlaDevice","yPlaDevice","xAdvDevice","yAdvDevice"]),Vo={xPlacement:w,yPlacement:w,xAdvance:w,yAdvance:w,xPlaDevice:new b(l,b0,{type:"global",relativeTo:s=>s.rel}),yPlaDevice:new b(l,b0,{type:"global",relativeTo:s=>s.rel}),xAdvDevice:new b(l,b0,{type:"global",relativeTo:s=>s.rel}),yAdvDevice:new b(l,b0,{type:"global",relativeTo:s=>s.rel})};class q0{buildStruct(e){let t=e;for(;!t[this.key]&&t.parent;)t=t.parent;if(!t[this.key])return;let r={};r.rel=()=>t._startOffset;let a=t[this.key];for(let n in a)a[n]&&(r[n]=Vo[n]);return new v(r)}size(e,t){return this.buildStruct(t).size(e,t)}decode(e,t){let r=this.buildStruct(t).decode(e,t);return delete r.rel,r}constructor(e="valueFormat"){this.key=e}}let Go=new v({secondGlyph:l,value1:new q0("valueFormat1"),value2:new q0("valueFormat2")}),zo=new p(Go,l),Wo=new v({value1:new q0("valueFormat1"),value2:new q0("valueFormat2")}),ht=new J(l,{1:{xCoordinate:w,yCoordinate:w},2:{xCoordinate:w,yCoordinate:w,anchorPoint:l},3:{xCoordinate:w,yCoordinate:w,xDeviceTable:new b(l,b0),yDeviceTable:new b(l,b0)}}),Ho=new v({entryAnchor:new b(l,ht,{type:"parent"}),exitAnchor:new b(l,ht,{type:"parent"})}),qo=new v({class:l,markAnchor:new b(l,ht,{type:"parent"})}),Br=new p(qo,l),$o=new p(new b(l,ht),s=>s.parent.classCount),ss=new p($o,l),Xo=new p(new b(l,ht),s=>s.parent.parent.classCount),Yo=new p(Xo,l),Ko=new p(new b(l,Yo),l),pt=new J("lookupType",{1:new J(l,{1:{coverage:new b(l,ue),valueFormat:V0,value:new q0},2:{coverage:new b(l,ue),valueFormat:V0,valueCount:l,values:new fe(new q0,"valueCount")}}),2:new J(l,{1:{coverage:new b(l,ue),valueFormat1:V0,valueFormat2:V0,pairSetCount:l,pairSets:new fe(new b(l,zo),"pairSetCount")},2:{coverage:new b(l,ue),valueFormat1:V0,valueFormat2:V0,classDef1:new b(l,v0),classDef2:new b(l,v0),class1Count:l,class2Count:l,classRecords:new fe(new fe(Wo,"class2Count"),"class1Count")}}),3:{format:l,coverage:new b(l,ue),entryExitCount:l,entryExitRecords:new p(Ho,"entryExitCount")},4:{format:l,markCoverage:new b(l,ue),baseCoverage:new b(l,ue),classCount:l,markArray:new b(l,Br),baseArray:new b(l,ss)},5:{format:l,markCoverage:new b(l,ue),ligatureCoverage:new b(l,ue),classCount:l,markArray:new b(l,Br),ligatureArray:new b(l,Ko)},6:{format:l,mark1Coverage:new b(l,ue),mark2Coverage:new b(l,ue),classCount:l,mark1Array:new b(l,Br),mark2Array:new b(l,ss)},7:cn,8:fn,9:{posFormat:l,lookupType:l,extension:new b(g,null)}});pt.versions[9].extension.type=pt;var jo=new J(g,{header:{scriptList:new b(l,ln),featureList:new b(l,un),lookupList:new b(l,new Wt(pt))},65536:{},65537:{featureVariations:new b(g,dn)}});let yn=new p(l,l),Zo=yn,Jo=new v({glyph:l,compCount:l,components:new p(l,s=>s.compCount-1)}),Qo=new p(new b(l,Jo),l),Wr=new J("lookupType",{1:new J(l,{1:{coverage:new b(l,ue),deltaGlyphID:w},2:{coverage:new b(l,ue),glyphCount:l,substitute:new fe(l,"glyphCount")}}),2:{substFormat:l,coverage:new b(l,ue),count:l,sequences:new fe(new b(l,yn),"count")},3:{substFormat:l,coverage:new b(l,ue),count:l,alternateSet:new fe(new b(l,Zo),"count")},4:{substFormat:l,coverage:new b(l,ue),count:l,ligatureSets:new fe(new b(l,Qo),"count")},5:cn,6:fn,7:{substFormat:l,lookupType:l,extension:new b(g,null)},8:{substFormat:l,coverage:new b(l,ue),backtrackCoverage:new p(new b(l,ue),"backtrackGlyphCount"),lookaheadGlyphCount:l,lookaheadCoverage:new p(new b(l,ue),"lookaheadGlyphCount"),glyphCount:l,substitutes:new p(l,"glyphCount")}});Wr.versions[7].extension.type=Wr;var _o=new J(g,{header:{scriptList:new b(l,ln),featureList:new b(l,un),lookupList:new b(l,new Wt(Wr))},65536:{},65537:{featureVariations:new b(g,dn)}});let d0=new p(l,l),eu=new v({shrinkageEnableGSUB:new b(l,d0),shrinkageDisableGSUB:new b(l,d0),shrinkageEnableGPOS:new b(l,d0),shrinkageDisableGPOS:new b(l,d0),shrinkageJstfMax:new b(l,new Wt(pt)),extensionEnableGSUB:new b(l,d0),extensionDisableGSUB:new b(l,d0),extensionEnableGPOS:new b(l,d0),extensionDisableGPOS:new b(l,d0),extensionJstfMax:new b(l,new Wt(pt))}),Cn=new p(new b(l,eu),l),tu=new v({tag:new ce(4),jstfLangSys:new b(l,Cn)}),ru=new v({extenderGlyphs:new b(l,new p(l,l)),defaultLangSys:new b(l,Cn),langSysCount:l,langSysRecords:new p(tu,"langSysCount")}),au=new v({tag:new ce(4),script:new b(l,ru,{type:"parent"})});var su=new v({version:g,scriptCount:l,scriptList:new p(au,"scriptCount")});class nu{decode(e,t){switch(this.size(0,t)){case 1:return e.readUInt8();case 2:return e.readUInt16BE();case 3:return e.readUInt24BE();case 4:return e.readUInt32BE()}}size(e,t){return a0(this._size,null,t)}constructor(e){this._size=e}}let iu=new v({entry:new nu(s=>((s.parent.entryFormat&48)>>4)+1),outerIndex:s=>s.entry>>(s.parent.entryFormat&15)+1,innerIndex:s=>s.entry&(1<<(s.parent.entryFormat&15)+1)-1}),Lr=new v({entryFormat:l,mapCount:l,mapData:new p(iu,"mapCount")});var lu=new v({majorVersion:l,minorVersion:l,itemVariationStore:new b(g,rr),advanceWidthMapping:new b(g,Lr),LSBMapping:new b(g,Lr),RSBMapping:new b(g,Lr)});let ou=new v({format:g,length:g,offset:g}),uu=new v({reserved:new pe(l,2),cbSignature:g,signature:new r0("cbSignature")});var cu=new v({ulVersion:g,usNumSigs:l,usFlag:l,signatures:new p(ou,"usNumSigs"),signatureBlocks:new p(uu,"usNumSigs")});let fu=new v({rangeMaxPPEM:l,rangeGaspBehavior:new Xe(l,["grayscale","gridfit","symmetricSmoothing","symmetricGridfit"])});var du=new v({version:l,numRanges:l,gaspRanges:new p(fu,"numRanges")});let hu=new v({pixelSize:O,maximumWidth:O,widths:new p(O,s=>s.parent.parent.maxp.numGlyphs)});var pu=new v({version:l,numRecords:w,sizeDeviceRecord:I0,records:new p(hu,"numRecords")});let bu=new v({left:l,right:l,value:w}),ns=new v({firstGlyph:l,nGlyphs:l,offsets:new p(l,"nGlyphs"),max:s=>s.offsets.length&&Math.max.apply(Math,s.offsets)}),gu=new v({off:s=>s._startOffset-s.parent.parent._startOffset,len:s=>((s.parent.leftTable.max-s.off)/s.parent.rowWidth+1)*(s.parent.rowWidth/2),values:new fe(w,"len")}),is=new J("format",{0:{nPairs:l,searchRange:l,entrySelector:l,rangeShift:l,pairs:new p(bu,"nPairs")},2:{rowWidth:l,leftTable:new b(l,ns,{type:"parent"}),rightTable:new b(l,ns,{type:"parent"}),array:new b(l,gu,{type:"parent"})},3:{glyphCount:l,kernValueCount:O,leftClassCount:O,rightClassCount:O,flags:O,kernValue:new p(w,"kernValueCount"),leftClass:new p(O,"glyphCount"),rightClass:new p(O,"glyphCount"),kernIndex:new p(O,s=>s.leftClassCount*s.rightClassCount)}}),ls=new J("version",{0:{subVersion:l,length:l,format:O,coverage:new Xe(O,["horizontal","minimum","crossStream","override"]),subtable:is,padding:new pe(O,s=>s.length-s._currentOffset)},1:{length:g,coverage:new Xe(O,[null,null,null,null,null,"variation","crossStream","vertical"]),format:O,tupleIndex:l,subtable:is,padding:new pe(O,s=>s.length-s._currentOffset)}});var vu=new J(l,{0:{nTables:l,tables:new p(ls,"nTables")},1:{reserved:new pe(l),nTables:g,tables:new p(ls,"nTables")}}),xu=new v({version:l,numGlyphs:l,yPels:new p(O,"numGlyphs")}),mu=new v({version:l,fontNumber:g,pitch:l,xHeight:l,style:l,typeFamily:l,capHeight:l,symbolSet:l,typeface:new ce(16),characterComplement:new ce(8),fileName:new ce(6),strokeWeight:new ce(1),widthType:new ce(1),serifStyle:O,reserved:new pe(O)});let wu=new v({bCharSet:O,xRatio:O,yStartRatio:O,yEndRatio:O}),yu=new v({yPelHeight:l,yMax:w,yMin:w}),Cu=new v({recs:l,startsz:O,endsz:O,entries:new p(yu,"recs")});var Su=new v({version:l,numRecs:l,numRatios:l,ratioRanges:new p(wu,"numRatios"),offsets:new p(l,"numRatios"),groups:new p(Cu,"numRecs")}),Au=new v({version:l,ascent:w,descent:w,lineGap:w,advanceHeightMax:w,minTopSideBearing:w,minBottomSideBearing:w,yMaxExtent:w,caretSlopeRise:w,caretSlopeRun:w,caretOffset:w,reserved:new pe(w,4),metricDataFormat:w,numberOfMetrics:l});let ku=new v({advance:l,bearing:w});var Iu=new v({metrics:new fe(ku,s=>s.parent.vhea.numberOfMetrics),bearings:new fe(w,s=>s.parent.maxp.numGlyphs-s.parent.vhea.numberOfMetrics)});let os=new D0(16,"BE",14),Ou=new v({fromCoord:os,toCoord:os}),Pu=new v({pairCount:l,correspondence:new p(Ou,"pairCount")});var Eu=new v({version:be,axisCount:g,segment:new p(Pu,"axisCount")});class Tu{getItem(e){if(this._items[e]==null){let t=this.stream.pos;this.stream.pos=this.base+this.type.size(null,this.parent)*e,this._items[e]=this.type.decode(this.stream,this.parent),this.stream.pos=t}return this._items[e]}inspect(){return`[UnboundedArray ${this.type.constructor.name}]`}constructor(e,t,r){this.type=e,this.stream=t,this.parent=r,this.base=this.stream.pos,this._items=[]}}class t0 extends p{decode(e,t){return new Tu(this.type,e,t)}constructor(e){super(e,0)}}let x0=function(s=l){class e{decode(o,u){return u=u.parent.parent,this.type.decode(o,u)}size(o,u){return u=u.parent.parent,this.type.size(o,u)}encode(o,u,c){return c=c.parent.parent,this.type.encode(o,u,c)}constructor(o){this.type=o}}s=new e(s);let t=new v({unitSize:l,nUnits:l,searchRange:l,entrySelector:l,rangeShift:l}),r=new v({lastGlyph:l,firstGlyph:l,value:s}),a=new v({lastGlyph:l,firstGlyph:l,values:new b(l,new p(s,i=>i.lastGlyph-i.firstGlyph+1),{type:"parent"})}),n=new v({glyph:l,value:s});return new J(l,{0:{values:new t0(s)},2:{binarySearchHeader:t,segments:new p(r,i=>i.binarySearchHeader.nUnits)},4:{binarySearchHeader:t,segments:new p(a,i=>i.binarySearchHeader.nUnits)},6:{binarySearchHeader:t,segments:new p(n,i=>i.binarySearchHeader.nUnits)},8:{firstGlyph:l,count:l,values:new p(s,"count")}})};function Ot(s={},e=l){let t=Object.assign({newState:l,flags:l},s),r=new v(t),a=new t0(new p(l,i=>i.nClasses));return new v({nClasses:g,classTable:new b(g,new x0(e)),stateArray:new b(g,a),entryTable:new b(g,new t0(r))})}function Fu(s={},e=l){let t=new v({version(){return 8},firstGlyph:l,values:new p(O,l)}),r=Object.assign({newStateOffset:l,newState:o=>(o.newStateOffset-(o.parent.stateArray.base-o.parent._startOffset))/o.parent.nClasses,flags:l},s),a=new v(r),n=new t0(new p(O,o=>o.nClasses));return new v({nClasses:l,classTable:new b(l,t),stateArray:new b(l,n),entryTable:new b(l,new t0(a))})}let Du=new J("format",{0:{deltas:new p(w,32)},1:{deltas:new p(w,32),mappingData:new x0(l)},2:{standardGlyph:l,controlPoints:new p(l,32)},3:{standardGlyph:l,controlPoints:new p(l,32),mappingData:new x0(l)}});var Bu=new v({version:be,format:l,defaultBaseline:l,subtable:Du});let Lu=new v({setting:l,nameIndex:w,name:s=>s.parent.parent.parent.name.records.fontFeatures[s.nameIndex]}),Mu=new v({feature:l,nSettings:l,settingTable:new b(g,new p(Lu,"nSettings"),{type:"parent"}),featureFlags:new Xe(O,[null,null,null,null,null,null,"hasDefault","exclusive"]),defaultSetting:O,nameIndex:w,name:s=>s.parent.parent.name.records.fontFeatures[s.nameIndex]});var Ru=new v({version:be,featureNameCount:l,reserved1:new pe(l),reserved2:new pe(g),featureNames:new p(Mu,"featureNameCount")});let Nu=new v({axisTag:new ce(4),minValue:be,defaultValue:be,maxValue:be,flags:l,nameID:l,name:s=>s.parent.parent.name.records.fontFeatures[s.nameID]}),Uu=new v({nameID:l,name:s=>s.parent.parent.name.records.fontFeatures[s.nameID],flags:l,coord:new p(be,s=>s.parent.axisCount),postscriptNameID:new Nt(l,s=>s.parent.instanceSize-s._currentOffset>0)});var Vu=new v({version:be,offsetToData:l,countSizePairs:l,axisCount:l,axisSize:l,instanceCount:l,instanceSize:l,axis:new p(Nu,"axisCount"),instance:new p(Uu,"instanceCount")});let Gu=new D0(16,"BE",14);class zu{static decode(e,t){return t.flags?e.readUInt32BE():e.readUInt16BE()*2}}let Wu=new v({version:l,reserved:new pe(l),axisCount:l,globalCoordCount:l,globalCoords:new b(g,new p(new p(Gu,"axisCount"),"globalCoordCount")),glyphCount:l,flags:l,offsetToData:g,offsets:new p(new b(zu,"void",{relativeTo:s=>s.offsetToData,allowNull:!1}),s=>s.glyphCount+1)});var Hu=Wu;let qu=new v({length:l,coverage:l,subFeatureFlags:g,stateTable:new Fu}),$u=new v({justClass:g,beforeGrowLimit:be,beforeShrinkLimit:be,afterGrowLimit:be,afterShrinkLimit:be,growFlags:l,shrinkFlags:l}),Xu=new p($u,g),Yu=new J("actionType",{0:{lowerLimit:be,upperLimit:be,order:l,glyphs:new p(l,l)},1:{addGlyph:l},2:{substThreshold:be,addGlyph:l,substGlyph:l},3:{},4:{variationAxis:g,minimumLimit:be,noStretchValue:be,maximumLimit:be},5:{flags:l,glyph:l}}),Ku=new v({actionClass:l,actionType:l,actionLength:g,actionData:Yu,padding:new pe(O,s=>s.actionLength-s._currentOffset)}),ju=new p(Ku,g),Zu=new v({lookupTable:new x0(new b(l,ju))}),us=new v({classTable:new b(l,qu,{type:"parent"}),wdcOffset:l,postCompensationTable:new b(l,Zu,{type:"parent"}),widthDeltaClusters:new x0(new b(l,Xu,{type:"parent",relativeTo:s=>s.wdcOffset}))});var Ju=new v({version:g,format:l,horizontal:new b(l,us),vertical:new b(l,us)});let Qu={action:l},_u={markIndex:l,currentIndex:l},ec={currentInsertIndex:l,markedInsertIndex:l},tc=new v({items:new t0(new b(g,new x0))}),rc=new J("type",{0:{stateTable:new Ot},1:{stateTable:new Ot(_u),substitutionTable:new b(g,tc)},2:{stateTable:new Ot(Qu),ligatureActions:new b(g,new t0(g)),components:new b(g,new t0(l)),ligatureList:new b(g,new t0(l))},4:{lookupTable:new x0},5:{stateTable:new Ot(ec),insertionActions:new b(g,new t0(l))}}),ac=new v({length:g,coverage:g0,type:O,subFeatureFlags:g,table:rc,padding:new pe(O,s=>s.length-s._currentOffset)}),sc=new v({featureType:l,featureSetting:l,enableFlags:g,disableFlags:g}),nc=new v({defaultFlags:g,chainLength:g,nFeatureEntries:g,nSubtables:g,features:new p(sc,"nFeatureEntries"),subtables:new p(ac,"nSubtables")});var ic=new v({version:l,unused:new pe(l),nChains:g,chains:new p(nc,"nChains")});let lc=new v({left:w,top:w,right:w,bottom:w});var oc=new v({version:be,format:l,lookupTable:new x0(lc)});let q={};var Ht=q;q.cmap=il;q.head=ll;q.hhea=ol;q.hmtx=cl;q.maxp=fl;q.name=xl;q["OS/2"]=ml;q.post=wl;q.fpgm=Cl;q.loca=Sl;q.prep=Al;q["cvt "]=yl;q.glyf=kl;q["CFF "]=mn;q.CFF2=mn;q.VORG=fo;q.EBLC=vo;q.CBLC=q.EBLC;q.sbix=mo;q.COLR=Co;q.CPAL=Ao;q.BASE=Do;q.GDEF=Uo;q.GPOS=jo;q.GSUB=_o;q.JSTF=su;q.HVAR=lu;q.DSIG=cu;q.gasp=du;q.hdmx=pu;q.kern=vu;q.LTSH=xu;q.PCLT=mu;q.VDMX=Su;q.vhea=Au;q.vmtx=Iu;q.avar=Eu;q.bsln=Bu;q.feat=Ru;q.fvar=Vu;q.gvar=Hu;q.just=Ju;q.morx=ic;q.opbd=oc;let uc=new v({tag:new ce(4),checkSum:g,offset:new b(g,"void",{type:"global"}),length:g}),la=new v({tag:new ce(4),numTables:l,searchRange:l,entrySelector:l,rangeShift:l,tables:new p(uc,"numTables")});la.process=function(){let s={};for(let e of this.tables)s[e.tag]=e;this.tables=s};la.preEncode=function(){if(!Array.isArray(this.tables)){let t=[];for(let r in this.tables){let a=this.tables[r];a&&t.push({tag:r,checkSum:0,offset:new Nr(Ht[r],a),length:Ht[r].size(a)})}this.tables=t}this.tag="true",this.numTables=this.tables.length;let s=Math.floor(Math.log(this.numTables)/Math.LN2),e=Math.pow(2,s);this.searchRange=e*16,this.entrySelector=Math.log(e)/Math.LN2,this.rangeShift=this.numTables*16-this.searchRange};var Sn=la;function Lt(s,e){let t=0,r=s.length-1;for(;t<=r;){let a=t+r>>1,n=e(s[a]);if(n<0)r=a-1;else if(n>0)t=a+1;else return a}return-1}function z0(s,e){let t=[];for(;s<e;)t.push(s++);return t}const ar=new TextDecoder("ascii"),cs="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",nt=new Uint8Array(256);for(let s=0;s<cs.length;s++)nt[cs.charCodeAt(s)]=s;function oa(s){let e=s.length*.75;s[s.length-1]==="="&&(e--,s[s.length-2]==="="&&e--);let t=new Uint8Array(e),r=0;for(let a=0,n=s.length;a<n;a+=4){let i=nt[s.charCodeAt(a)],o=nt[s.charCodeAt(a+1)],u=nt[s.charCodeAt(a+2)],c=nt[s.charCodeAt(a+3)];t[r++]=i<<2|o>>4,t[r++]=(o&15)<<4|u>>2,t[r++]=(u&3)<<6|c&63}return t}class ua{findSubtable(e,t){for(let[r,a]of t)for(let n of e.tables)if(n.platformID===r&&n.encodingID===a)return n.table;return null}lookup(e,t){if(this.encoding)e=this.encoding.get(e)||e;else if(t){let a=this.getVariationSelector(e,t);if(a)return a}let r=this.cmap;switch(r.version){case 0:return r.codeMap.get(e)||0;case 4:{let a=0,n=r.segCount-1;for(;a<=n;){let i=a+n>>1;if(e<r.startCode.get(i))n=i-1;else if(e>r.endCode.get(i))a=i+1;else{let o=r.idRangeOffset.get(i),u;if(o===0)u=e+r.idDelta.get(i);else{let c=o/2+(e-r.startCode.get(i))-(r.segCount-i);u=r.glyphIndexArray.get(c)||0,u!==0&&(u+=r.idDelta.get(i))}return u&65535}}return 0}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return r.glyphIndices.get(e-r.firstCode)||0;case 12:case 13:{let a=0,n=r.nGroups-1;for(;a<=n;){let i=a+n>>1,o=r.groups.get(i);if(e<o.startCharCode)n=i-1;else if(e>o.endCharCode)a=i+1;else return r.version===12?o.glyphID+(e-o.startCharCode):o.glyphID}return 0}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${r.version}`)}}getVariationSelector(e,t){if(!this.uvs)return 0;let r=this.uvs.varSelectors.toArray(),a=Lt(r,i=>t-i.varSelector),n=r[a];return a!==-1&&n.defaultUVS&&(a=Lt(n.defaultUVS,i=>e<i.startUnicodeValue?-1:e>i.startUnicodeValue+i.additionalCount?1:0)),a!==-1&&n.nonDefaultUVS&&(a=Lt(n.nonDefaultUVS,i=>e-i.unicodeValue),a!==-1)?n.nonDefaultUVS[a].glyphID:0}getCharacterSet(){let e=this.cmap;switch(e.version){case 0:return z0(0,e.codeMap.length);case 4:{let t=[],r=e.endCode.toArray();for(let a=0;a<r.length;a++){let n=r[a]+1,i=e.startCode.get(a);t.push(...z0(i,n))}return t}case 8:throw new Error("TODO: cmap format 8");case 6:case 10:return z0(e.firstCode,e.firstCode+e.glyphIndices.length);case 12:case 13:{let t=[];for(let r of e.groups.toArray())t.push(...z0(r.startCharCode,r.endCharCode+1));return t}case 14:throw new Error("TODO: cmap format 14");default:throw new Error(`Unknown cmap format ${e.version}`)}}codePointsForGlyph(e){let t=this.cmap;switch(t.version){case 0:{let a=[];for(let n=0;n<256;n++)t.codeMap.get(n)===e&&a.push(n);return a}case 4:{let a=[];for(let n=0;n<t.segCount;n++){let i=t.endCode.get(n),o=t.startCode.get(n),u=t.idRangeOffset.get(n),c=t.idDelta.get(n);for(var r=o;r<=i;r++){let d=0;if(u===0)d=r+c;else{let f=u/2+(r-o)-(t.segCount-n);d=t.glyphIndexArray.get(f)||0,d!==0&&(d+=c)}d===e&&a.push(r)}}return a}case 12:{let a=[];for(let n of t.groups.toArray())e>=n.glyphID&&e<=n.glyphID+(n.endCharCode-n.startCharCode)&&a.push(n.startCharCode+(e-n.glyphID));return a}case 13:{let a=[];for(let n of t.groups.toArray())e===n.glyphID&&a.push(...z0(n.startCharCode,n.endCharCode+1));return a}default:throw new Error(`Unknown cmap format ${t.version}`)}}constructor(e){if(this.encoding=null,this.cmap=this.findSubtable(e,[[3,10],[0,6],[0,4],[3,1],[0,3],[0,2],[0,1],[0,0]]),!this.cmap)for(let t of e.tables){let r=tn(t.platformID,t.encodingID,t.table.language-1),a=pl(r);a&&(this.cmap=t.table,this.encoding=a)}if(!this.cmap)throw new Error("Could not find a supported cmap table");this.uvs=this.findSubtable(e,[[0,5]]),this.uvs&&this.uvs.version!==14&&(this.uvs=null)}}Ie([Oe],ua.prototype,"getCharacterSet",null);Ie([Oe],ua.prototype,"codePointsForGlyph",null);class cc{process(e,t){for(let r=0;r<e.length-1;r++){let a=e[r].id,n=e[r+1].id;t[r].xAdvance+=this.getKerning(a,n)}}getKerning(e,t){let r=0;for(let a of this.kern.tables){if(a.coverage.crossStream)continue;switch(a.version){case 0:if(!a.coverage.horizontal)continue;break;case 1:if(a.coverage.vertical||a.coverage.variation)continue;break;default:throw new Error(`Unsupported kerning table version ${a.version}`)}let n=0,i=a.subtable;switch(a.format){case 0:let o=Lt(i.pairs,function(f){return e-f.left||t-f.right});o>=0&&(n=i.pairs[o].value);break;case 2:let u=0,c=0;e>=i.leftTable.firstGlyph&&e<i.leftTable.firstGlyph+i.leftTable.nGlyphs?u=i.leftTable.offsets[e-i.leftTable.firstGlyph]:u=i.array.off,t>=i.rightTable.firstGlyph&&t<i.rightTable.firstGlyph+i.rightTable.nGlyphs&&(c=i.rightTable.offsets[t-i.rightTable.firstGlyph]);let d=(u+c-i.array.off)/2;n=i.array.values.get(d);break;case 3:if(e>=i.glyphCount||t>=i.glyphCount)return 0;n=i.kernValue[i.kernIndex[i.leftClass[e]*i.rightClassCount+i.rightClass[t]]];break;default:throw new Error(`Unsupported kerning sub-table format ${a.format}`)}a.coverage.override?r=n:r+=n}return r}constructor(e){this.kern=e.kern}}class fc{positionGlyphs(e,t){let r=0,a=0;for(let n=0;n<e.length;n++)e[n].isMark?a=n:(r!==a&&this.positionCluster(e,t,r,a),r=a=n);return r!==a&&this.positionCluster(e,t,r,a),t}positionCluster(e,t,r,a){let n=e[r],i=n.cbox.copy();n.codePoints.length>1&&(i.minX+=(n.codePoints.length-1)*i.width/n.codePoints.length);let o=-t[r].xAdvance,u=0,c=this.font.unitsPerEm/16;for(let d=r+1;d<=a;d++){let f=e[d],x=f.cbox,C=t[d],A=this.getCombiningClass(f.codePoints[0]);if(A!=="Not_Reordered"){switch(C.xOffset=C.yOffset=0,A){case"Double_Above":case"Double_Below":C.xOffset+=i.minX-x.width/2-x.minX;break;case"Attached_Below_Left":case"Below_Left":case"Above_Left":C.xOffset+=i.minX-x.minX;break;case"Attached_Above_Right":case"Below_Right":case"Above_Right":C.xOffset+=i.maxX-x.width-x.minX;break;default:C.xOffset+=i.minX+(i.width-x.width)/2-x.minX}switch(A){case"Double_Below":case"Below_Left":case"Below":case"Below_Right":case"Attached_Below_Left":case"Attached_Below":(A==="Attached_Below_Left"||A==="Attached_Below")&&(i.minY+=c),C.yOffset=-i.minY-x.maxY,i.minY+=x.height;break;case"Double_Above":case"Above_Left":case"Above":case"Above_Right":case"Attached_Above":case"Attached_Above_Right":(A==="Attached_Above"||A==="Attached_Above_Right")&&(i.maxY+=c),C.yOffset=i.maxY-x.minY,i.maxY+=x.height;break}C.xAdvance=C.yAdvance=0,C.xOffset+=o,C.yOffset+=u}else o-=C.xAdvance,u-=C.yAdvance}}getCombiningClass(e){let t=Ui(e);if((e&-256)===3584){if(t==="Not_Reordered")switch(e){case 3633:case 3636:case 3637:case 3638:case 3639:case 3655:case 3660:case 3645:case 3662:return"Above_Right";case 3761:case 3764:case 3765:case 3766:case 3767:case 3771:case 3788:case 3789:return"Above";case 3772:return"Below"}else if(e===3642)return"Below_Right"}switch(t){case"CCC10":case"CCC11":case"CCC12":case"CCC13":case"CCC14":case"CCC15":case"CCC16":case"CCC17":case"CCC18":case"CCC20":case"CCC22":return"Below";case"CCC23":return"Attached_Above";case"CCC24":return"Above_Right";case"CCC25":case"CCC19":return"Above_Left";case"CCC26":return"Above";case"CCC21":break;case"CCC27":case"CCC28":case"CCC30":case"CCC31":case"CCC33":case"CCC34":case"CCC35":case"CCC36":return"Above";case"CCC29":case"CCC32":return"Below";case"CCC103":return"Below_Right";case"CCC107":return"Above_Right";case"CCC118":return"Below";case"CCC122":return"Above";case"CCC129":case"CCC132":return"Below";case"CCC130":return"Above"}return t}constructor(e){this.font=e}}class m0{get width(){return this.maxX-this.minX}get height(){return this.maxY-this.minY}addPoint(e,t){Math.abs(e)!==1/0&&(e<this.minX&&(this.minX=e),e>this.maxX&&(this.maxX=e)),Math.abs(t)!==1/0&&(t<this.minY&&(this.minY=t),t>this.maxY&&(this.maxY=t))}copy(){return new m0(this.minX,this.minY,this.maxX,this.maxY)}constructor(e=1/0,t=1/0,r=-1/0,a=-1/0){this.minX=e,this.minY=t,this.maxX=r,this.maxY=a}}const $0={Caucasian_Albanian:"aghb",Arabic:"arab",Imperial_Aramaic:"armi",Armenian:"armn",Avestan:"avst",Balinese:"bali",Bamum:"bamu",Bassa_Vah:"bass",Batak:"batk",Bengali:["bng2","beng"],Bopomofo:"bopo",Brahmi:"brah",Braille:"brai",Buginese:"bugi",Buhid:"buhd",Chakma:"cakm",Canadian_Aboriginal:"cans",Carian:"cari",Cham:"cham",Cherokee:"cher",Coptic:"copt",Cypriot:"cprt",Cyrillic:"cyrl",Devanagari:["dev2","deva"],Deseret:"dsrt",Duployan:"dupl",Egyptian_Hieroglyphs:"egyp",Elbasan:"elba",Ethiopic:"ethi",Georgian:"geor",Glagolitic:"glag",Gothic:"goth",Grantha:"gran",Greek:"grek",Gujarati:["gjr2","gujr"],Gurmukhi:["gur2","guru"],Hangul:"hang",Han:"hani",Hanunoo:"hano",Hebrew:"hebr",Hiragana:"hira",Pahawh_Hmong:"hmng",Katakana_Or_Hiragana:"hrkt",Old_Italic:"ital",Javanese:"java",Kayah_Li:"kali",Katakana:"kana",Kharoshthi:"khar",Khmer:"khmr",Khojki:"khoj",Kannada:["knd2","knda"],Kaithi:"kthi",Tai_Tham:"lana",Lao:"lao ",Latin:"latn",Lepcha:"lepc",Limbu:"limb",Linear_A:"lina",Linear_B:"linb",Lisu:"lisu",Lycian:"lyci",Lydian:"lydi",Mahajani:"mahj",Mandaic:"mand",Manichaean:"mani",Mende_Kikakui:"mend",Meroitic_Cursive:"merc",Meroitic_Hieroglyphs:"mero",Malayalam:["mlm2","mlym"],Modi:"modi",Mongolian:"mong",Mro:"mroo",Meetei_Mayek:"mtei",Myanmar:["mym2","mymr"],Old_North_Arabian:"narb",Nabataean:"nbat",Nko:"nko ",Ogham:"ogam",Ol_Chiki:"olck",Old_Turkic:"orkh",Oriya:["ory2","orya"],Osmanya:"osma",Palmyrene:"palm",Pau_Cin_Hau:"pauc",Old_Permic:"perm",Phags_Pa:"phag",Inscriptional_Pahlavi:"phli",Psalter_Pahlavi:"phlp",Phoenician:"phnx",Miao:"plrd",Inscriptional_Parthian:"prti",Rejang:"rjng",Runic:"runr",Samaritan:"samr",Old_South_Arabian:"sarb",Saurashtra:"saur",Shavian:"shaw",Sharada:"shrd",Siddham:"sidd",Khudawadi:"sind",Sinhala:"sinh",Sora_Sompeng:"sora",Sundanese:"sund",Syloti_Nagri:"sylo",Syriac:"syrc",Tagbanwa:"tagb",Takri:"takr",Tai_Le:"tale",New_Tai_Lue:"talu",Tamil:["tml2","taml"],Tai_Viet:"tavt",Telugu:["tel2","telu"],Tifinagh:"tfng",Tagalog:"tglg",Thaana:"thaa",Thai:"thai",Tibetan:"tibt",Tirhuta:"tirh",Ugaritic:"ugar",Vai:"vai ",Warang_Citi:"wara",Old_Persian:"xpeo",Cuneiform:"xsux",Yi:"yi  ",Inherited:"zinh",Common:"zyyy",Unknown:"zzzz"},Hr={};for(let s in $0){let e=$0[s];if(Array.isArray(e))for(let t of e)Hr[t]=s;else Hr[e]=s}function dc(s){return Hr[s]}function hc(s){let e=s.length,t=0;for(;t<e;){let r=s.charCodeAt(t++);if(55296<=r&&r<=56319&&t<e){let n=s.charCodeAt(t);56320<=n&&n<=57343&&(t++,r=((r&1023)<<10)+(n&1023)+65536)}let a=Ys(r);if(a!=="Common"&&a!=="Inherited"&&a!=="Unknown")return $0[a]}return $0.Unknown}function pc(s){for(let e=0;e<s.length;e++){let t=s[e],r=Ys(t);if(r!=="Common"&&r!=="Inherited"&&r!=="Unknown")return $0[r]}return $0.Unknown}const bc={arab:!0,hebr:!0,syrc:!0,thaa:!0,cprt:!0,khar:!0,phnx:!0,"nko ":!0,lydi:!0,avst:!0,armi:!0,phli:!0,prti:!0,sarb:!0,orkh:!0,samr:!0,mand:!0,merc:!0,mero:!0,mani:!0,mend:!0,nbat:!0,narb:!0,palm:!0,phlp:!0};function An(s){return bc[s]?"rtl":"ltr"}class gc{get advanceWidth(){let e=0;for(let t of this.positions)e+=t.xAdvance;return e}get advanceHeight(){let e=0;for(let t of this.positions)e+=t.yAdvance;return e}get bbox(){let e=new m0,t=0,r=0;for(let a=0;a<this.glyphs.length;a++){let n=this.glyphs[a],i=this.positions[a],o=n.bbox;e.addPoint(o.minX+t+i.xOffset,o.minY+r+i.yOffset),e.addPoint(o.maxX+t+i.xOffset,o.maxY+r+i.yOffset),t+=i.xAdvance,r+=i.yAdvance}return e}constructor(e,t,r,a,n){if(this.glyphs=e,this.positions=null,this.script=r,this.language=a||null,this.direction=n||An(r),this.features={},Array.isArray(t))for(let i of t)this.features[i]=!0;else typeof t=="object"&&(this.features=t)}}class vc{constructor(e=0,t=0,r=0,a=0){this.xAdvance=e,this.yAdvance=t,this.xOffset=r,this.yOffset=a}}const P0={allTypographicFeatures:{code:0,exclusive:!1,allTypeFeatures:0},ligatures:{code:1,exclusive:!1,requiredLigatures:0,commonLigatures:2,rareLigatures:4,rebusPictures:8,diphthongLigatures:10,squaredLigatures:12,abbrevSquaredLigatures:14,symbolLigatures:16,contextualLigatures:18,historicalLigatures:20},cursiveConnection:{code:2,exclusive:!0,unconnected:0,partiallyConnected:1,cursive:2},letterCase:{code:3,exclusive:!0},verticalSubstitution:{code:4,exclusive:!1,substituteVerticalForms:0},linguisticRearrangement:{code:5,exclusive:!1,linguisticRearrangement:0},numberSpacing:{code:6,exclusive:!0,monospacedNumbers:0,proportionalNumbers:1,thirdWidthNumbers:2,quarterWidthNumbers:3},smartSwash:{code:8,exclusive:!1,wordInitialSwashes:0,wordFinalSwashes:2,nonFinalSwashes:8},diacritics:{code:9,exclusive:!0,showDiacritics:0,hideDiacritics:1,decomposeDiacritics:2},verticalPosition:{code:10,exclusive:!0,normalPosition:0,superiors:1,inferiors:2,ordinals:3,scientificInferiors:4},fractions:{code:11,exclusive:!0,noFractions:0,verticalFractions:1,diagonalFractions:2},overlappingCharacters:{code:13,exclusive:!1,preventOverlap:0},typographicExtras:{code:14,exclusive:!1,slashedZero:4},mathematicalExtras:{code:15,exclusive:!1,mathematicalGreek:10},ornamentSets:{code:16,exclusive:!0,noOrnaments:0,dingbats:1,piCharacters:2,fleurons:3,decorativeBorders:4,internationalSymbols:5,mathSymbols:6},characterAlternatives:{code:17,exclusive:!0,noAlternates:0},designComplexity:{code:18,exclusive:!0,designLevel1:0,designLevel2:1,designLevel3:2,designLevel4:3,designLevel5:4},styleOptions:{code:19,exclusive:!0,noStyleOptions:0,displayText:1,engravedText:2,illuminatedCaps:3,titlingCaps:4,tallCaps:5},characterShape:{code:20,exclusive:!0,traditionalCharacters:0,simplifiedCharacters:1,JIS1978Characters:2,JIS1983Characters:3,JIS1990Characters:4,traditionalAltOne:5,traditionalAltTwo:6,traditionalAltThree:7,traditionalAltFour:8,traditionalAltFive:9,expertCharacters:10,JIS2004Characters:11,hojoCharacters:12,NLCCharacters:13,traditionalNamesCharacters:14},numberCase:{code:21,exclusive:!0,lowerCaseNumbers:0,upperCaseNumbers:1},textSpacing:{code:22,exclusive:!0,proportionalText:0,monospacedText:1,halfWidthText:2,thirdWidthText:3,quarterWidthText:4,altProportionalText:5,altHalfWidthText:6},transliteration:{code:23,exclusive:!0,noTransliteration:0},annotation:{code:24,exclusive:!0,noAnnotation:0,boxAnnotation:1,roundedBoxAnnotation:2,circleAnnotation:3,invertedCircleAnnotation:4,parenthesisAnnotation:5,periodAnnotation:6,romanNumeralAnnotation:7,diamondAnnotation:8,invertedBoxAnnotation:9,invertedRoundedBoxAnnotation:10},kanaSpacing:{code:25,exclusive:!0,fullWidthKana:0,proportionalKana:1},ideographicSpacing:{code:26,exclusive:!0,fullWidthIdeographs:0,proportionalIdeographs:1,halfWidthIdeographs:2},unicodeDecomposition:{code:27,exclusive:!1,canonicalComposition:0,compatibilityComposition:2,transcodingComposition:4},rubyKana:{code:28,exclusive:!1,rubyKana:2},CJKSymbolAlternatives:{code:29,exclusive:!0,noCJKSymbolAlternatives:0,CJKSymbolAltOne:1,CJKSymbolAltTwo:2,CJKSymbolAltThree:3,CJKSymbolAltFour:4,CJKSymbolAltFive:5},ideographicAlternatives:{code:30,exclusive:!0,noIdeographicAlternatives:0,ideographicAltOne:1,ideographicAltTwo:2,ideographicAltThree:3,ideographicAltFour:4,ideographicAltFive:5},CJKVerticalRomanPlacement:{code:31,exclusive:!0,CJKVerticalRomanCentered:0,CJKVerticalRomanHBaseline:1},italicCJKRoman:{code:32,exclusive:!1,CJKItalicRoman:2},caseSensitiveLayout:{code:33,exclusive:!1,caseSensitiveLayout:0,caseSensitiveSpacing:2},alternateKana:{code:34,exclusive:!1,alternateHorizKana:0,alternateVertKana:2},stylisticAlternatives:{code:35,exclusive:!1,noStylisticAlternates:0,stylisticAltOne:2,stylisticAltTwo:4,stylisticAltThree:6,stylisticAltFour:8,stylisticAltFive:10,stylisticAltSix:12,stylisticAltSeven:14,stylisticAltEight:16,stylisticAltNine:18,stylisticAltTen:20,stylisticAltEleven:22,stylisticAltTwelve:24,stylisticAltThirteen:26,stylisticAltFourteen:28,stylisticAltFifteen:30,stylisticAltSixteen:32,stylisticAltSeventeen:34,stylisticAltEighteen:36,stylisticAltNineteen:38,stylisticAltTwenty:40},contextualAlternates:{code:36,exclusive:!1,contextualAlternates:0,swashAlternates:2,contextualSwashAlternates:4},lowerCase:{code:37,exclusive:!0,defaultLowerCase:0,lowerCaseSmallCaps:1,lowerCasePetiteCaps:2},upperCase:{code:38,exclusive:!0,defaultUpperCase:0,upperCaseSmallCaps:1,upperCasePetiteCaps:2},languageTag:{code:39,exclusive:!0},CJKRomanSpacing:{code:103,exclusive:!0,halfWidthCJKRoman:0,proportionalCJKRoman:1,defaultCJKRoman:2,fullWidthCJKRoman:3}},I=(s,e)=>[P0[s].code,P0[s][e]],qt={rlig:I("ligatures","requiredLigatures"),clig:I("ligatures","contextualLigatures"),dlig:I("ligatures","rareLigatures"),hlig:I("ligatures","historicalLigatures"),liga:I("ligatures","commonLigatures"),hist:I("ligatures","historicalLigatures"),smcp:I("lowerCase","lowerCaseSmallCaps"),pcap:I("lowerCase","lowerCasePetiteCaps"),frac:I("fractions","diagonalFractions"),dnom:I("fractions","diagonalFractions"),numr:I("fractions","diagonalFractions"),afrc:I("fractions","verticalFractions"),case:I("caseSensitiveLayout","caseSensitiveLayout"),ccmp:I("unicodeDecomposition","canonicalComposition"),cpct:I("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),valt:I("CJKVerticalRomanPlacement","CJKVerticalRomanCentered"),swsh:I("contextualAlternates","swashAlternates"),cswh:I("contextualAlternates","contextualSwashAlternates"),curs:I("cursiveConnection","cursive"),c2pc:I("upperCase","upperCasePetiteCaps"),c2sc:I("upperCase","upperCaseSmallCaps"),init:I("smartSwash","wordInitialSwashes"),fin2:I("smartSwash","wordFinalSwashes"),medi:I("smartSwash","nonFinalSwashes"),med2:I("smartSwash","nonFinalSwashes"),fin3:I("smartSwash","wordFinalSwashes"),fina:I("smartSwash","wordFinalSwashes"),pkna:I("kanaSpacing","proportionalKana"),half:I("textSpacing","halfWidthText"),halt:I("textSpacing","altHalfWidthText"),hkna:I("alternateKana","alternateHorizKana"),vkna:I("alternateKana","alternateVertKana"),ital:I("italicCJKRoman","CJKItalicRoman"),lnum:I("numberCase","upperCaseNumbers"),onum:I("numberCase","lowerCaseNumbers"),mgrk:I("mathematicalExtras","mathematicalGreek"),calt:I("contextualAlternates","contextualAlternates"),vrt2:I("verticalSubstitution","substituteVerticalForms"),vert:I("verticalSubstitution","substituteVerticalForms"),tnum:I("numberSpacing","monospacedNumbers"),pnum:I("numberSpacing","proportionalNumbers"),sups:I("verticalPosition","superiors"),subs:I("verticalPosition","inferiors"),ordn:I("verticalPosition","ordinals"),pwid:I("textSpacing","proportionalText"),hwid:I("textSpacing","halfWidthText"),qwid:I("textSpacing","quarterWidthText"),twid:I("textSpacing","thirdWidthText"),fwid:I("textSpacing","proportionalText"),palt:I("textSpacing","altProportionalText"),trad:I("characterShape","traditionalCharacters"),smpl:I("characterShape","simplifiedCharacters"),jp78:I("characterShape","JIS1978Characters"),jp83:I("characterShape","JIS1983Characters"),jp90:I("characterShape","JIS1990Characters"),jp04:I("characterShape","JIS2004Characters"),expt:I("characterShape","expertCharacters"),hojo:I("characterShape","hojoCharacters"),nlck:I("characterShape","NLCCharacters"),tnam:I("characterShape","traditionalNamesCharacters"),ruby:I("rubyKana","rubyKana"),titl:I("styleOptions","titlingCaps"),zero:I("typographicExtras","slashedZero"),ss01:I("stylisticAlternatives","stylisticAltOne"),ss02:I("stylisticAlternatives","stylisticAltTwo"),ss03:I("stylisticAlternatives","stylisticAltThree"),ss04:I("stylisticAlternatives","stylisticAltFour"),ss05:I("stylisticAlternatives","stylisticAltFive"),ss06:I("stylisticAlternatives","stylisticAltSix"),ss07:I("stylisticAlternatives","stylisticAltSeven"),ss08:I("stylisticAlternatives","stylisticAltEight"),ss09:I("stylisticAlternatives","stylisticAltNine"),ss10:I("stylisticAlternatives","stylisticAltTen"),ss11:I("stylisticAlternatives","stylisticAltEleven"),ss12:I("stylisticAlternatives","stylisticAltTwelve"),ss13:I("stylisticAlternatives","stylisticAltThirteen"),ss14:I("stylisticAlternatives","stylisticAltFourteen"),ss15:I("stylisticAlternatives","stylisticAltFifteen"),ss16:I("stylisticAlternatives","stylisticAltSixteen"),ss17:I("stylisticAlternatives","stylisticAltSeventeen"),ss18:I("stylisticAlternatives","stylisticAltEighteen"),ss19:I("stylisticAlternatives","stylisticAltNineteen"),ss20:I("stylisticAlternatives","stylisticAltTwenty")};for(let s=1;s<=99;s++)qt[`cv${`00${s}`.slice(-2)}`]=[P0.characterAlternatives.code,s];let E0={};for(let s in qt){let e=qt[s];E0[e[0]]==null&&(E0[e[0]]={}),E0[e[0]][e[1]]=s}function xc(s){let e={};for(let t in s){let r;(r=qt[t])&&(e[r[0]]==null&&(e[r[0]]={}),e[r[0]][r[1]]=s[t])}return e}function fs(s){let[e,t]=s;if(isNaN(e))var r=P0[e]&&P0[e].code;else var r=e;if(isNaN(t))var a=P0[e]&&P0[e][t];else var a=t;return[r,a]}function mc(s){let e={};if(Array.isArray(s))for(let t=0;t<s.length;t++){let r,a=fs(s[t]);(r=E0[a[0]]&&E0[a[0]][a[1]])&&(e[r]=!0)}else if(typeof s=="object")for(let t in s){let r=s[t];for(let a in r){let n,i=fs([t,a]);r[a]&&(n=E0[i[0]]&&E0[i[0]][i[1]])&&(e[n]=!0)}}return Object.keys(e)}class ot{lookup(e){switch(this.table.version){case 0:return this.table.values.getItem(e);case 2:case 4:{let a=0,n=this.table.binarySearchHeader.nUnits-1;for(;a<=n;){var t=a+n>>1,r=this.table.segments[t];if(r.firstGlyph===65535)return null;if(e<r.firstGlyph)n=t-1;else if(e>r.lastGlyph)a=t+1;else return this.table.version===2?r.value:r.values[e-r.firstGlyph]}return null}case 6:{let a=0,n=this.table.binarySearchHeader.nUnits-1;for(;a<=n;){var t=a+n>>1,r=this.table.segments[t];if(r.glyph===65535)return null;if(e<r.glyph)n=t-1;else if(e>r.glyph)a=t+1;else return r.value}return null}case 8:return this.table.values[e-this.table.firstGlyph];default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}}glyphsForValue(e){let t=[];switch(this.table.version){case 2:case 4:for(let r of this.table.segments)if(this.table.version===2&&r.value===e)t.push(...z0(r.firstGlyph,r.lastGlyph+1));else for(let a=0;a<r.values.length;a++)r.values[a]===e&&t.push(r.firstGlyph+a);break;case 6:for(let r of this.table.segments)r.value===e&&t.push(r.glyph);break;case 8:for(let r=0;r<this.table.values.length;r++)this.table.values[r]===e&&t.push(this.table.firstGlyph+r);break;default:throw new Error(`Unknown lookup table format: ${this.table.version}`)}return t}constructor(e){this.table=e}}Ie([Oe],ot.prototype,"glyphsForValue",null);const wc=0,ds=0,hs=1,ps=2,yc=16384;class Cc{process(e,t,r){let a=wc,n=t?e.length-1:0,i=t?-1:1;for(;i===1&&n<=e.length||i===-1&&n>=-1;){let o=null,u=hs,c=!0;n===e.length||n===-1?u=ds:(o=e[n],o.id===65535?u=ps:(u=this.lookupTable.lookup(o.id),u==null&&(u=hs)));let f=this.stateTable.stateArray.getItem(a)[u],x=this.stateTable.entryTable.getItem(f);u!==ds&&u!==ps&&(r(o,x,n),c=!(x.flags&yc)),a=x.newState,c&&(n+=i)}return e}traverse(e,t=0,r=new Set){if(r.has(t))return;r.add(t);let{nClasses:a,stateArray:n,entryTable:i}=this.stateTable,o=n.getItem(t);for(let u=4;u<a;u++){let c=o[u],d=i.getItem(c);for(let f of this.lookupTable.glyphsForValue(u))e.enter&&e.enter(f,d),d.newState!==0&&this.traverse(e,d.newState,r),e.exit&&e.exit(f,d)}}constructor(e){this.stateTable=e,this.lookupTable=new ot(e.classTable)}}const Sc=32768,Ac=8192,kc=15,bs=32768,Ic=32768,Oc=8192,Pc=2147483648,Ec=1073741824,Tc=1073741823,gs=4194304,Fc=2048,Dc=1024,Bc=992,Lc=31;class kn{process(e,t={}){for(let a of this.morx.chains){let n=a.defaultFlags;for(let i of a.features){let o;(o=t[i.featureType])&&(o[i.featureSetting]?(n&=i.disableFlags,n|=i.enableFlags):o[i.featureSetting]===!1&&(n|=~i.disableFlags,n&=~i.enableFlags))}for(let i of a.subtables)i.subFeatureFlags&n&&this.processSubtable(i,e)}let r=e.length-1;for(;r>=0;)e[r].id===65535&&e.splice(r,1),r--;return e}processSubtable(e,t){if(this.subtable=e,this.glyphs=t,this.subtable.type===4){this.processNoncontextualSubstitutions(this.subtable,this.glyphs);return}this.ligatureStack=[],this.markedGlyph=null,this.firstGlyph=null,this.lastGlyph=null,this.markedIndex=null;let r=this.getStateMachine(e),a=this.getProcessor(),n=!!(this.subtable.coverage&gs);return r.process(this.glyphs,n,a)}getStateMachine(e){return new Cc(e.table.stateTable)}getProcessor(){switch(this.subtable.type){case 0:return this.processIndicRearragement;case 1:return this.processContextualSubstitution;case 2:return this.processLigature;case 4:return this.processNoncontextualSubstitutions;case 5:return this.processGlyphInsertion;default:throw new Error(`Invalid morx subtable type: ${this.subtable.type}`)}}processIndicRearragement(e,t,r){t.flags&Sc&&(this.firstGlyph=r),t.flags&Ac&&(this.lastGlyph=r),Mc(this.glyphs,t.flags&kc,this.firstGlyph,this.lastGlyph)}processContextualSubstitution(e,t,r){let a=this.subtable.table.substitutionTable.items;if(t.markIndex!==65535){let i=a.getItem(t.markIndex),o=new ot(i);e=this.glyphs[this.markedGlyph];var n=o.lookup(e.id);n&&(this.glyphs[this.markedGlyph]=this.font.getGlyph(n,e.codePoints))}if(t.currentIndex!==65535){let i=a.getItem(t.currentIndex),o=new ot(i);e=this.glyphs[r];var n=o.lookup(e.id);n&&(this.glyphs[r]=this.font.getGlyph(n,e.codePoints))}t.flags&bs&&(this.markedGlyph=r)}processLigature(e,t,r){if(t.flags&Ic&&this.ligatureStack.push(r),t.flags&Oc){let a=this.subtable.table.ligatureActions,n=this.subtable.table.components,i=this.subtable.table.ligatureList,o=t.action,u=!1,c=0,d=[],f=[];for(;!u;){let x=this.ligatureStack.pop();d.unshift(...this.glyphs[x].codePoints);let C=a.getItem(o++);u=!!(C&Pc);let A=!!(C&Ec),D=(C&Tc)<<2>>2;D+=this.glyphs[x].id;let $=n.getItem(D);if(c+=$,u||A){let B=i.getItem(c);this.glyphs[x]=this.font.getGlyph(B,d),f.push(x),c=0,d=[]}else this.glyphs[x]=this.font.getGlyph(65535)}this.ligatureStack.push(...f)}}processNoncontextualSubstitutions(e,t,r){let a=new ot(e.table.lookupTable);for(r=0;r<t.length;r++){let n=t[r];if(n.id!==65535){let i=a.lookup(n.id);i&&(t[r]=this.font.getGlyph(i,n.codePoints))}}}_insertGlyphs(e,t,r,a){let n=[];for(;r--;){let i=this.subtable.table.insertionActions.getItem(t++);n.push(this.font.getGlyph(i))}a||e++,this.glyphs.splice(e,0,...n)}processGlyphInsertion(e,t,r){if(t.flags&bs&&(this.markedIndex=r),t.markedInsertIndex!==65535){let a=(t.flags&Lc)>>>5,n=!!(t.flags&Dc);this._insertGlyphs(this.markedIndex,t.markedInsertIndex,a,n)}if(t.currentInsertIndex!==65535){let a=(t.flags&Bc)>>>5,n=!!(t.flags&Fc);this._insertGlyphs(r,t.currentInsertIndex,a,n)}}getSupportedFeatures(){let e=[];for(let t of this.morx.chains)for(let r of t.features)e.push([r.featureType,r.featureSetting]);return e}generateInputs(e){return this.inputCache||this.generateInputCache(),this.inputCache[e]||[]}generateInputCache(){this.inputCache={};for(let e of this.morx.chains){let t=e.defaultFlags;for(let r of e.subtables)r.subFeatureFlags&t&&this.generateInputsForSubtable(r)}}generateInputsForSubtable(e){if(e.type!==2)return;if(!!(e.coverage&gs))throw new Error("Reverse subtable, not supported.");this.subtable=e,this.ligatureStack=[];let r=this.getStateMachine(e),a=this.getProcessor(),n=[],i=[];this.glyphs=[],r.traverse({enter:(o,u)=>{let c=this.glyphs;i.push({glyphs:c.slice(),ligatureStack:this.ligatureStack.slice()});let d=this.font.getGlyph(o);n.push(d),c.push(n[n.length-1]),a(c[c.length-1],u,c.length-1);let f=0,x=0;for(let C=0;C<c.length&&f<=1;C++)c[C].id!==65535&&(f++,x=c[C].id);if(f===1){let C=n.map(D=>D.id),A=this.inputCache[x];A?A.push(C):this.inputCache[x]=[C]}},exit:()=>{({glyphs:this.glyphs,ligatureStack:this.ligatureStack}=i.pop()),n.pop()}})}constructor(e){this.processIndicRearragement=this.processIndicRearragement.bind(this),this.processContextualSubstitution=this.processContextualSubstitution.bind(this),this.processLigature=this.processLigature.bind(this),this.processNoncontextualSubstitutions=this.processNoncontextualSubstitutions.bind(this),this.processGlyphInsertion=this.processGlyphInsertion.bind(this),this.font=e,this.morx=e.morx,this.inputCache=null}}Ie([Oe],kn.prototype,"getStateMachine",null);function Le(s,e,t,r=!1,a=!1){let n=s.splice(t[0]-(t[1]-1),t[1]);a&&n.reverse();let i=s.splice(e[0],e[1],...n);return r&&i.reverse(),s.splice(t[0]-(e[1]-1),0,...i),s}function Mc(s,e,t,r){switch(e){case 0:return s;case 1:return Le(s,[t,1],[r,0]);case 2:return Le(s,[t,0],[r,1]);case 3:return Le(s,[t,1],[r,1]);case 4:return Le(s,[t,2],[r,0]);case 5:return Le(s,[t,2],[r,0],!0,!1);case 6:return Le(s,[t,0],[r,2]);case 7:return Le(s,[t,0],[r,2],!1,!0);case 8:return Le(s,[t,1],[r,2]);case 9:return Le(s,[t,1],[r,2],!1,!0);case 10:return Le(s,[t,2],[r,1]);case 11:return Le(s,[t,2],[r,1],!0,!1);case 12:return Le(s,[t,2],[r,2]);case 13:return Le(s,[t,2],[r,2],!0,!1);case 14:return Le(s,[t,2],[r,2],!1,!0);case 15:return Le(s,[t,2],[r,2],!0,!0);default:throw new Error(`Unknown verb: ${e}`)}}class Rc{substitute(e){e.direction==="rtl"&&e.glyphs.reverse(),this.morxProcessor.process(e.glyphs,xc(e.features))}getAvailableFeatures(e,t){return mc(this.morxProcessor.getSupportedFeatures())}stringsForGlyph(e){let t=this.morxProcessor.generateInputs(e),r=new Set;for(let a of t)this._addStrings(a,0,r,"");return r}_addStrings(e,t,r,a){let n=this.font._cmapProcessor.codePointsForGlyph(e[t]);for(let i of n){let o=a+String.fromCodePoint(i);t<e.length-1?this._addStrings(e,t+1,r,o):r.add(o)}}constructor(e){this.font=e,this.morxProcessor=new kn(e),this.fallbackPosition=!1}}class Nc{_addFeatures(e,t){let r=this.stages.length-1,a=this.stages[r];for(let n of e)this.allFeatures[n]==null&&(a.push(n),this.allFeatures[n]=r,t&&(this.globalFeatures[n]=!0))}add(e,t=!0){if(this.stages.length===0&&this.stages.push([]),typeof e=="string"&&(e=[e]),Array.isArray(e))this._addFeatures(e,t);else if(typeof e=="object")this._addFeatures(e.global||[],!0),this._addFeatures(e.local||[],!1);else throw new Error("Unsupported argument to ShapingPlan#add")}addStage(e,t){typeof e=="function"?this.stages.push(e,[]):(this.stages.push([]),this.add(e,t))}setFeatureOverrides(e){if(Array.isArray(e))this.add(e);else if(typeof e=="object"){for(let t in e)if(e[t])this.add(t);else if(this.allFeatures[t]!=null){let r=this.stages[this.allFeatures[t]];r.splice(r.indexOf(t),1),delete this.allFeatures[t],delete this.globalFeatures[t]}}}assignGlobalFeatures(e){for(let t of e)for(let r in this.globalFeatures)t.features[r]=!0}process(e,t,r){for(let a of this.stages)typeof a=="function"?r||a(this.font,t,this):a.length>0&&e.applyFeatures(a,t,r)}constructor(e,t,r){this.font=e,this.script=t,this.direction=r,this.stages=[],this.globalFeatures={},this.allFeatures={}}}const Uc=["rvrn"],Vc=["ccmp","locl","rlig","mark","mkmk"],Gc=["frac","numr","dnom"],zc=["calt","clig","liga","rclt","curs","kern"],Wc={ltr:["ltra","ltrm"],rtl:["rtla","rtlm"]};class w0{static plan(e,t,r){this.planPreprocessing(e),this.planFeatures(e),this.planPostprocessing(e,r),e.assignGlobalFeatures(t),this.assignFeatures(e,t)}static planPreprocessing(e){e.add({global:[...Uc,...Wc[e.direction]],local:Gc})}static planFeatures(e){}static planPostprocessing(e,t){e.add([...Vc,...zc]),e.setFeatureOverrides(t)}static assignFeatures(e,t){for(let r=0;r<t.length;r++){let a=t[r];if(a.codePoints[0]===8260){let n=r,i=r+1;for(;n>0&&Ua(t[n-1].codePoints[0]);)t[n-1].features.numr=!0,t[n-1].features.frac=!0,n--;for(;i<t.length&&Ua(t[i].codePoints[0]);)t[i].features.dnom=!0,t[i].features.frac=!0,i++;a.features.frac=!0,r=i-1}}}}Ue(w0,"zeroMarkWidths","AFTER_GPOS");const Hc=new Jt(oa("ABABAAAAAACgMQAAAZUBav7t2CtPA0EUBeDZB00pin9AJZIEgyUEj0QhweDAgQOJxCBRBElQSBwSicLgkOAwnNKZ5GaY2c7uzj4o5yZfZrrbefbuIx2nSq3CGmzAWH/+K+UO7MIe7MMhHMMpnMMFXMIVXIt2t3CnP088iPqjqNN8e4Ij7Rle4LUH82rLm6i/92A+RERERERERERNmfz/89GDeRARERERzbN8ceps2Iwt9H0C9/AJ6yOlDkbTczcot5VSm8Pm1vcFWfb7+BKOLTuOd2UlTX4wGP85Eg953lWPFbnuN7PkjtLmalOWbNenkHOSa7T3KmR9MVTZ2zZkVj1kHa68MueVKH0R4zqQ44WEXLM8VjcWHP0PtKLfPzQnMtGn3W4QYf6qxFxceVI394r2xnV+1rih0fV1Vzf3fO1n3evL5J78ruvZ5ptX2Rwy92Tfb1wlEqut3U+sZ3HXOeJ7/zDrbyuP6+Zz0fqa6Nv3vhY7Yu1xWnGevmsvsUpTT/RYIe8waUH/rvHMWKFzLfN8L+rTfp645mfX7ftlnfDtYxN59w0=")),vs=["isol","fina","fin2","fin3","medi","med2","init"],qr={Non_Joining:0,Left_Joining:1,Right_Joining:2,Dual_Joining:3,Join_Causing:3,ALAPH:4,"DALATH RISH":5,Transparent:6},he="isol",h0="fina",Mr="fin2",qc="fin3",Pt="medi",Et="med2",Tt="init",se=null,$c=[[[se,se,0],[se,he,2],[se,he,1],[se,he,2],[se,he,1],[se,he,6]],[[se,se,0],[se,he,2],[se,he,1],[se,he,2],[se,Mr,5],[se,he,6]],[[se,se,0],[se,he,2],[Tt,h0,1],[Tt,h0,3],[Tt,h0,4],[Tt,h0,6]],[[se,se,0],[se,he,2],[Pt,h0,1],[Pt,h0,3],[Pt,h0,4],[Pt,h0,6]],[[se,se,0],[se,he,2],[Et,he,1],[Et,he,2],[Et,Mr,5],[Et,he,6]],[[se,se,0],[se,he,2],[he,he,1],[he,he,2],[he,Mr,5],[he,he,6]],[[se,se,0],[se,he,2],[se,he,1],[se,he,2],[se,qc,5],[se,he,6]]];class p0 extends w0{static planFeatures(e){e.add(["ccmp","locl"]);for(let t=0;t<vs.length;t++){let r=vs[t];e.addStage(r,!1)}e.addStage("mset")}static assignFeatures(e,t){super.assignFeatures(e,t);let r=-1,a=0,n=[];for(let o=0;o<t.length;o++){let u,c;var i=t[o];let d=Xc(i.codePoints[0]);if(d===qr.Transparent){n[o]=se;continue}[c,u,a]=$c[a][d],c!==se&&r!==-1&&(n[r]=c),n[o]=u,r=o}for(let o=0;o<t.length;o++){let u;var i=t[o];(u=n[o])&&(i.features[u]=!0)}}}function Xc(s){let e=Hc.get(s);if(e)return e-1;let t=_t(s);return t==="Mn"||t==="Me"||t==="Cf"?qr.Transparent:qr.Non_Joining}class Yc{reset(e={},t=0){this.options=e,this.flags=e.flags||{},this.markAttachmentType=e.markAttachmentType||0,this.index=t}get cur(){return this.glyphs[this.index]||null}shouldIgnore(e){return this.flags.ignoreMarks&&e.isMark||this.flags.ignoreBaseGlyphs&&e.isBase||this.flags.ignoreLigatures&&e.isLigature||this.markAttachmentType&&e.isMark&&e.markAttachmentType!==this.markAttachmentType}move(e){for(this.index+=e;0<=this.index&&this.index<this.glyphs.length&&this.shouldIgnore(this.glyphs[this.index]);)this.index+=e;return 0>this.index||this.index>=this.glyphs.length?null:this.glyphs[this.index]}next(){return this.move(1)}prev(){return this.move(-1)}peek(e=1){let t=this.index,r=this.increment(e);return this.index=t,r}peekIndex(e=1){let t=this.index;this.increment(e);let r=this.index;return this.index=t,r}increment(e=1){let t=e<0?-1:1;for(e=Math.abs(e);e--;)this.move(t);return this.glyphs[this.index]}constructor(e,t){this.glyphs=e,this.reset(t)}}const Kc=["DFLT","dflt","latn"];class $t{findScript(e){if(this.table.scriptList==null)return null;Array.isArray(e)||(e=[e]);for(let t of e)for(let r of this.table.scriptList)if(r.tag===t)return r;return null}selectScript(e,t,r){let a=!1,n;if(!this.script||e!==this.scriptTag){if(n=this.findScript(e),n||(n=this.findScript(Kc)),!n)return this.scriptTag;this.scriptTag=n.tag,this.script=n.script,this.language=null,this.languageTag=null,a=!0}if((!r||r!==this.direction)&&(this.direction=r||An(e)),t&&t.length<4&&(t+=" ".repeat(4-t.length)),!t||t!==this.languageTag){this.language=null;for(let i of this.script.langSysRecords)if(i.tag===t){this.language=i.langSys,this.languageTag=i.tag;break}this.language||(this.language=this.script.defaultLangSys,this.languageTag=null),a=!0}if(a&&(this.features={},this.language))for(let i of this.language.featureIndexes){let o=this.table.featureList[i],u=this.substituteFeatureForVariations(i);this.features[o.tag]=u||o.feature}return this.scriptTag}lookupsForFeatures(e=[],t){let r=[];for(let a of e){let n=this.features[a];if(n)for(let i of n.lookupListIndexes)t&&t.indexOf(i)!==-1||r.push({feature:a,index:i,lookup:this.table.lookupList.get(i)})}return r.sort((a,n)=>a.index-n.index),r}substituteFeatureForVariations(e){if(this.variationsIndex===-1)return null;let r=this.table.featureVariations.featureVariationRecords[this.variationsIndex].featureTableSubstitution.substitutions;for(let a of r)if(a.featureIndex===e)return a.alternateFeatureTable;return null}findVariationsIndex(e){let t=this.table.featureVariations;if(!t)return-1;let r=t.featureVariationRecords;for(let a=0;a<r.length;a++){let n=r[a].conditionSet.conditionTable;if(this.variationConditionsMatch(n,e))return a}return-1}variationConditionsMatch(e,t){return e.every(r=>{let a=r.axisIndex<t.length?t[r.axisIndex]:0;return r.filterRangeMinValue<=a&&a<=r.filterRangeMaxValue})}applyFeatures(e,t,r){let a=this.lookupsForFeatures(e);this.applyLookups(a,t,r)}applyLookups(e,t,r){this.glyphs=t,this.positions=r,this.glyphIterator=new Yc(t);for(let{feature:a,lookup:n}of e)for(this.currentFeature=a,this.glyphIterator.reset(n.flags);this.glyphIterator.index<t.length;){if(!(a in this.glyphIterator.cur.features)){this.glyphIterator.next();continue}for(let i of n.subTables)if(this.applyLookup(n.lookupType,i))break;this.glyphIterator.next()}}applyLookup(e,t){throw new Error("applyLookup must be implemented by subclasses")}applyLookupList(e){let t=this.glyphIterator.options,r=this.glyphIterator.index;for(let a of e){this.glyphIterator.reset(t,r),this.glyphIterator.increment(a.sequenceIndex);let n=this.table.lookupList.get(a.lookupListIndex);this.glyphIterator.reset(n.flags,this.glyphIterator.index);for(let i of n.subTables)if(this.applyLookup(n.lookupType,i))break}return this.glyphIterator.reset(t,r),!0}coverageIndex(e,t){switch(t==null&&(t=this.glyphIterator.cur.id),e.version){case 1:return e.glyphs.indexOf(t);case 2:for(let r of e.rangeRecords)if(r.start<=t&&t<=r.end)return r.startCoverageIndex+t-r.start;break}return-1}match(e,t,r,a){let n=this.glyphIterator.index,i=this.glyphIterator.increment(e),o=0;for(;o<t.length&&i&&r(t[o],i);)a&&a.push(this.glyphIterator.index),o++,i=this.glyphIterator.next();return this.glyphIterator.index=n,o<t.length?!1:a||!0}sequenceMatches(e,t){return this.match(e,t,(r,a)=>r===a.id)}sequenceMatchIndices(e,t){return this.match(e,t,(r,a)=>this.currentFeature in a.features?r===a.id:!1,[])}coverageSequenceMatches(e,t){return this.match(e,t,(r,a)=>this.coverageIndex(r,a.id)>=0)}getClassID(e,t){switch(t.version){case 1:let r=e-t.startGlyph;if(r>=0&&r<t.classValueArray.length)return t.classValueArray[r];break;case 2:for(let a of t.classRangeRecord)if(a.start<=e&&e<=a.end)return a.class;break}return 0}classSequenceMatches(e,t,r){return this.match(e,t,(a,n)=>a===this.getClassID(n.id,r))}applyContext(e){let t,r;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),t===-1)return!1;r=e.ruleSets[t];for(let a of r)if(this.sequenceMatches(1,a.input))return this.applyLookupList(a.lookupRecords);break;case 2:if(this.coverageIndex(e.coverage)===-1||(t=this.getClassID(this.glyphIterator.cur.id,e.classDef),t===-1))return!1;r=e.classSet[t];for(let a of r)if(this.classSequenceMatches(1,a.classes,e.classDef))return this.applyLookupList(a.lookupRecords);break;case 3:if(this.coverageSequenceMatches(0,e.coverages))return this.applyLookupList(e.lookupRecords);break}return!1}applyChainingContext(e){let t;switch(e.version){case 1:if(t=this.coverageIndex(e.coverage),t===-1)return!1;let r=e.chainRuleSets[t];for(let n of r)if(this.sequenceMatches(-n.backtrack.length,n.backtrack)&&this.sequenceMatches(1,n.input)&&this.sequenceMatches(1+n.input.length,n.lookahead))return this.applyLookupList(n.lookupRecords);break;case 2:if(this.coverageIndex(e.coverage)===-1)return!1;t=this.getClassID(this.glyphIterator.cur.id,e.inputClassDef);let a=e.chainClassSet[t];if(!a)return!1;for(let n of a)if(this.classSequenceMatches(-n.backtrack.length,n.backtrack,e.backtrackClassDef)&&this.classSequenceMatches(1,n.input,e.inputClassDef)&&this.classSequenceMatches(1+n.input.length,n.lookahead,e.lookaheadClassDef))return this.applyLookupList(n.lookupRecords);break;case 3:if(this.coverageSequenceMatches(-e.backtrackGlyphCount,e.backtrackCoverage)&&this.coverageSequenceMatches(0,e.inputCoverage)&&this.coverageSequenceMatches(e.inputGlyphCount,e.lookaheadCoverage))return this.applyLookupList(e.lookupRecords);break}return!1}constructor(e,t){this.font=e,this.table=t,this.script=null,this.scriptTag=null,this.language=null,this.languageTag=null,this.features={},this.lookups={},this.variationsIndex=e._variationProcessor?this.findVariationsIndex(e._variationProcessor.normalizedCoords):-1,this.selectScript(),this.glyphs=[],this.positions=[],this.ligatureID=1,this.currentFeature=null}}class Ye{get id(){return this._id}set id(e){this._id=e,this.substituted=!0;let t=this._font.GDEF;if(t&&t.glyphClassDef){let r=$t.prototype.getClassID(e,t.glyphClassDef);this.isBase=r===1,this.isLigature=r===2,this.isMark=r===3,this.markAttachmentType=t.markAttachClassDef?$t.prototype.getClassID(e,t.markAttachClassDef):0}else this.isMark=this.codePoints.length>0&&this.codePoints.every(Ks),this.isBase=!this.isMark,this.isLigature=this.codePoints.length>1,this.markAttachmentType=0}copy(){return new Ye(this._font,this.id,this.codePoints,this.features)}constructor(e,t,r=[],a){if(this._font=e,this.codePoints=r,this.id=t,this.features={},Array.isArray(a))for(let n=0;n<a.length;n++){let i=a[n];this.features[i]=!0}else typeof a=="object"&&Object.assign(this.features,a);this.ligatureID=null,this.ligatureComponent=null,this.isLigated=!1,this.cursiveAttachment=null,this.markAttachment=null,this.shaperInfo=null,this.substituted=!1,this.isMultiplied=!1}}class In extends w0{static planFeatures(e){e.add(["ljmo","vjmo","tjmo"],!1)}static assignFeatures(e,t){let r=0,a=0;for(;a<t.length;){let n,o=t[a].codePoints[0],u=jt(o);switch([n,r]=hf[r][u],n){case l0:e.font.hasGlyphForCodePoint(o)||(a=En(t,a,e.font));break;case $r:a=pf(t,a,e.font);break;case Xr:gf(t,a,e.font);break;case Yr:a=vf(t,a,e.font);break}a++}}}Ue(In,"zeroMarkWidths","NONE");const X0=44032,On=55204,jc=On-X0+1,sr=4352,nr=4449,F0=4519,Zc=19,Xt=21,bt=28,Jc=sr+Zc-1,Qc=nr+Xt-1,_c=F0+bt-1,xs=9676,ef=s=>4352<=s&&s<=4447||43360<=s&&s<=43388,tf=s=>4448<=s&&s<=4519||55216<=s&&s<=55238,rf=s=>4520<=s&&s<=4607||55243<=s&&s<=55291,af=s=>12334<=s&&s<=12335,sf=s=>X0<=s&&s<=On,nf=s=>s-X0<jc&&(s-X0)%bt===0,lf=s=>sr<=s&&s<=Jc,of=s=>nr<=s&&s<=Qc,uf=s=>1<=s&&s<=_c,cf=0,ff=1,Yt=2,ca=3,Kt=4,Pn=5,df=6;function jt(s){return ef(s)?ff:tf(s)?Yt:rf(s)?ca:nf(s)?Kt:sf(s)?Pn:af(s)?df:cf}const Ne=0,l0=1,$r=2,Xr=4,Yr=5,hf=[[[Ne,0],[Ne,1],[Ne,0],[Ne,0],[l0,2],[l0,3],[Yr,0]],[[Ne,0],[Ne,1],[$r,2],[Ne,0],[l0,2],[l0,3],[Yr,0]],[[Ne,0],[Ne,1],[Ne,0],[$r,3],[l0,2],[l0,3],[Xr,0]],[[Ne,0],[Ne,1],[Ne,0],[Ne,0],[l0,2],[l0,3],[Xr,0]]];function ut(s,e,t){return new Ye(s,s.glyphForCodePoint(e).id,[e],t)}function En(s,e,t){let r=s[e],n=r.codePoints[0]-X0,i=F0+n%bt;n=n/bt|0;let o=sr+n/Xt|0,u=nr+n%Xt;if(!t.hasGlyphForCodePoint(o)||!t.hasGlyphForCodePoint(u)||i!==F0&&!t.hasGlyphForCodePoint(i))return e;let c=ut(t,o,r.features);c.features.ljmo=!0;let d=ut(t,u,r.features);d.features.vjmo=!0;let f=[c,d];if(i>F0){let x=ut(t,i,r.features);x.features.tjmo=!0,f.push(x)}return s.splice(e,1,...f),e+f.length-1}function pf(s,e,t){let r=s[e],a=s[e].codePoints[0],n=jt(a),i=s[e-1].codePoints[0],o=jt(i),u,c,d,f;if(o===Kt&&n===ca)u=i,f=r;else{n===Yt?(c=s[e-1],d=r):(c=s[e-2],d=s[e-1],f=r);let C=c.codePoints[0],A=d.codePoints[0];lf(C)&&of(A)&&(u=X0+((C-sr)*Xt+(A-nr))*bt)}let x=f&&f.codePoints[0]||F0;if(u!=null&&(x===F0||uf(x))){let C=u+(x-F0);if(t.hasGlyphForCodePoint(C)){let A=o===Yt?3:2;return s.splice(e-A+1,A,ut(t,C,r.features)),e-A+1}}return c&&(c.features.ljmo=!0),d&&(d.features.vjmo=!0),f&&(f.features.tjmo=!0),o===Kt?(En(s,e-1,t),e+1):e}function bf(s){switch(jt(s)){case Kt:case Pn:return 1;case Yt:return 2;case ca:return 3}}function gf(s,e,t){let r=s[e],a=s[e].codePoints[0];if(t.glyphForCodePoint(a).advanceWidth===0)return;let n=s[e-1].codePoints[0],i=bf(n);return s.splice(e,1),s.splice(e-i,0,r)}function vf(s,e,t){let r=s[e],a=s[e].codePoints[0];if(t.hasGlyphForCodePoint(xs)){let n=ut(t,xs,r.features),i=t.glyphForCodePoint(a).advanceWidth===0?e:e+1;s.splice(i,0,n),e++}return e}var Tn={};Tn=JSON.parse('{"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,14,15,16,17],[0,0,0,18,19,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,28,29,30,31,32,33,0,34,0,0,35,36,0,0,37,0],[0,0,0,38,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,39,0,0,0,40,41,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,12,43,0,0,0,0],[0,0,0,0,43,44,44,8,9,0,0,0,0,0,43,0,0,0,0],[0,0,0,45,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,50,0,0,51,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,52,0,0,0,0,0,0,0,0],[0,0,0,53,54,55,56,57,58,0,59,0,0,60,61,0,0,62,0],[0,0,0,4,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,63,64,0,0,40,41,0,9,0,10,0,0,0,42,0,63,0,0],[0,2,3,4,5,6,7,8,9,0,10,11,11,12,13,0,2,16,0],[0,0,0,18,65,20,21,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,0,0],[0,0,0,69,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,73,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,75,0,0,0,76,77,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,25,79,0,0,0,0],[0,0,0,18,19,20,74,22,23,0,24,0,0,25,26,0,0,27,0],[0,0,0,81,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,86,0,0,87,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,88,0,0,0,0,0,0,0,0],[0,0,0,18,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,89,90,0,0,76,77,0,23,0,24,0,0,0,78,0,89,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,0,0],[0,0,0,94,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,96,0,0,0,97,98,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,35,100,0,0,0,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,102,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,107,0,0,108,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,109,0,0,0,0,0,0,0,0],[0,0,0,28,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,110,111,0,0,97,98,0,33,0,34,0,0,0,99,0,110,0,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,0,0],[0,0,0,0,5,7,7,8,9,0,10,0,0,0,13,0,0,16,0],[0,0,0,115,116,117,118,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,39,0,122,0,123,123,8,9,0,10,0,0,0,42,0,39,0,0],[0,124,64,0,0,0,0,0,0,0,0,0,0,0,0,0,124,0,0],[0,39,0,0,0,121,125,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,126,126,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,46,47,48,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,47,47,49,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,128,127,127,49,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,129,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,50,0,0,0,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,134,0,0,0,0,0,0,0,0],[0,0,0,135,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,136,0,0,0,137,138,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,60,140,0,0,0,0],[0,0,0,0,140,141,141,57,58,0,0,0,0,0,140,0,0,0,0],[0,0,0,142,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,147,0,0,148,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,149,0,0,0,0,0,0,0,0],[0,0,0,53,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,150,151,0,0,137,138,0,58,0,59,0,0,0,139,0,150,0,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,0,0],[0,0,0,155,116,156,157,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,0,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,75,3,4,5,159,160,8,161,0,162,0,11,12,163,0,75,16,0],[0,0,0,0,0,40,164,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,0,165,0,0,0,0],[0,124,64,0,0,40,164,0,9,0,10,0,0,0,42,0,124,0,0],[0,0,0,0,0,70,70,0,71,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,71,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,167,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,168,0,0,0,0,0,0,0,0],[0,0,0,0,19,74,74,22,23,0,24,0,0,0,26,0,0,27,0],[0,0,0,0,79,80,80,22,23,0,0,0,0,0,79,0,0,0,0],[0,0,0,169,170,171,172,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,75,0,176,0,177,177,22,23,0,24,0,0,0,78,0,75,0,0],[0,178,90,0,0,0,0,0,0,0,0,0,0,0,0,0,178,0,0],[0,75,0,0,0,175,179,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,180,180,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,82,83,84,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,83,83,85,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,182,181,181,85,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,183,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,86,0,0,0,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,188,0,0,0,0,0,0,0,0],[0,0,0,189,170,190,191,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,0,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,76,193,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,0,194,0,0,0,0],[0,178,90,0,0,76,193,0,23,0,24,0,0,0,78,0,178,0,0],[0,0,0,0,29,95,31,32,33,0,34,0,0,0,36,0,0,37,0],[0,0,0,0,100,101,101,32,33,0,0,0,0,0,100,0,0,0,0],[0,0,0,195,196,197,198,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,96,0,202,0,203,203,32,33,0,34,0,0,0,99,0,96,0,0],[0,204,111,0,0,0,0,0,0,0,0,0,0,0,0,0,204,0,0],[0,96,0,0,0,201,205,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,206,206,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,103,104,105,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,104,104,106,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,208,207,207,106,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,209,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,107,0,0,0,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,214,0,0,0,0,0,0,0,0],[0,0,0,215,196,216,217,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,0,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,97,219,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,0,220,0,0,0,0],[0,204,111,0,0,97,219,0,33,0,34,0,0,0,99,0,204,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,223,0,0,0,40,224,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,119,225,0,0,0,0],[0,0,0,115,116,117,222,8,9,0,10,0,0,119,120,0,0,16,0],[0,0,0,115,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,226,64,0,0,40,224,0,9,0,10,0,0,0,42,0,226,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,39,0,0,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,44,44,8,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,227,0,228,229,0,9,0,10,0,0,230,0,0,0,0,0],[0,39,0,122,0,121,121,0,9,0,10,0,0,0,42,0,39,0,0],[0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,231,231,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,232,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,130,131,132,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,131,131,133,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,234,233,233,133,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,235,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,54,56,56,57,58,0,59,0,0,0,61,0,0,62,0],[0,0,0,240,241,242,243,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,136,0,247,0,248,248,57,58,0,59,0,0,0,139,0,136,0,0],[0,249,151,0,0,0,0,0,0,0,0,0,0,0,0,0,249,0,0],[0,136,0,0,0,246,250,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,251,251,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,143,144,145,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,144,144,146,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,253,252,252,146,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,254,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,147,0,0,0,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,259,0,0,0,0,0,0,0,0],[0,0,0,260,241,261,262,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,0,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,137,264,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,0,265,0,0,0,0],[0,249,151,0,0,137,264,0,58,0,59,0,0,0,139,0,249,0,0],[0,0,0,221,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,158,225,0,0,0,0],[0,0,0,155,116,156,222,8,9,0,10,0,0,158,120,0,0,16,0],[0,0,0,155,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,43,266,266,8,161,0,24,0,0,12,267,0,0,0,0],[0,75,0,176,43,268,268,269,161,0,24,0,0,0,267,0,75,0,0],[0,0,0,0,0,270,0,0,271,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,272,0,0,0,0,0,0,0,0],[0,273,274,0,0,40,41,0,9,0,10,0,0,0,42,0,273,0,0],[0,0,0,40,0,123,123,8,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,121,275,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,166,0,0,0,0,72,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,276,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,279,0,0,0,76,280,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,173,281,0,0,0,0],[0,0,0,169,170,171,278,22,23,0,24,0,0,173,174,0,0,27,0],[0,0,0,169,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,282,90,0,0,76,280,0,23,0,24,0,0,0,78,0,282,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,75,0,0,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,80,80,22,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,283,0,284,285,0,23,0,24,0,0,286,0,0,0,0,0],[0,75,0,176,0,175,175,0,23,0,24,0,0,0,78,0,75,0,0],[0,0,0,0,0,0,0,22,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,287,287,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,288,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,184,185,186,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,185,185,187,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,290,289,289,187,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,291,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,277,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,192,281,0,0,0,0],[0,0,0,189,170,190,278,22,23,0,24,0,0,192,174,0,0,27,0],[0,0,0,189,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,76,0,177,177,22,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,175,296,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,299,0,0,0,97,300,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,199,301,0,0,0,0],[0,0,0,195,196,197,298,32,33,0,34,0,0,199,200,0,0,37,0],[0,0,0,195,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,302,111,0,0,97,300,0,33,0,34,0,0,0,99,0,302,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,96,0,0,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,101,101,32,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,303,0,304,305,0,33,0,34,0,0,306,0,0,0,0,0],[0,96,0,202,0,201,201,0,33,0,34,0,0,0,99,0,96,0,0],[0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,307,307,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,308,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,210,211,212,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,211,211,213,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,310,309,309,213,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,311,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,297,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,218,301,0,0,0,0],[0,0,0,215,196,216,298,32,33,0,34,0,0,218,200,0,0,37,0],[0,0,0,215,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,97,0,203,203,32,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,201,316,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,116,222,222,8,9,0,10,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,9,0,0,0,0,0,225,0,0,0,0],[0,0,0,317,318,319,320,8,9,0,10,0,0,321,322,0,0,16,0],[0,223,0,323,0,123,123,8,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,0,0,121,324,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,325,318,326,327,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,64,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,9,0,0,0,0,230,0,0,0,0,0],[0,0,0,227,0,228,121,0,9,0,10,0,0,230,0,0,0,0,0],[0,0,0,227,0,121,121,0,9,0,10,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,49,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,46,0,0],[0,0,0,0,0,329,329,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,330,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,236,237,238,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,237,237,239,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,332,331,331,239,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,333,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,337,0,0,0,137,338,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,244,339,0,0,0,0],[0,0,0,240,241,242,336,57,58,0,59,0,0,244,245,0,0,62,0],[0,0,0,240,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,340,151,0,0,137,338,0,58,0,59,0,0,0,139,0,340,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,136,0,0,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,141,141,57,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,341,0,342,343,0,58,0,59,0,0,344,0,0,0,0,0],[0,136,0,247,0,246,246,0,58,0,59,0,0,0,139,0,136,0,0],[0,0,0,0,0,0,0,57,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,345,345,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,346,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,255,256,257,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,256,256,258,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,348,347,347,258,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,349,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,335,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,263,339,0,0,0,0],[0,0,0,260,241,261,336,57,58,0,59,0,0,263,245,0,0,62,0],[0,0,0,260,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,137,0,248,248,57,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,246,354,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,126,126,8,23,0,0,0,0,0,0,0,0,0,0],[0,355,90,0,0,121,125,0,9,0,10,0,0,0,42,0,355,0,0],[0,0,0,0,0,356,356,269,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,357,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,270,0,0,0,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,363,0,0,0,0,0,0,0,0],[0,0,0,364,116,365,366,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,40,0,121,121,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,170,278,278,22,23,0,24,0,0,0,174,0,0,27,0],[0,0,0,0,281,80,80,22,23,0,0,0,0,0,281,0,0,0,0],[0,0,0,369,370,371,372,22,23,0,24,0,0,373,374,0,0,27,0],[0,279,0,375,0,177,177,22,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,0,0,175,376,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,377,370,378,379,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,90,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,23,0,0,0,0,286,0,0,0,0,0],[0,0,0,283,0,284,175,0,23,0,24,0,0,286,0,0,0,0,0],[0,0,0,283,0,175,175,0,23,0,24,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,85,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,82,0,0],[0,0,0,0,0,381,381,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,382,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,292,293,294,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,293,293,295,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,0,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,384,383,383,295,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,385,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,76,0,175,175,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,196,298,298,32,33,0,34,0,0,0,200,0,0,37,0],[0,0,0,0,301,101,101,32,33,0,0,0,0,0,301,0,0,0,0],[0,0,0,387,388,389,390,32,33,0,34,0,0,391,392,0,0,37,0],[0,299,0,393,0,203,203,32,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,0,0,201,394,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,395,388,396,397,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,111,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,33,0,0,0,0,306,0,0,0,0,0],[0,0,0,303,0,304,201,0,33,0,34,0,0,306,0,0,0,0,0],[0,0,0,303,0,201,201,0,33,0,34,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,106,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,103,0,0],[0,0,0,0,0,399,399,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,400,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,312,313,314,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,313,313,315,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,0,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,402,401,401,315,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,403,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,97,0,201,201,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,407,0,0,0,40,408,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,321,409,0,0,0,0],[0,0,0,317,318,319,406,8,9,0,10,0,0,321,322,0,0,16,0],[0,0,0,317,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,410,64,0,0,40,408,0,9,0,10,0,0,0,42,0,410,0,0],[0,223,0,0,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,223,0,323,0,121,121,0,9,0,10,0,0,0,42,0,223,0,0],[0,0,0,405,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,328,409,0,0,0,0],[0,0,0,325,318,326,406,8,9,0,10,0,0,328,322,0,0,16,0],[0,0,0,325,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,0,0,0,133,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,130,0,0],[0,0,0,0,0,411,411,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,412,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,40,121,334,0,9,0,10,0,0,0,42,0,0,0,0],[0,0,0,0,413,0,0,0,9,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,241,336,336,57,58,0,59,0,0,0,245,0,0,62,0],[0,0,0,0,339,141,141,57,58,0,0,0,0,0,339,0,0,0,0],[0,0,0,414,415,416,417,57,58,0,59,0,0,418,419,0,0,62,0],[0,337,0,420,0,248,248,57,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,0,0,246,421,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,422,415,423,424,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,151,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,58,0,0,0,0,344,0,0,0,0,0],[0,0,0,341,0,342,246,0,58,0,59,0,0,344,0,0,0,0,0],[0,0,0,341,0,246,246,0,58,0,59,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,146,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,143,0,0],[0,0,0,0,0,426,426,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,427,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,350,351,352,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,351,351,353,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,0,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,429,428,428,353,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,430,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,137,0,246,246,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,432,116,433,434,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,0,0,180,180,269,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,358,359,360,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,359,359,361,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,437,436,436,361,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,438,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,443,274,0,0,0,0,0,0,0,0,0,0,0,0,0,443,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,367,225,0,0,0,0],[0,0,0,364,116,365,445,8,161,0,162,0,0,367,120,0,0,16,0],[0,0,0,364,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,448,0,0,0,76,449,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,373,450,0,0,0,0],[0,0,0,369,370,371,447,22,23,0,24,0,0,373,374,0,0,27,0],[0,0,0,369,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,451,90,0,0,76,449,0,23,0,24,0,0,0,78,0,451,0,0],[0,279,0,0,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,279,0,375,0,175,175,0,23,0,24,0,0,0,78,0,279,0,0],[0,0,0,446,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,380,450,0,0,0,0],[0,0,0,377,370,378,447,22,23,0,24,0,0,380,374,0,0,27,0],[0,0,0,377,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,0,0,0,187,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,184,0,0],[0,0,0,0,0,452,452,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,453,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,76,175,386,0,23,0,24,0,0,0,78,0,0,0,0],[0,0,0,0,454,0,0,0,23,0,0,0,0,0,0,0,0,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,457,0,0,0,97,458,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,391,459,0,0,0,0],[0,0,0,387,388,389,456,32,33,0,34,0,0,391,392,0,0,37,0],[0,0,0,387,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,460,111,0,0,97,458,0,33,0,34,0,0,0,99,0,460,0,0],[0,299,0,0,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,299,0,393,0,201,201,0,33,0,34,0,0,0,99,0,299,0,0],[0,0,0,455,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,398,459,0,0,0,0],[0,0,0,395,388,396,456,32,33,0,34,0,0,398,392,0,0,37,0],[0,0,0,395,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,0,0,0,213,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,210,0,0],[0,0,0,0,0,461,461,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,462,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,97,201,404,0,33,0,34,0,0,0,99,0,0,0,0],[0,0,0,0,463,0,0,0,33,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,318,406,406,8,9,0,10,0,0,0,322,0,0,16,0],[0,0,0,0,409,44,44,8,9,0,0,0,0,0,409,0,0,0,0],[0,0,0,464,465,466,467,8,9,0,10,0,0,468,469,0,0,16,0],[0,407,0,470,0,123,123,8,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,0,0,121,471,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,472,465,473,474,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,0,0,0,0,239,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,236,0,0],[0,0,0,0,0,0,476,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,479,0,0,0,137,480,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,418,481,0,0,0,0],[0,0,0,414,415,416,478,57,58,0,59,0,0,418,419,0,0,62,0],[0,0,0,414,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,482,151,0,0,137,480,0,58,0,59,0,0,0,139,0,482,0,0],[0,337,0,0,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,337,0,420,0,246,246,0,58,0,59,0,0,0,139,0,337,0,0],[0,0,0,477,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,425,481,0,0,0,0],[0,0,0,422,415,423,478,57,58,0,59,0,0,425,419,0,0,62,0],[0,0,0,422,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,0,0,0,258,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,255,0,0],[0,0,0,0,0,483,483,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,484,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,137,246,431,0,58,0,59,0,0,0,139,0,0,0,0],[0,0,0,0,485,0,0,0,58,0,0,0,0,0,0,0,0,0,0],[0,0,0,444,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,435,225,0,0,0,0],[0,0,0,432,116,433,445,8,161,0,162,0,0,435,120,0,0,16,0],[0,0,0,432,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,0,486,486,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,487,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,439,440,441,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,440,440,442,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,489,488,488,442,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,490,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,495,0,496,497,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,0,116,445,445,8,161,0,162,0,0,0,120,0,0,16,0],[0,0,0,0,225,44,44,8,161,0,0,0,0,0,225,0,0,0,0],[0,0,0,0,370,447,447,22,23,0,24,0,0,0,374,0,0,27,0],[0,0,0,0,450,80,80,22,23,0,0,0,0,0,450,0,0,0,0],[0,0,0,499,500,501,502,22,23,0,24,0,0,503,504,0,0,27,0],[0,448,0,505,0,177,177,22,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,0,0,175,506,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,507,500,508,509,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,0,0,0,0,295,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,292,0,0],[0,0,0,0,0,0,511,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,388,456,456,32,33,0,34,0,0,0,392,0,0,37,0],[0,0,0,0,459,101,101,32,33,0,0,0,0,0,459,0,0,0,0],[0,0,0,512,513,514,515,32,33,0,34,0,0,516,517,0,0,37,0],[0,457,0,518,0,203,203,32,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,0,0,201,519,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,520,513,521,522,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,0,0,0,0,315,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,312,0,0],[0,0,0,0,0,0,524,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,527,0,0,0,40,528,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,468,529,0,0,0,0],[0,0,0,464,465,466,526,8,9,0,10,0,0,468,469,0,0,16,0],[0,0,0,464,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,530,64,0,0,40,528,0,9,0,10,0,0,0,42,0,530,0,0],[0,407,0,0,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,407,0,470,0,121,121,0,9,0,10,0,0,0,42,0,407,0,0],[0,0,0,525,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,475,529,0,0,0,0],[0,0,0,472,465,473,526,8,9,0,10,0,0,475,469,0,0,16,0],[0,0,0,472,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,0,0],[0,0,0,0,415,478,478,57,58,0,59,0,0,0,419,0,0,62,0],[0,0,0,0,481,141,141,57,58,0,0,0,0,0,481,0,0,0,0],[0,0,0,531,532,533,534,57,58,0,59,0,0,535,536,0,0,62,0],[0,479,0,537,0,248,248,57,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,0,0,246,538,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,539,532,540,541,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,0,0,0,0,353,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,350,0,0],[0,0,0,0,0,0,543,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,361,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,358,0,0],[0,0,0,0,0,544,544,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,545,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,491,492,493,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,492,492,494,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,547,546,546,494,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,548,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,274,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,161,0,0,0,0,498,0,0,0,0,0],[0,0,0,495,0,496,368,0,161,0,162,0,0,498,0,0,0,0,0],[0,0,0,495,0,368,368,0,161,0,162,0,0,0,0,0,0,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,553,0,0,0,76,554,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,503,555,0,0,0,0],[0,0,0,499,500,501,552,22,23,0,24,0,0,503,504,0,0,27,0],[0,0,0,499,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,556,90,0,0,76,554,0,23,0,24,0,0,0,78,0,556,0,0],[0,448,0,0,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,448,0,505,0,175,175,0,23,0,24,0,0,0,78,0,448,0,0],[0,0,0,551,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,510,555,0,0,0,0],[0,0,0,507,500,508,552,22,23,0,24,0,0,510,504,0,0,27,0],[0,0,0,507,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,76,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,559,0,0,0,97,560,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,516,561,0,0,0,0],[0,0,0,512,513,514,558,32,33,0,34,0,0,516,517,0,0,37,0],[0,0,0,512,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,562,111,0,0,97,560,0,33,0,34,0,0,0,99,0,562,0,0],[0,457,0,0,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,457,0,518,0,201,201,0,33,0,34,0,0,0,99,0,457,0,0],[0,0,0,557,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,523,561,0,0,0,0],[0,0,0,520,513,521,558,32,33,0,34,0,0,523,517,0,0,37,0],[0,0,0,520,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,97,0,0],[0,0,0,0,465,526,526,8,9,0,10,0,0,0,469,0,0,16,0],[0,0,0,0,529,44,44,8,9,0,0,0,0,0,529,0,0,0,0],[0,0,0,563,66,564,565,8,9,0,10,0,0,566,68,0,0,16,0],[0,527,0,567,0,123,123,8,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,0,0,121,568,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,569,66,570,571,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,575,0,0,0,137,576,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,535,577,0,0,0,0],[0,0,0,531,532,533,574,57,58,0,59,0,0,535,536,0,0,62,0],[0,0,0,531,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,578,151,0,0,137,576,0,58,0,59,0,0,0,139,0,578,0,0],[0,479,0,0,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,479,0,537,0,246,246,0,58,0,59,0,0,0,139,0,479,0,0],[0,0,0,573,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,542,577,0,0,0,0],[0,0,0,539,532,540,574,57,58,0,59,0,0,542,536,0,0,62,0],[0,0,0,539,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,137,0,0],[0,0,0,0,0,0,0,442,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,439,0,0],[0,0,0,0,0,579,579,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,580,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,549,368,550,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,0,368,368,0,161,0,162,0,0,0,362,0,0,0,0],[0,0,0,0,581,0,0,0,161,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,500,552,552,22,23,0,24,0,0,0,504,0,0,27,0],[0,0,0,0,555,80,80,22,23,0,0,0,0,0,555,0,0,0,0],[0,0,0,582,91,583,584,22,23,0,24,0,0,585,93,0,0,27,0],[0,553,0,586,0,177,177,22,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,0,0,175,587,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,588,91,589,590,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,0,513,558,558,32,33,0,34,0,0,0,517,0,0,37,0],[0,0,0,0,561,101,101,32,33,0,0,0,0,0,561,0,0,0,0],[0,0,0,592,112,593,594,32,33,0,34,0,0,595,114,0,0,37,0],[0,559,0,596,0,203,203,32,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,0,0,201,597,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,598,112,599,600,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,566,165,0,0,0,0],[0,0,0,563,66,564,67,8,9,0,10,0,0,566,68,0,0,16,0],[0,0,0,563,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,527,0,0,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,527,0,567,0,121,121,0,9,0,10,0,0,0,42,0,527,0,0],[0,0,0,602,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,165,44,44,8,9,0,0,0,0,572,165,0,0,0,0],[0,0,0,569,66,570,67,8,9,0,10,0,0,572,68,0,0,16,0],[0,0,0,569,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,0,532,574,574,57,58,0,59,0,0,0,536,0,0,62,0],[0,0,0,0,577,141,141,57,58,0,0,0,0,0,577,0,0,0,0],[0,0,0,603,152,604,605,57,58,0,59,0,0,606,154,0,0,62,0],[0,575,0,607,0,248,248,57,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,0,0,246,608,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,609,152,610,611,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,0,0,0,0,494,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,491,0,0],[0,0,0,0,0,0,613,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,585,194,0,0,0,0],[0,0,0,582,91,583,92,22,23,0,24,0,0,585,93,0,0,27,0],[0,0,0,582,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,553,0,0,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,553,0,586,0,175,175,0,23,0,24,0,0,0,78,0,553,0,0],[0,0,0,614,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,194,80,80,22,23,0,0,0,0,591,194,0,0,0,0],[0,0,0,588,91,589,92,22,23,0,24,0,0,591,93,0,0,27,0],[0,0,0,588,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,595,220,0,0,0,0],[0,0,0,592,112,593,113,32,33,0,34,0,0,595,114,0,0,37,0],[0,0,0,592,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,559,0,0,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,559,0,596,0,201,201,0,33,0,34,0,0,0,99,0,559,0,0],[0,0,0,615,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,220,101,101,32,33,0,0,0,0,601,220,0,0,0,0],[0,0,0,598,112,599,113,32,33,0,34,0,0,601,114,0,0,37,0],[0,0,0,598,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,66,67,67,8,9,0,10,0,0,0,68,0,0,16,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,606,265,0,0,0,0],[0,0,0,603,152,604,153,57,58,0,59,0,0,606,154,0,0,62,0],[0,0,0,603,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,575,0,0,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,575,0,607,0,246,246,0,58,0,59,0,0,0,139,0,575,0,0],[0,0,0,616,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,265,141,141,57,58,0,0,0,0,612,265,0,0,0,0],[0,0,0,609,152,610,153,57,58,0,59,0,0,612,154,0,0,62,0],[0,0,0,609,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,549,0,0],[0,0,0,0,91,92,92,22,23,0,24,0,0,0,93,0,0,27,0],[0,0,0,0,112,113,113,32,33,0,34,0,0,0,114,0,0,37,0],[0,0,0,0,152,153,153,57,58,0,59,0,0,0,154,0,0,62,0]],"accepting":[false,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,false,false,true,true,true,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,true,true,true,false,true,false,true,true,false,false,true,true,true,true,true,true,true,false,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,false,true,false,true,true,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,false,true,false,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,true,false,true,true,false,false,false,false,true,true,false,false,true,true,true,false,true,true,false,false,true,false,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,true,false,true,false,true,true,false,false,true,true,false,false,true,true,true,false,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,false,false,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,false,false,false,false,false,false,false,true,true,false,false,true,true,false,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,true,true,false,true,true,true,true,true,true,false,true,true,false,true,false,true,true,true,true,true,true,false,true,true,true,true,true,true,false,true,true,false,false,false,false,false,true,true,false,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,false,false,false,true,false,true,true,true,true,true,false,true,true,true,false,true,true,true,true,true,false,true,true,true,true,false,true,true,true,true,true,false,true,true,false,true,true,true],"tags":[[],["broken_cluster"],["consonant_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["broken_cluster"],["broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],[],["broken_cluster"],["symbol_cluster"],[],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["symbol_cluster"],["symbol_cluster"],["symbol_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],["broken_cluster"],[],[],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["broken_cluster"],["symbol_cluster"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],["consonant_syllable"],[],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],["vowel_syllable"],[],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],[],[],[],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],["standalone_cluster"],[],[],["standalone_cluster"],["standalone_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],[],[],[],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],[],[],[],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],[],[],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],["standalone_cluster"],[],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],[],[],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],[],[],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],[],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],[],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],[],[],[],[],["consonant_syllable","broken_cluster"],["consonant_syllable","broken_cluster"],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],[],[],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],["consonant_syllable"],[],["consonant_syllable"],["consonant_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],["vowel_syllable"],[],["vowel_syllable"],["vowel_syllable"],["broken_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],["standalone_cluster"],[],["standalone_cluster"],["standalone_cluster"],[],["consonant_syllable"],["vowel_syllable"],["standalone_cluster"]]}');var ir={};ir=JSON.parse('{"categories":["O","IND","S","GB","B","FM","CGJ","VMAbv","VMPst","VAbv","VPst","CMBlw","VPre","VBlw","H","VMBlw","CMAbv","MBlw","CS","R","SUB","MPst","MPre","FAbv","FPst","FBlw","SMAbv","SMBlw","VMPre","ZWNJ","ZWJ","WJ","VS","N","HN","MAbv"],"decompositions":{"2507":[2503,2494],"2508":[2503,2519],"2888":[2887,2902],"2891":[2887,2878],"2892":[2887,2903],"3018":[3014,3006],"3019":[3015,3006],"3020":[3014,3031],"3144":[3142,3158],"3264":[3263,3285],"3271":[3270,3285],"3272":[3270,3286],"3274":[3270,3266],"3275":[3270,3266,3285],"3402":[3398,3390],"3403":[3399,3390],"3404":[3398,3415],"3546":[3545,3530],"3548":[3545,3535],"3549":[3545,3535,3530],"3550":[3545,3551],"3635":[3661,3634],"3763":[3789,3762],"3955":[3953,3954],"3957":[3953,3956],"3958":[4018,3968],"3959":[4018,3953,3968],"3960":[4019,3968],"3961":[4019,3953,3968],"3969":[3953,3968],"6971":[6970,6965],"6973":[6972,6965],"6976":[6974,6965],"6977":[6975,6965],"6979":[6978,6965],"69934":[69937,69927],"69935":[69938,69927],"70475":[70471,70462],"70476":[70471,70487],"70843":[70841,70842],"70844":[70841,70832],"70846":[70841,70845],"71098":[71096,71087],"71099":[71097,71087]},"stateTable":[[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[2,2,3,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,17,18,11,19,20,21,22,0,0,23,0,0,2,0,24,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,26,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,27,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,39,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,9,0,0,12,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,18,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,0,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,4,4,5,0,6,7,8,9,10,11,12,13,14,15,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,49,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,22,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,0,0,0,0,0,0,14,0,0,0,0,0,0,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0],[0,0,0,0,0,5,0,6,7,8,9,0,11,12,0,14,0,16,0,0,0,11,0,20,21,22,0,0,23,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,33,0,0,36,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,34,35,36,37,38,39,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,0,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,53,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,43,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,45,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,0,0,0,0,0,0,38,0,0,0,0,0,0,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,29,0,30,31,32,33,0,35,36,0,38,0,40,0,0,0,35,0,43,44,45,0,0,46,0,0,0,0,0,0,0],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,0,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,5,0,6,7,8,9,48,11,12,13,14,48,16,0,0,18,11,19,20,21,22,0,0,23,0,0,0,0,0,0,25],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,51,0],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,54,0,0],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,0,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,29,0,30,31,32,33,52,35,36,37,38,52,40,0,0,41,35,42,43,44,45,0,0,46,0,0,0,0,0,0,47],[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,0,51,0]],"accepting":[false,true,true,true,true,true,true,true,true,true,true,true,true,false,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true,true],"tags":[[],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],[],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["broken_cluster"],["independent_cluster"],["symbol_cluster"],["symbol_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["virama_terminated_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["standard_cluster"],["broken_cluster"],["broken_cluster"],["numeral_cluster"],["number_joiner_terminated_cluster"],["standard_cluster"],["standard_cluster"],["numeral_cluster"]]}');const _={X:1,C:2,V:4,N:8,H:16,ZWNJ:32,ZWJ:64,M:128,SM:256,VD:512,A:1024,Placeholder:2048,Dotted_Circle:4096,RS:8192,Coeng:16384,Repha:32768,Ra:65536,CM:131072,Symbol:262144},V={Start:1,Ra_To_Become_Reph:2,Pre_M:4,Pre_C:8,Base_C:16,After_Main:32,Above_C:64,Before_Sub:128,Below_C:256,After_Sub:512,Before_Post:1024,Post_C:2048,After_Post:4096,Final_C:8192,SMVD:16384,End:32768},xf=_.C|_.Ra|_.CM|_.V|_.Placeholder|_.Dotted_Circle,Fn=_.ZWJ|_.ZWNJ,ct=_.H|_.Coeng,ms={Default:{hasOldSpec:!1,virama:0,basePos:"Last",rephPos:V.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Devanagari:{hasOldSpec:!0,virama:2381,basePos:"Last",rephPos:V.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Bengali:{hasOldSpec:!0,virama:2509,basePos:"Last",rephPos:V.After_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gurmukhi:{hasOldSpec:!0,virama:2637,basePos:"Last",rephPos:V.Before_Sub,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Gujarati:{hasOldSpec:!0,virama:2765,basePos:"Last",rephPos:V.Before_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Oriya:{hasOldSpec:!0,virama:2893,basePos:"Last",rephPos:V.After_Main,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Tamil:{hasOldSpec:!0,virama:3021,basePos:"Last",rephPos:V.After_Post,rephMode:"Implicit",blwfMode:"Pre_And_Post"},Telugu:{hasOldSpec:!0,virama:3149,basePos:"Last",rephPos:V.After_Post,rephMode:"Explicit",blwfMode:"Post_Only"},Kannada:{hasOldSpec:!0,virama:3277,basePos:"Last",rephPos:V.After_Post,rephMode:"Implicit",blwfMode:"Post_Only"},Malayalam:{hasOldSpec:!0,virama:3405,basePos:"Last",rephPos:V.After_Main,rephMode:"Log_Repha",blwfMode:"Pre_And_Post"},Khmer:{hasOldSpec:!1,virama:6098,basePos:"First",rephPos:V.Ra_To_Become_Reph,rephMode:"Vis_Repha",blwfMode:"Pre_And_Post"}},mf={6078:[6081,6078],6079:[6081,6079],6080:[6081,6080],6084:[6081,6084],6085:[6081,6085]},{decompositions:wf}=er(ir),Dn=new Jt(oa("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")),yf=new js(er(Tn));class ve extends w0{static planFeatures(e){e.addStage(Cf),e.addStage(["locl","ccmp"]),e.addStage(Af),e.addStage("nukt"),e.addStage("akhn"),e.addStage("rphf",!1),e.addStage("rkrf"),e.addStage("pref",!1),e.addStage("blwf",!1),e.addStage("abvf",!1),e.addStage("half",!1),e.addStage("pstf",!1),e.addStage("vatu"),e.addStage("cjct"),e.addStage("cfar",!1),e.addStage(kf),e.addStage({local:["init"],global:["pres","abvs","blws","psts","haln","dist","abvm","blwm","calt","clig"]}),e.unicodeScript=dc(e.script),e.indicConfig=ms[e.unicodeScript]||ms.Default,e.isOldSpec=e.indicConfig.hasOldSpec&&e.script[e.script.length-1]!=="2"}static assignFeatures(e,t){for(let r=t.length-1;r>=0;r--){let a=t[r].codePoints[0],n=mf[a]||wf[a];if(n){let i=n.map(o=>{let u=e.font.glyphForCodePoint(o);return new Ye(e.font,u.id,[o],t[r].features)});t.splice(r,1,...i)}}}}Ue(ve,"zeroMarkWidths","NONE");function Kr(s){return Dn.get(s.codePoints[0])>>8}function Bn(s){return 1<<(Dn.get(s.codePoints[0])&255)}class Mt{constructor(e,t,r,a){this.category=e,this.position=t,this.syllableType=r,this.syllable=a}}function Cf(s,e){let t=0,r=0;for(let[a,n,i]of yf.match(e.map(Kr))){if(a>r){++t;for(let o=r;o<a;o++)e[o].shaperInfo=new Mt(_.X,V.End,"non_indic_cluster",t)}++t;for(let o=a;o<=n;o++)e[o].shaperInfo=new Mt(1<<Kr(e[o]),Bn(e[o]),i[0],t);r=n+1}if(r<e.length){++t;for(let a=r;a<e.length;a++)e[a].shaperInfo=new Mt(_.X,V.End,"non_indic_cluster",t)}}function k0(s){return s.shaperInfo.category&xf}function Qe(s){return s.shaperInfo.category&Fn}function i0(s){return s.shaperInfo.category&ct}function o0(s,e){for(let r of s)r.features={[e]:!0};return s[0]._font._layoutEngine.engine.GSUBProcessor.applyFeatures([e],s),s.length===1}function Sf(s,e,t){let r=[t,e,t];return o0(r.slice(0,2),"blwf")||o0(r.slice(1,3),"blwf")?V.Below_C:o0(r.slice(0,2),"pstf")||o0(r.slice(1,3),"pstf")||o0(r.slice(0,2),"pref")||o0(r.slice(1,3),"pref")?V.Post_C:V.Base_C}function Af(s,e,t){let r=t.indicConfig,a=s._layoutEngine.engine.GSUBProcessor.features,n=s.glyphForCodePoint(9676).id,i=s.glyphForCodePoint(r.virama).id;if(i){let o=new Ye(s,i,[r.virama]);for(let u=0;u<e.length;u++)e[u].shaperInfo.position===V.Base_C&&(e[u].shaperInfo.position=Sf(s,e[u].copy(),o))}for(let o=0,u=Zt(e,0);o<e.length;o=u,u=Zt(e,o)){let{category:c,syllableType:d}=e[o].shaperInfo;if(d==="symbol_cluster"||d==="non_indic_cluster")continue;if(d==="broken_cluster"&&n){let m=new Ye(s,n,[9676]);m.shaperInfo=new Mt(1<<Kr(m),Bn(m),e[o].shaperInfo.syllableType,e[o].shaperInfo.syllable);let T=o;for(;T<u&&e[T].shaperInfo.category===_.Repha;)T++;e.splice(T++,0,m),u++}let f=u,x=o,C=!1;if(r.rephPos!==V.Ra_To_Become_Reph&&a.rphf&&o+3<=u&&(r.rephMode==="Implicit"&&!Qe(e[o+2])||r.rephMode==="Explicit"&&e[o+2].shaperInfo.category===_.ZWJ)){let m=[e[o].copy(),e[o+1].copy(),e[o+2].copy()];if(o0(m.slice(0,2),"rphf")||r.rephMode==="Explicit"&&o0(m,"rphf")){for(x+=2;x<u&&Qe(e[x]);)x++;f=o,C=!0}}else if(r.rephMode==="Log_Repha"&&e[o].shaperInfo.category===_.Repha){for(x++;x<u&&Qe(e[x]);)x++;f=o,C=!0}switch(r.basePos){case"Last":{let m=u,T=!1;do{let h=e[--m].shaperInfo;if(k0(e[m])){if(h.position!==V.Below_C&&(h.position!==V.Post_C||T)){f=m;break}h.position===V.Below_C&&(T=!0),f=m}else if(o<m&&h.category===_.ZWJ&&e[m-1].shaperInfo.category===_.H)break}while(m>x);break}case"First":f=o;for(let m=f+1;m<u;m++)k0(e[m])&&(e[m].shaperInfo.position=V.Below_C)}C&&f===o&&x-f<=2&&(C=!1);for(let m=o;m<f;m++){let T=e[m].shaperInfo;T.position=Math.min(V.Pre_C,T.position)}f<u&&(e[f].shaperInfo.position=V.Base_C);for(let m=f+1;m<u;m++)if(e[m].shaperInfo.category===_.M){for(let T=m+1;T<u;T++)if(k0(e[T])){e[T].shaperInfo.position=V.Final_C;break}break}if(C&&(e[o].shaperInfo.position=V.Ra_To_Become_Reph),t.isOldSpec){let m=t.unicodeScript!=="Malayalam";for(let T=f+1;T<u;T++)if(e[T].shaperInfo.category===_.H){let h;for(h=u-1;h>T&&!(k0(e[h])||m&&e[h].shaperInfo.category===_.H);h--);if(e[h].shaperInfo.category!==_.H&&h>T){let j=e[T];e.splice(T,0,...e.splice(T+1,h-T)),e[h]=j}break}}let A=V.Start;for(let m=o;m<u;m++){let T=e[m].shaperInfo;if(T.category&(Fn|_.N|_.RS|_.CM|ct&T.category)){if(T.position=A,T.category===_.H&&T.position===V.Pre_M){for(let h=m;h>o;h--)if(e[h-1].shaperInfo.position!==V.Pre_M){T.position=e[h-1].shaperInfo.position;break}}}else T.position!==V.SMVD&&(A=T.position)}let D=f;for(let m=f+1;m<u;m++)if(k0(e[m])){for(let T=D+1;T<m;T++)e[T].shaperInfo.position<V.SMVD&&(e[T].shaperInfo.position=e[m].shaperInfo.position);D=m}else e[m].shaperInfo.category===_.M&&(D=m);let $=e.slice(o,u);$.sort((m,T)=>m.shaperInfo.position-T.shaperInfo.position),e.splice(o,$.length,...$);for(let m=o;m<u;m++)if(e[m].shaperInfo.position===V.Base_C){f=m;break}for(let m=o;m<u&&e[m].shaperInfo.position===V.Ra_To_Become_Reph;m++)e[m].features.rphf=!0;let B=!t.isOldSpec&&r.blwfMode==="Pre_And_Post";for(let m=o;m<f;m++)e[m].features.half=!0,B&&(e[m].features.blwf=!0);for(let m=f+1;m<u;m++)e[m].features.abvf=!0,e[m].features.pstf=!0,e[m].features.blwf=!0;if(t.isOldSpec&&t.unicodeScript==="Devanagari")for(let m=o;m+1<f;m++)e[m].shaperInfo.category===_.Ra&&e[m+1].shaperInfo.category===_.H&&(m+1===f||e[m+2].shaperInfo.category===_.ZWJ)&&(e[m].features.blwf=!0,e[m+1].features.blwf=!0);let R=2;if(a.pref&&f+R<u)for(let m=f+1;m+R-1<u;m++){let T=[e[m].copy(),e[m+1].copy()];if(o0(T,"pref")){for(let h=0;h<R;h++)e[m++].features.pref=!0;if(a.cfar)for(;m<u;m++)e[m].features.cfar=!0;break}}for(let m=o+1;m<u;m++)if(Qe(e[m])){let T=e[m].shaperInfo.category===_.ZWNJ,h=m;do h--,T&&delete e[h].features.half;while(h>o&&!k0(e[h]))}}}function kf(s,e,t){let r=t.indicConfig,a=s._layoutEngine.engine.GSUBProcessor.features;for(let n=0,i=Zt(e,0);n<e.length;n=i,i=Zt(e,n)){let o=!!a.pref,u=n;for(;u<i;u++)if(e[u].shaperInfo.position>=V.Base_C){if(o&&u+1<i){for(let c=u+1;c<i;c++)if(e[c].features.pref){if(!(e[c].substituted&&e[c].isLigated&&!e[c].isMultiplied)){for(u=c;u<i&&i0(e[u]);)u++;e[u].shaperInfo.position=V.BASE_C,o=!1}break}}if(t.unicodeScript==="Malayalam")for(let c=u+1;c<i;c++){for(;c<i&&Qe(e[c]);)c++;if(c===i||!i0(e[c]))break;for(c++;c<i&&Qe(e[c]);)c++;c<i&&k0(e[c])&&e[c].shaperInfo.position===V.Below_C&&(u=c,e[u].shaperInfo.position=V.Base_C)}n<u&&e[u].shaperInfo.position>V.Base_C&&u--;break}if(u===i&&n<u&&e[u-1].shaperInfo.category===_.ZWJ&&u--,u<i)for(;n<u&&e[u].shaperInfo.category&(_.N|ct);)u--;if(n+1<i&&n<u){let c=u===i?u-2:u-1;if(t.unicodeScript!=="Malayalam"&&t.unicodeScript!=="Tamil"){for(;c>n&&!(e[c].shaperInfo.category&(_.M|ct));)c--;i0(e[c])&&e[c].shaperInfo.position!==V.Pre_M?c+1<i&&Qe(e[c+1])&&c++:c=n}if(n<c&&e[c].shaperInfo.position!==V.Pre_M){for(let d=c;d>n;d--)if(e[d-1].shaperInfo.position===V.Pre_M){let f=d-1;f<u&&u<=c&&u--;let x=e[f];e.splice(f,0,...e.splice(f+1,c-f)),e[c]=x,c--}}}if(n+1<i&&e[n].shaperInfo.position===V.Ra_To_Become_Reph&&e[n].shaperInfo.category===_.Repha!==(e[n].isLigated&&!e[n].isMultiplied)){let c,d=r.rephPos,f=!1;if(d!==V.After_Post){for(c=n+1;c<u&&!i0(e[c]);)c++;if(c<u&&i0(e[c])&&(c+1<u&&Qe(e[c+1])&&c++,f=!0),!f&&d===V.After_Main){for(c=u;c+1<i&&e[c+1].shaperInfo.position<=V.After_Main;)c++;f=c<i}if(!f&&d===V.After_Sub){for(c=u;c+1<i&&!(e[c+1].shaperInfo.position&(V.Post_C|V.After_Post|V.SMVD));)c++;f=c<i}}if(!f){for(c=n+1;c<u&&!i0(e[c]);)c++;c<u&&i0(e[c])&&(c+1<u&&Qe(e[c+1])&&c++,f=!0)}if(!f){for(c=i-1;c>n&&e[c].shaperInfo.position===V.SMVD;)c--;if(i0(e[c]))for(let C=u+1;C<c;C++)e[C].shaperInfo.category===_.M&&c--}let x=e[n];e.splice(n,0,...e.splice(n+1,c-n)),e[c]=x,n<u&&u<=c&&u--}if(o&&u+1<i){for(let c=u+1;c<i;c++)if(e[c].features.pref){if(e[c].isLigated&&!e[c].isMultiplied){let d=u;if(t.unicodeScript!=="Malayalam"&&t.unicodeScript!=="Tamil"){for(;d>n&&!(e[d-1].shaperInfo.category&(_.M|ct));)d--;if(d>n&&e[d-1].shaperInfo.category===_.M){let C=c;for(let A=u+1;A<C;A++)if(e[A].shaperInfo.category===_.M){d--;break}}}d>n&&i0(e[d-1])&&d<i&&Qe(e[d])&&d++;let f=c,x=e[f];e.splice(d+1,0,...e.splice(d,f-d)),e[d]=x,d<=u&&u<f&&u++}break}}e[n].shaperInfo.position===V.Pre_M&&(!n||!/Cf|Mn/.test(_t(e[n-1].codePoints[0])))&&(e[n].features.init=!0)}}function Zt(s,e){if(e>=s.length)return e;let t=s[e].shaperInfo.syllable;for(;++e<s.length&&s[e].shaperInfo.syllable===t;);return e}const{categories:If,decompositions:ws}=er(ir),Of=new Jt(oa("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")),Pf=new js(er(ir));class Z extends w0{static planFeatures(e){e.addStage(Tf),e.addStage(["locl","ccmp","nukt","akhn"]),e.addStage(Cs),e.addStage(["rphf"],!1),e.addStage(Ff),e.addStage(Cs),e.addStage(["pref"]),e.addStage(Df),e.addStage(["rkrf","abvf","blwf","half","pstf","vatu","cjct"]),e.addStage(Bf),e.addStage(["abvs","blws","pres","psts","dist","abvm","blwm"])}static assignFeatures(e,t){for(let r=t.length-1;r>=0;r--){let a=t[r].codePoints[0];if(ws[a]){let n=ws[a].map(i=>{let o=e.font.glyphForCodePoint(i);return new Ye(e.font,o.id,[i],t[r].features)});t.splice(r,1,...n)}}}}Ue(Z,"zeroMarkWidths","BEFORE_GPOS");function ys(s){return Of.get(s.codePoints[0])}class Ef{constructor(e,t,r){this.category=e,this.syllableType=t,this.syllable=r}}function Tf(s,e){let t=0;for(let[r,a,n]of Pf.match(e.map(ys))){++t;for(let o=r;o<=a;o++)e[o].shaperInfo=new Ef(If[ys(e[o])],n[0],t);let i=e[r].shaperInfo.category==="R"?1:Math.min(3,a-r);for(let o=r;o<r+i;o++)e[o].features.rphf=!0}}function Cs(s,e){for(let t of e)t.substituted=!1}function Ff(s,e){for(let t of e)t.substituted&&t.features.rphf&&(t.shaperInfo.category="R")}function Df(s,e){for(let t of e)t.substituted&&(t.shaperInfo.category="VPre")}function Bf(s,e){let t=s.glyphForCodePoint(9676).id;for(let r=0,a=Ss(e,0);r<e.length;r=a,a=Ss(e,r)){let n,i,o=e[r].shaperInfo,u=o.syllableType;if(!(u!=="virama_terminated_cluster"&&u!=="standard_cluster"&&u!=="broken_cluster")){if(u==="broken_cluster"&&t){let c=new Ye(s,t,[9676]);for(c.shaperInfo=o,n=r;n<a&&e[n].shaperInfo.category==="R";n++);e.splice(++n,0,c),a++}if(o.category==="R"&&a-r>1){for(n=r+1;n<a;n++)if(o=e[n].shaperInfo,As(o)||Ft(e[n])){Ft(e[n])&&n--,e.splice(r,0,...e.splice(r+1,n-r),e[n]);break}}for(n=r,i=a;n<a;n++)o=e[n].shaperInfo,As(o)||Ft(e[n])?i=Ft(e[n])?n+1:n:(o.category==="VPre"||o.category==="VMPre")&&i<n&&e.splice(i,1,e[n],...e.splice(i,n-i))}}}function Ss(s,e){if(e>=s.length)return e;let t=s[e].shaperInfo.syllable;for(;++e<s.length&&s[e].shaperInfo.syllable===t;);return e}function Ft(s){return s.shaperInfo.category==="H"&&!s.isLigated}function As(s){return s.category==="B"||s.category==="GB"}const Lf={arab:p0,mong:p0,syrc:p0,"nko ":p0,phag:p0,mand:p0,mani:p0,phlp:p0,hang:In,bng2:ve,beng:ve,dev2:ve,deva:ve,gjr2:ve,gujr:ve,guru:ve,gur2:ve,knda:ve,knd2:ve,mlm2:ve,mlym:ve,ory2:ve,orya:ve,taml:ve,tml2:ve,telu:ve,tel2:ve,khmr:ve,bali:Z,batk:Z,brah:Z,bugi:Z,buhd:Z,cakm:Z,cham:Z,dupl:Z,egyp:Z,gran:Z,hano:Z,java:Z,kthi:Z,kali:Z,khar:Z,khoj:Z,sind:Z,lepc:Z,limb:Z,mahj:Z,mtei:Z,modi:Z,hmng:Z,rjng:Z,saur:Z,shrd:Z,sidd:Z,sinh:ve,sund:Z,sylo:Z,tglg:Z,tagb:Z,tale:Z,lana:Z,tavt:Z,takr:Z,tibt:Z,tfng:Z,tirh:Z,latn:w0,DFLT:w0};function Mf(s){Array.isArray(s)||(s=[s]);for(let e of s){let t=Lf[e];if(t)return t}return w0}class Rf extends $t{applyLookup(e,t){switch(e){case 1:{let a=this.coverageIndex(t.coverage);if(a===-1)return!1;let n=this.glyphIterator.cur;switch(t.version){case 1:n.id=n.id+t.deltaGlyphID&65535;break;case 2:n.id=t.substitute.get(a);break}return!0}case 2:{let a=this.coverageIndex(t.coverage);if(a!==-1){let n=t.sequences.get(a);if(n.length===0)return this.glyphs.splice(this.glyphIterator.index,1),!0;this.glyphIterator.cur.id=n[0],this.glyphIterator.cur.ligatureComponent=0;let i=this.glyphIterator.cur.features,o=this.glyphIterator.cur,u=n.slice(1).map((c,d)=>{let f=new Ye(this.font,c,void 0,i);return f.shaperInfo=o.shaperInfo,f.isLigated=o.isLigated,f.ligatureComponent=d+1,f.substituted=!0,f.isMultiplied=!0,f});return this.glyphs.splice(this.glyphIterator.index+1,0,...u),!0}return!1}case 3:{let a=this.coverageIndex(t.coverage);if(a!==-1){let n=0;return this.glyphIterator.cur.id=t.alternateSet.get(a)[n],!0}return!1}case 4:{let a=this.coverageIndex(t.coverage);if(a===-1)return!1;for(let n of t.ligatureSets.get(a)){let i=this.sequenceMatchIndices(1,n.components);if(!i)continue;let o=this.glyphIterator.cur,u=o.codePoints.slice();for(let D of i)u.push(...this.glyphs[D].codePoints);let c=new Ye(this.font,n.glyph,u,o.features);c.shaperInfo=o.shaperInfo,c.isLigated=!0,c.substituted=!0;let d=o.isMark;for(let D=0;D<i.length&&d;D++)d=this.glyphs[i[D]].isMark;c.ligatureID=d?null:this.ligatureID++;let f=o.ligatureID,x=o.codePoints.length,C=x,A=this.glyphIterator.index+1;for(let D of i){if(d)A=D;else for(;A<D;){var r=C-x+Math.min(this.glyphs[A].ligatureComponent||1,x);this.glyphs[A].ligatureID=c.ligatureID,this.glyphs[A].ligatureComponent=r,A++}f=this.glyphs[A].ligatureID,x=this.glyphs[A].codePoints.length,C+=x,A++}if(f&&!d)for(let D=A;D<this.glyphs.length&&this.glyphs[D].ligatureID===f;D++){var r=C-x+Math.min(this.glyphs[D].ligatureComponent||1,x);this.glyphs[D].ligatureComponent=r}for(let D=i.length-1;D>=0;D--)this.glyphs.splice(i[D],1);return this.glyphs[this.glyphIterator.index]=c,!0}return!1}case 5:return this.applyContext(t);case 6:return this.applyChainingContext(t);case 7:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`GSUB lookupType ${e} is not supported`)}}}class Nf extends $t{applyPositionValue(e,t){let r=this.positions[this.glyphIterator.peekIndex(e)];t.xAdvance!=null&&(r.xAdvance+=t.xAdvance),t.yAdvance!=null&&(r.yAdvance+=t.yAdvance),t.xPlacement!=null&&(r.xOffset+=t.xPlacement),t.yPlacement!=null&&(r.yOffset+=t.yPlacement);let a=this.font._variationProcessor,n=this.font.GDEF&&this.font.GDEF.itemVariationStore;a&&n&&(t.xPlaDevice&&(r.xOffset+=a.getDelta(n,t.xPlaDevice.a,t.xPlaDevice.b)),t.yPlaDevice&&(r.yOffset+=a.getDelta(n,t.yPlaDevice.a,t.yPlaDevice.b)),t.xAdvDevice&&(r.xAdvance+=a.getDelta(n,t.xAdvDevice.a,t.xAdvDevice.b)),t.yAdvDevice&&(r.yAdvance+=a.getDelta(n,t.yAdvDevice.a,t.yAdvDevice.b)))}applyLookup(e,t){switch(e){case 1:{let a=this.coverageIndex(t.coverage);if(a===-1)return!1;switch(t.version){case 1:this.applyPositionValue(0,t.value);break;case 2:this.applyPositionValue(0,t.values.get(a));break}return!0}case 2:{let a=this.glyphIterator.peek();if(!a)return!1;let n=this.coverageIndex(t.coverage);if(n===-1)return!1;switch(t.version){case 1:let i=t.pairSets.get(n);for(let c of i)if(c.secondGlyph===a.id)return this.applyPositionValue(0,c.value1),this.applyPositionValue(1,c.value2),!0;return!1;case 2:let o=this.getClassID(this.glyphIterator.cur.id,t.classDef1),u=this.getClassID(a.id,t.classDef2);if(o===-1||u===-1)return!1;var r=t.classRecords.get(o).get(u);return this.applyPositionValue(0,r.value1),this.applyPositionValue(1,r.value2),!0}}case 3:{let a=this.glyphIterator.peekIndex(),n=this.glyphs[a];if(!n)return!1;let i=t.entryExitRecords[this.coverageIndex(t.coverage)];if(!i||!i.exitAnchor)return!1;let o=t.entryExitRecords[this.coverageIndex(t.coverage,n.id)];if(!o||!o.entryAnchor)return!1;let u=this.getAnchor(o.entryAnchor),c=this.getAnchor(i.exitAnchor),d=this.positions[this.glyphIterator.index],f=this.positions[a],x;switch(this.direction){case"ltr":d.xAdvance=c.x+d.xOffset,x=u.x+f.xOffset,f.xAdvance-=x,f.xOffset-=x;break;case"rtl":x=c.x+d.xOffset,d.xAdvance-=x,d.xOffset-=x,f.xAdvance=u.x+f.xOffset;break}return this.glyphIterator.flags.rightToLeft?(this.glyphIterator.cur.cursiveAttachment=a,d.yOffset=u.y-c.y):(n.cursiveAttachment=this.glyphIterator.index,d.yOffset=c.y-u.y),!0}case 4:{let a=this.coverageIndex(t.markCoverage);if(a===-1)return!1;let n=this.glyphIterator.index;for(;--n>=0&&(this.glyphs[n].isMark||this.glyphs[n].ligatureComponent>0););if(n<0)return!1;let i=this.coverageIndex(t.baseCoverage,this.glyphs[n].id);if(i===-1)return!1;let o=t.markArray[a],u=t.baseArray[i][o.class];return this.applyAnchor(o,u,n),!0}case 5:{let a=this.coverageIndex(t.markCoverage);if(a===-1)return!1;let n=this.glyphIterator.index;for(;--n>=0&&this.glyphs[n].isMark;);if(n<0)return!1;let i=this.coverageIndex(t.ligatureCoverage,this.glyphs[n].id);if(i===-1)return!1;let o=t.ligatureArray[i],u=this.glyphIterator.cur,c=this.glyphs[n],d=c.ligatureID&&c.ligatureID===u.ligatureID&&u.ligatureComponent>0?Math.min(u.ligatureComponent,c.codePoints.length)-1:c.codePoints.length-1,f=t.markArray[a],x=o[d][f.class];return this.applyAnchor(f,x,n),!0}case 6:{let a=this.coverageIndex(t.mark1Coverage);if(a===-1)return!1;let n=this.glyphIterator.peekIndex(-1),i=this.glyphs[n];if(!i||!i.isMark)return!1;let o=this.glyphIterator.cur,u=!1;if(o.ligatureID===i.ligatureID?o.ligatureID?o.ligatureComponent===i.ligatureComponent&&(u=!0):u=!0:(o.ligatureID&&!o.ligatureComponent||i.ligatureID&&!i.ligatureComponent)&&(u=!0),!u)return!1;let c=this.coverageIndex(t.mark2Coverage,i.id);if(c===-1)return!1;let d=t.mark1Array[a],f=t.mark2Array[c][d.class];return this.applyAnchor(d,f,n),!0}case 7:return this.applyContext(t);case 8:return this.applyChainingContext(t);case 9:return this.applyLookup(t.lookupType,t.extension);default:throw new Error(`Unsupported GPOS table: ${e}`)}}applyAnchor(e,t,r){let a=this.getAnchor(t),n=this.getAnchor(e.markAnchor);this.positions[r];let i=this.positions[this.glyphIterator.index];i.xOffset=a.x-n.x,i.yOffset=a.y-n.y,this.glyphIterator.cur.markAttachment=r}getAnchor(e){let t=e.xCoordinate,r=e.yCoordinate,a=this.font._variationProcessor,n=this.font.GDEF&&this.font.GDEF.itemVariationStore;return a&&n&&(e.xDeviceTable&&(t+=a.getDelta(n,e.xDeviceTable.a,e.xDeviceTable.b)),e.yDeviceTable&&(r+=a.getDelta(n,e.yDeviceTable.a,e.yDeviceTable.b))),{x:t,y:r}}applyFeatures(e,t,r){super.applyFeatures(e,t,r);for(var a=0;a<this.glyphs.length;a++)this.fixCursiveAttachment(a);this.fixMarkAttachment()}fixCursiveAttachment(e){let t=this.glyphs[e];if(t.cursiveAttachment!=null){let r=t.cursiveAttachment;t.cursiveAttachment=null,this.fixCursiveAttachment(r),this.positions[e].yOffset+=this.positions[r].yOffset}}fixMarkAttachment(){for(let e=0;e<this.glyphs.length;e++){let t=this.glyphs[e];if(t.markAttachment!=null){let r=t.markAttachment;if(this.positions[e].xOffset+=this.positions[r].xOffset,this.positions[e].yOffset+=this.positions[r].yOffset,this.direction==="ltr")for(let a=r;a<e;a++)this.positions[e].xOffset-=this.positions[a].xAdvance,this.positions[e].yOffset-=this.positions[a].yAdvance;else for(let a=r+1;a<e+1;a++)this.positions[e].xOffset+=this.positions[a].xAdvance,this.positions[e].yOffset+=this.positions[a].yAdvance}}}}class Uf{setup(e){this.glyphInfos=e.glyphs.map(r=>new Ye(this.font,r.id,[...r.codePoints]));let t=null;this.GPOSProcessor&&(t=this.GPOSProcessor.selectScript(e.script,e.language,e.direction)),this.GSUBProcessor&&(t=this.GSUBProcessor.selectScript(e.script,e.language,e.direction)),this.shaper=Mf(t),this.plan=new Nc(this.font,t,e.direction),this.shaper.plan(this.plan,this.glyphInfos,e.features);for(let r in this.plan.allFeatures)e.features[r]=!0}substitute(e){this.GSUBProcessor&&(this.plan.process(this.GSUBProcessor,this.glyphInfos),e.glyphs=this.glyphInfos.map(t=>this.font.getGlyph(t.id,t.codePoints)))}position(e){return this.shaper.zeroMarkWidths==="BEFORE_GPOS"&&this.zeroMarkAdvances(e.positions),this.GPOSProcessor&&this.plan.process(this.GPOSProcessor,this.glyphInfos,e.positions),this.shaper.zeroMarkWidths==="AFTER_GPOS"&&this.zeroMarkAdvances(e.positions),e.direction==="rtl"&&(e.glyphs.reverse(),e.positions.reverse()),this.GPOSProcessor&&this.GPOSProcessor.features}zeroMarkAdvances(e){for(let t=0;t<this.glyphInfos.length;t++)this.glyphInfos[t].isMark&&(e[t].xAdvance=0,e[t].yAdvance=0)}cleanup(){this.glyphInfos=null,this.plan=null,this.shaper=null}getAvailableFeatures(e,t){let r=[];return this.GSUBProcessor&&(this.GSUBProcessor.selectScript(e,t),r.push(...Object.keys(this.GSUBProcessor.features))),this.GPOSProcessor&&(this.GPOSProcessor.selectScript(e,t),r.push(...Object.keys(this.GPOSProcessor.features))),r}constructor(e){this.font=e,this.glyphInfos=null,this.plan=null,this.GSUBProcessor=null,this.GPOSProcessor=null,this.fallbackPosition=!0,e.GSUB&&(this.GSUBProcessor=new Rf(e,e.GSUB)),e.GPOS&&(this.GPOSProcessor=new Nf(e,e.GPOS))}}class Vf{layout(e,t,r,a,n){if(typeof t=="string"&&(n=a,a=r,r=t,t=[]),typeof e=="string"){r==null&&(r=hc(e));var i=this.font.glyphsForString(e)}else{if(r==null){let c=[];for(let d of e)c.push(...d.codePoints);r=pc(c)}var i=e}let o=new gc(i,t,r,a,n);return i.length===0?(o.positions=[],o):(this.engine&&this.engine.setup&&this.engine.setup(o),this.substitute(o),this.position(o),this.hideDefaultIgnorables(o.glyphs,o.positions),this.engine&&this.engine.cleanup&&this.engine.cleanup(),o)}substitute(e){this.engine&&this.engine.substitute&&this.engine.substitute(e)}position(e){e.positions=e.glyphs.map(r=>new vc(r.advanceWidth));let t=null;this.engine&&this.engine.position&&(t=this.engine.position(e)),!t&&(!this.engine||this.engine.fallbackPosition)&&(this.unicodeLayoutEngine||(this.unicodeLayoutEngine=new fc(this.font)),this.unicodeLayoutEngine.positionGlyphs(e.glyphs,e.positions)),(!t||!t.kern)&&e.features.kern!==!1&&this.font.kern&&(this.kernProcessor||(this.kernProcessor=new cc(this.font)),this.kernProcessor.process(e.glyphs,e.positions),e.features.kern=!0)}hideDefaultIgnorables(e,t){let r=this.font.glyphForCodePoint(32);for(let a=0;a<e.length;a++)this.isDefaultIgnorable(e[a].codePoints[0])&&(e[a]=r,t[a].xAdvance=0,t[a].yAdvance=0)}isDefaultIgnorable(e){let t=e>>16;if(t===0)switch(e>>8){case 0:return e===173;case 3:return e===847;case 6:return e===1564;case 23:return 6068<=e&&e<=6069;case 24:return 6155<=e&&e<=6158;case 32:return 8203<=e&&e<=8207||8234<=e&&e<=8238||8288<=e&&e<=8303;case 254:return 65024<=e&&e<=65039||e===65279;case 255:return 65520<=e&&e<=65528;default:return!1}else switch(t){case 1:return 113824<=e&&e<=113827||119155<=e&&e<=119162;case 14:return 917504<=e&&e<=921599;default:return!1}}getAvailableFeatures(e,t){let r=[];return this.engine&&r.push(...this.engine.getAvailableFeatures(e,t)),this.font.kern&&r.indexOf("kern")===-1&&r.push("kern"),r}stringsForGlyph(e){let t=new Set,r=this.font._cmapProcessor.codePointsForGlyph(e);for(let a of r)t.add(String.fromCodePoint(a));if(this.engine&&this.engine.stringsForGlyph)for(let a of this.engine.stringsForGlyph(e))t.add(a);return Array.from(t)}constructor(e){this.font=e,this.unicodeLayoutEngine=null,this.kernProcessor=null,this.font.morx?this.engine=new Rc(this.font):(this.font.GSUB||this.font.GPOS)&&(this.engine=new Uf(this.font))}}const Gf={moveTo:"M",lineTo:"L",quadraticCurveTo:"Q",bezierCurveTo:"C",closePath:"Z"};class j0{toFunction(){return e=>{this.commands.forEach(t=>e[t.command].apply(e,t.args))}}toSVG(){return this.commands.map(t=>{let r=t.args.map(a=>Math.round(a*100)/100);return`${Gf[t.command]}${r.join(" ")}`}).join("")}get cbox(){if(!this._cbox){let e=new m0;for(let t of this.commands)for(let r=0;r<t.args.length;r+=2)e.addPoint(t.args[r],t.args[r+1]);this._cbox=Object.freeze(e)}return this._cbox}get bbox(){if(this._bbox)return this._bbox;let e=new m0,t=0,r=0,a=R=>Math.pow(1-R,3)*C[B]+3*Math.pow(1-R,2)*R*A[B]+3*(1-R)*Math.pow(R,2)*D[B]+Math.pow(R,3)*$[B];for(let R of this.commands)switch(R.command){case"moveTo":case"lineTo":let[m,T]=R.args;e.addPoint(m,T),t=m,r=T;break;case"quadraticCurveTo":case"bezierCurveTo":if(R.command==="quadraticCurveTo")var[n,i,f,x]=R.args,o=t+2/3*(n-t),u=r+2/3*(i-r),c=f+2/3*(n-f),d=x+2/3*(i-x);else var[o,u,c,d,f,x]=R.args;e.addPoint(f,x);for(var C=[t,r],A=[o,u],D=[c,d],$=[f,x],B=0;B<=1;B++){let h=6*C[B]-12*A[B]+6*D[B],j=-3*C[B]+9*A[B]-9*D[B]+3*$[B];if(R=3*A[B]-3*C[B],j===0){if(h===0)continue;let z=-R/h;0<z&&z<1&&(B===0?e.addPoint(a(z),e.maxY):B===1&&e.addPoint(e.maxX,a(z)));continue}let H=Math.pow(h,2)-4*R*j;if(H<0)continue;let N=(-h+Math.sqrt(H))/(2*j);0<N&&N<1&&(B===0?e.addPoint(a(N),e.maxY):B===1&&e.addPoint(e.maxX,a(N)));let re=(-h-Math.sqrt(H))/(2*j);0<re&&re<1&&(B===0?e.addPoint(a(re),e.maxY):B===1&&e.addPoint(e.maxX,a(re)))}t=f,r=x;break}return this._bbox=Object.freeze(e)}mapPoints(e){let t=new j0;for(let r of this.commands){let a=[];for(let n=0;n<r.args.length;n+=2){let[i,o]=e(r.args[n],r.args[n+1]);a.push(i,o)}t[r.command](...a)}return t}transform(e,t,r,a,n,i){return this.mapPoints((o,u)=>{const c=e*o+r*u+n,d=t*o+a*u+i;return[c,d]})}translate(e,t){return this.transform(1,0,0,1,e,t)}rotate(e){let t=Math.cos(e),r=Math.sin(e);return this.transform(t,r,-r,t,0,0)}scale(e,t=e){return this.transform(e,0,0,t,0,0)}constructor(){this.commands=[],this._bbox=null,this._cbox=null}}for(let s of["moveTo","lineTo","quadraticCurveTo","bezierCurveTo","closePath"])j0.prototype[s]=function(...e){return this._bbox=this._cbox=null,this.commands.push({command:s,args:e}),this};var st=[".notdef",".null","nonmarkingreturn","space","exclam","quotedbl","numbersign","dollar","percent","ampersand","quotesingle","parenleft","parenright","asterisk","plus","comma","hyphen","period","slash","zero","one","two","three","four","five","six","seven","eight","nine","colon","semicolon","less","equal","greater","question","at","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","bracketleft","backslash","bracketright","asciicircum","underscore","grave","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","braceleft","bar","braceright","asciitilde","Adieresis","Aring","Ccedilla","Eacute","Ntilde","Odieresis","Udieresis","aacute","agrave","acircumflex","adieresis","atilde","aring","ccedilla","eacute","egrave","ecircumflex","edieresis","iacute","igrave","icircumflex","idieresis","ntilde","oacute","ograve","ocircumflex","odieresis","otilde","uacute","ugrave","ucircumflex","udieresis","dagger","degree","cent","sterling","section","bullet","paragraph","germandbls","registered","copyright","trademark","acute","dieresis","notequal","AE","Oslash","infinity","plusminus","lessequal","greaterequal","yen","mu","partialdiff","summation","product","pi","integral","ordfeminine","ordmasculine","Omega","ae","oslash","questiondown","exclamdown","logicalnot","radical","florin","approxequal","Delta","guillemotleft","guillemotright","ellipsis","nonbreakingspace","Agrave","Atilde","Otilde","OE","oe","endash","emdash","quotedblleft","quotedblright","quoteleft","quoteright","divide","lozenge","ydieresis","Ydieresis","fraction","currency","guilsinglleft","guilsinglright","fi","fl","daggerdbl","periodcentered","quotesinglbase","quotedblbase","perthousand","Acircumflex","Ecircumflex","Aacute","Edieresis","Egrave","Iacute","Icircumflex","Idieresis","Igrave","Oacute","Ocircumflex","apple","Ograve","Uacute","Ucircumflex","Ugrave","dotlessi","circumflex","tilde","macron","breve","dotaccent","ring","cedilla","hungarumlaut","ogonek","caron","Lslash","lslash","Scaron","scaron","Zcaron","zcaron","brokenbar","Eth","eth","Yacute","yacute","Thorn","thorn","minus","multiply","onesuperior","twosuperior","threesuperior","onehalf","onequarter","threequarters","franc","Gbreve","gbreve","Idotaccent","Scedilla","scedilla","Cacute","cacute","Ccaron","ccaron","dcroat"];class s0{_getPath(){return new j0}_getCBox(){return this.path.cbox}_getBBox(){return this.path.bbox}_getTableMetrics(e){if(this.id<e.metrics.length)return e.metrics.get(this.id);let t=e.metrics.get(e.metrics.length-1);return{advance:t?t.advance:0,bearing:e.bearings.get(this.id-e.metrics.length)||0}}_getMetrics(e){if(this._metrics)return this._metrics;let{advance:t,bearing:r}=this._getTableMetrics(this._font.hmtx);if(this._font.vmtx)var{advance:a,bearing:n}=this._getTableMetrics(this._font.vmtx);else{let i;if((typeof e>"u"||e===null)&&({cbox:e}=this),(i=this._font["OS/2"])&&i.version>0)var a=Math.abs(i.typoAscender-i.typoDescender),n=i.typoAscender-e.maxY;else{let{hhea:o}=this._font;var a=Math.abs(o.ascent-o.descent),n=o.ascent-e.maxY}}return this._font._variationProcessor&&this._font.HVAR&&(t+=this._font._variationProcessor.getAdvanceAdjustment(this.id,this._font.HVAR)),this._metrics={advanceWidth:t,advanceHeight:a,leftBearing:r,topBearing:n}}get cbox(){return this._getCBox()}get bbox(){return this._getBBox()}get path(){return this._getPath()}getScaledPath(e){let t=1/this._font.unitsPerEm*e;return this.path.scale(t)}get advanceWidth(){return this._getMetrics().advanceWidth}get advanceHeight(){return this._getMetrics().advanceHeight}get ligatureCaretPositions(){}_getName(){let{post:e}=this._font;if(!e)return null;switch(e.version){case 1:return st[this.id];case 2:let t=e.glyphNameIndex[this.id];return t<st.length?st[t]:e.names[t-st.length];case 2.5:return st[this.id+e.offsets[this.id]];case 4:return String.fromCharCode(e.map[this.id])}}get name(){return this._getName()}render(e,t){e.save();let r=1/this._font.head.unitsPerEm*t;e.scale(r,r),this.path.toFunction()(e),e.fill(),e.restore()}constructor(e,t,r){this.id=e,this.codePoints=t,this._font=r,this.isMark=this.codePoints.length>0&&this.codePoints.every(Ks),this.isLigature=this.codePoints.length>1}}Ie([Oe],s0.prototype,"cbox",null);Ie([Oe],s0.prototype,"bbox",null);Ie([Oe],s0.prototype,"path",null);Ie([Oe],s0.prototype,"advanceWidth",null);Ie([Oe],s0.prototype,"advanceHeight",null);Ie([Oe],s0.prototype,"name",null);let ks=new v({numberOfContours:w,xMin:w,yMin:w,xMax:w,yMax:w});const zf=1,Wf=2,Hf=4,qf=8,$f=16,Xf=32,Yf=1,Kf=8,Is=32,jf=64,Zf=128,Jf=256;class qe{copy(){return new qe(this.onCurve,this.endContour,this.x,this.y)}constructor(e,t,r=0,a=0){this.onCurve=e,this.endContour=t,this.x=r,this.y=a}}class Qf{constructor(e,t,r){this.glyphID=e,this.dx=t,this.dy=r,this.pos=0,this.scaleX=this.scaleY=1,this.scale01=this.scale10=0}}class lr extends s0{_getCBox(e){if(this._font._variationProcessor&&!e)return this.path.cbox;let t=this._font._getTableStream("glyf");t.pos+=this._font.loca.offsets[this.id];let r=ks.decode(t),a=new m0(r.xMin,r.yMin,r.xMax,r.yMax);return Object.freeze(a)}_parseGlyphCoord(e,t,r,a){if(r){var n=e.readUInt8();a||(n=-n),n+=t}else if(a)var n=t;else var n=t+e.readInt16BE();return n}_decode(){let e=this._font.loca.offsets[this.id],t=this._font.loca.offsets[this.id+1];if(e===t)return null;let r=this._font._getTableStream("glyf");r.pos+=e;let a=r.pos,n=ks.decode(r);return n.numberOfContours>0?this._decodeSimple(n,r):n.numberOfContours<0&&this._decodeComposite(n,r,a),n}_decodeSimple(e,t){e.points=[];let r=new p(l,e.numberOfContours).decode(t);e.instructions=new p(O,l).decode(t);let a=[],n=r[r.length-1]+1;for(;a.length<n;){var i=t.readUInt8();if(a.push(i),i&qf){let d=t.readUInt8();for(let f=0;f<d;f++)a.push(i)}}for(var o=0;o<a.length;o++){var i=a[o];let f=new qe(!!(i&zf),r.indexOf(o)>=0,0,0);e.points.push(f)}let u=0;for(var o=0;o<a.length;o++){var i=a[o];e.points[o].x=u=this._parseGlyphCoord(t,u,i&Wf,i&$f)}let c=0;for(var o=0;o<a.length;o++){var i=a[o];e.points[o].y=c=this._parseGlyphCoord(t,c,i&Hf,i&Xf)}if(this._font._variationProcessor){let d=e.points.slice();d.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,d),e.phantomPoints=d.slice(-4)}}_decodeComposite(e,t,r=0){e.components=[];let a=!1,n=Is;for(;n&Is;){n=t.readUInt16BE();let c=t.pos-r,d=t.readUInt16BE();if(a||(a=(n&Jf)!==0),n&Yf)var i=t.readInt16BE(),o=t.readInt16BE();else var i=t.readInt8(),o=t.readInt8();var u=new Qf(d,i,o);u.pos=c,n&Kf?u.scaleX=u.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824:n&jf?(u.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,u.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824):n&Zf&&(u.scaleX=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,u.scale01=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,u.scale10=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824,u.scaleY=(t.readUInt8()<<24|t.readUInt8()<<16)/1073741824),e.components.push(u)}if(this._font._variationProcessor){let c=[];for(let d=0;d<e.components.length;d++){var u=e.components[d];c.push(new qe(!0,!0,u.dx,u.dy))}c.push(...this._getPhantomPoints(e)),this._font._variationProcessor.transformPoints(this.id,c),e.phantomPoints=c.splice(-4,4);for(let d=0;d<c.length;d++){let f=c[d];e.components[d].dx=f.x,e.components[d].dy=f.y}}return a}_getPhantomPoints(e){let t=this._getCBox(!0);this._metrics==null&&(this._metrics=s0.prototype._getMetrics.call(this,t));let{advanceWidth:r,advanceHeight:a,leftBearing:n,topBearing:i}=this._metrics;return[new qe(!1,!0,e.xMin-n,0),new qe(!1,!0,e.xMin-n+r,0),new qe(!1,!0,0,e.yMax+i),new qe(!1,!0,0,e.yMax+i+a)]}_getContours(){let e=this._decode();if(!e)return[];let t=[];if(e.numberOfContours<0)for(let i of e.components){let o=this._font.getGlyph(i.glyphID)._getContours();for(let u=0;u<o.length;u++){let c=o[u];for(let d=0;d<c.length;d++){let f=c[d],x=f.x*i.scaleX+f.y*i.scale01+i.dx,C=f.y*i.scaleY+f.x*i.scale10+i.dy;t.push(new qe(f.onCurve,f.endContour,x,C))}}}else t=e.points||[];e.phantomPoints&&!this._font.directory.tables.HVAR&&(this._metrics.advanceWidth=e.phantomPoints[1].x-e.phantomPoints[0].x,this._metrics.advanceHeight=e.phantomPoints[3].y-e.phantomPoints[2].y,this._metrics.leftBearing=e.xMin-e.phantomPoints[0].x,this._metrics.topBearing=e.phantomPoints[2].y-e.yMax);let r=[],a=[];for(let i=0;i<t.length;i++){var n=t[i];a.push(n),n.endContour&&(r.push(a),a=[])}return r}_getMetrics(){if(this._metrics)return this._metrics;let e=this._getCBox(!0);return super._getMetrics(e),this._font._variationProcessor&&!this._font.HVAR&&this.path,this._metrics}_getPath(){let e=this._getContours(),t=new j0;for(let a=0;a<e.length;a++){let n=e[a],i=n[0],o=n[n.length-1],u=0;if(i.onCurve){var r=null;u=1}else{o.onCurve?i=o:i=new qe(!1,!1,(i.x+o.x)/2,(i.y+o.y)/2);var r=i}t.moveTo(i.x,i.y);for(let c=u;c<n.length;c++){let d=n[c],f=c===0?i:n[c-1];if(f.onCurve&&d.onCurve)t.lineTo(d.x,d.y);else if(f.onCurve&&!d.onCurve)var r=d;else if(!f.onCurve&&!d.onCurve){let C=(f.x+d.x)/2,A=(f.y+d.y)/2;t.quadraticCurveTo(f.x,f.y,C,A);var r=d}else if(!f.onCurve&&d.onCurve){t.quadraticCurveTo(r.x,r.y,d.x,d.y);var r=null}else throw new Error("Unknown TTF path state")}r&&t.quadraticCurveTo(r.x,r.y,i.x,i.y),t.closePath()}return t}constructor(...e){super(...e),Ue(this,"type","TTF")}}class _f extends s0{_getName(){return this._font.CFF2?super._getName():this._font["CFF "].getGlyphName(this.id)}bias(e){return e.length<1240?107:e.length<33900?1131:32768}_getPath(){let e=this._font.CFF2||this._font["CFF "],{stream:t}=e,r=e.topDict.CharStrings[this.id],a=r.offset+r.length;t.pos=r.offset;let n=new j0,i=[],o=[],u=null,c=0,d=0,f=0,x,C,A=!1;this._usedGsubrs=x={},this._usedSubrs=C={};let D=e.globalSubrIndex||[],$=this.bias(D),B=e.privateDictForGlyph(this.id)||{},R=B.Subrs||[],m=this.bias(R),T=e.topDict.vstore&&e.topDict.vstore.itemVariationStore,h=B.vsindex,j=this._font._variationProcessor;function H(){u==null&&(u=i.shift()+B.nominalWidthX)}function N(){return i.length%2!==0&&H(),c+=i.length>>1,i.length=0}function re(ae,xe){A&&n.closePath(),n.moveTo(ae,xe),A=!0}let z=function(){for(;t.pos<a;){let de=t.readUInt8();if(de<32){let we,Ee,De;switch(de){case 1:case 3:case 18:case 23:N();break;case 4:i.length>1&&H(),f+=i.shift(),re(d,f);break;case 5:for(;i.length>=2;)d+=i.shift(),f+=i.shift(),n.lineTo(d,f);break;case 6:case 7:for(De=de===6;i.length>=1;)De?d+=i.shift():f+=i.shift(),n.lineTo(d,f),De=!De;break;case 8:for(;i.length>0;){var X=d+i.shift(),ee=f+i.shift(),Y=X+i.shift(),K=ee+i.shift();d=Y+i.shift(),f=K+i.shift(),n.bezierCurveTo(X,ee,Y,K,d,f)}break;case 10:if(we=i.pop()+m,Ee=R[we],Ee){C[we]=!0;var ae=t.pos,xe=a;t.pos=Ee.offset,a=Ee.offset+Ee.length,z(),t.pos=ae,a=xe}break;case 11:if(e.version>=2)break;return;case 14:if(e.version>=2)break;i.length>0&&H(),A&&(n.closePath(),A=!1);break;case 15:if(e.version<2)throw new Error("vsindex operator not supported in CFF v1");h=i.pop();break;case 16:{if(e.version<2)throw new Error("blend operator not supported in CFF v1");if(!j)throw new Error("blend operator in non-variation font");let ne=j.getBlendVector(T,h),ge=i.pop(),C0=ge*ne.length,Me=i.length-C0,S0=Me-ge;for(let P=0;P<ge;P++){let S=i[S0+P];for(let k=0;k<ne.length;k++)S+=ne[k]*i[Me++];i[S0+P]=S}for(;C0--;)i.pop();break}case 19:case 20:N(),t.pos+=c+7>>3;break;case 21:i.length>2&&H(),d+=i.shift(),f+=i.shift(),re(d,f);break;case 22:i.length>1&&H(),d+=i.shift(),re(d,f);break;case 24:for(;i.length>=8;){var X=d+i.shift(),ee=f+i.shift(),Y=X+i.shift(),K=ee+i.shift();d=Y+i.shift(),f=K+i.shift(),n.bezierCurveTo(X,ee,Y,K,d,f)}d+=i.shift(),f+=i.shift(),n.lineTo(d,f);break;case 25:for(;i.length>=8;)d+=i.shift(),f+=i.shift(),n.lineTo(d,f);var X=d+i.shift(),ee=f+i.shift(),Y=X+i.shift(),K=ee+i.shift();d=Y+i.shift(),f=K+i.shift(),n.bezierCurveTo(X,ee,Y,K,d,f);break;case 26:for(i.length%2&&(d+=i.shift());i.length>=4;)X=d,ee=f+i.shift(),Y=X+i.shift(),K=ee+i.shift(),d=Y,f=K+i.shift(),n.bezierCurveTo(X,ee,Y,K,d,f);break;case 27:for(i.length%2&&(f+=i.shift());i.length>=4;)X=d+i.shift(),ee=f,Y=X+i.shift(),K=ee+i.shift(),d=Y+i.shift(),f=K,n.bezierCurveTo(X,ee,Y,K,d,f);break;case 28:i.push(t.readInt16BE());break;case 29:if(we=i.pop()+$,Ee=D[we],Ee){x[we]=!0;var ae=t.pos,xe=a;t.pos=Ee.offset,a=Ee.offset+Ee.length,z(),t.pos=ae,a=xe}break;case 30:case 31:for(De=de===31;i.length>=4;)De?(X=d+i.shift(),ee=f,Y=X+i.shift(),K=ee+i.shift(),f=K+i.shift(),d=Y+(i.length===1?i.shift():0)):(X=d,ee=f+i.shift(),Y=X+i.shift(),K=ee+i.shift(),d=Y+i.shift(),f=K+(i.length===1?i.shift():0)),n.bezierCurveTo(X,ee,Y,K,d,f),De=!De;break;case 12:switch(de=t.readUInt8(),de){case 3:let ne=i.pop(),ge=i.pop();i.push(ne&&ge?1:0);break;case 4:ne=i.pop(),ge=i.pop(),i.push(ne||ge?1:0);break;case 5:ne=i.pop(),i.push(ne?0:1);break;case 9:ne=i.pop(),i.push(Math.abs(ne));break;case 10:ne=i.pop(),ge=i.pop(),i.push(ne+ge);break;case 11:ne=i.pop(),ge=i.pop(),i.push(ne-ge);break;case 12:ne=i.pop(),ge=i.pop(),i.push(ne/ge);break;case 14:ne=i.pop(),i.push(-ne);break;case 15:ne=i.pop(),ge=i.pop(),i.push(ne===ge?1:0);break;case 18:i.pop();break;case 20:let C0=i.pop(),Me=i.pop();o[Me]=C0;break;case 21:Me=i.pop(),i.push(o[Me]||0);break;case 22:let S0=i.pop(),P=i.pop(),S=i.pop(),k=i.pop();i.push(S<=k?S0:P);break;case 23:i.push(Math.random());break;case 24:ne=i.pop(),ge=i.pop(),i.push(ne*ge);break;case 26:ne=i.pop(),i.push(Math.sqrt(ne));break;case 27:ne=i.pop(),i.push(ne,ne);break;case 28:ne=i.pop(),ge=i.pop(),i.push(ge,ne);break;case 29:Me=i.pop(),Me<0?Me=0:Me>i.length-1&&(Me=i.length-1),i.push(i[Me]);break;case 30:let y=i.pop(),L=i.pop();if(L>=0)for(;L>0;){var Pe=i[y-1];for(let oe=y-2;oe>=0;oe--)i[oe+1]=i[oe];i[0]=Pe,L--}else for(;L<0;){var Pe=i[0];for(let Ce=0;Ce<=y;Ce++)i[Ce]=i[Ce+1];i[y-1]=Pe,L++}break;case 34:X=d+i.shift(),ee=f,Y=X+i.shift(),K=ee+i.shift();let W=Y+i.shift(),M=K,U=W+i.shift(),Q=M,G=U+i.shift(),F=Q,ie=G+i.shift(),me=F;d=ie,f=me,n.bezierCurveTo(X,ee,Y,K,W,M),n.bezierCurveTo(U,Q,G,F,ie,me);break;case 35:let ye=[];for(let oe=0;oe<=5;oe++)d+=i.shift(),f+=i.shift(),ye.push(d,f);n.bezierCurveTo(...ye.slice(0,6)),n.bezierCurveTo(...ye.slice(6)),i.shift();break;case 36:X=d+i.shift(),ee=f+i.shift(),Y=X+i.shift(),K=ee+i.shift(),W=Y+i.shift(),M=K,U=W+i.shift(),Q=M,G=U+i.shift(),F=Q+i.shift(),ie=G+i.shift(),me=F,d=ie,f=me,n.bezierCurveTo(X,ee,Y,K,W,M),n.bezierCurveTo(U,Q,G,F,ie,me);break;case 37:let Be=d,Te=f;ye=[];for(let oe=0;oe<=4;oe++)d+=i.shift(),f+=i.shift(),ye.push(d,f);Math.abs(d-Be)>Math.abs(f-Te)?(d+=i.shift(),f=Te):(d=Be,f+=i.shift()),ye.push(d,f),n.bezierCurveTo(...ye.slice(0,6)),n.bezierCurveTo(...ye.slice(6));break;default:throw new Error(`Unknown op: 12 ${de}`)}break;default:throw new Error(`Unknown op: ${de}`)}}else if(de<247)i.push(de-139);else if(de<251){var Ve=t.readUInt8();i.push((de-247)*256+Ve+108)}else if(de<255){var Ve=t.readUInt8();i.push(-(de-251)*256-Ve-108)}else i.push(t.readInt32BE()/65536)}};return z(),A&&n.closePath(),n}constructor(...e){super(...e),Ue(this,"type","CFF")}}let e1=new v({originX:l,originY:l,type:new ce(4),data:new r0(s=>s.parent.buflen-s._currentOffset)});class t1 extends lr{getImageForSize(e){for(let i=0;i<this._font.sbix.imageTables.length;i++){var t=this._font.sbix.imageTables[i];if(t.ppem>=e)break}let r=t.imageOffsets,a=r[this.id],n=r[this.id+1];return a===n?null:(this._font.stream.pos=a,e1.decode(this._font.stream,{buflen:n-a}))}render(e,t){let r=this.getImageForSize(t);if(r!=null){let a=t/this._font.unitsPerEm;e.image(r.data,{height:t,x:r.originX,y:(this.bbox.minY-r.originY)*a})}this._font.sbix.flags.renderOutlines&&super.render(e,t)}constructor(...e){super(...e),Ue(this,"type","SBIX")}}class Os{constructor(e,t){this.glyph=e,this.color=t}}class r1 extends s0{_getBBox(){let e=new m0;for(let t=0;t<this.layers.length;t++){let a=this.layers[t].glyph.bbox;e.addPoint(a.minX,a.minY),e.addPoint(a.maxX,a.maxY)}return e}get layers(){let e=this._font.CPAL,t=this._font.COLR,r=0,a=t.baseGlyphRecord.length-1;for(;r<=a;){let d=r+a>>1;var n=t.baseGlyphRecord[d];if(this.id<n.gid)a=d-1;else if(this.id>n.gid)r=d+1;else{var i=n;break}}if(i==null){var o=this._font._getBaseGlyph(this.id),u={red:0,green:0,blue:0,alpha:255};return[new Os(o,u)]}let c=[];for(let d=i.firstLayerIndex;d<i.firstLayerIndex+i.numLayers;d++){var n=t.layerRecords[d],u=e.colorRecords[n.paletteIndex],o=this._font._getBaseGlyph(n.gid);c.push(new Os(o,u))}return c}render(e,t){for(let{glyph:r,color:a}of this.layers)e.fillColor([a.red,a.green,a.blue],a.alpha/255*100),r.render(e,t)}constructor(...e){super(...e),Ue(this,"type","COLR")}}const a1=32768,s1=4095,n1=32768,Ps=16384,i1=8192,Es=4095,Ts=128,Fs=127,l1=128,o1=64,u1=63;class c1{normalizeCoords(e){let t=[];for(var r=0;r<this.font.fvar.axis.length;r++){let a=this.font.fvar.axis[r];e[r]<a.defaultValue?t.push((e[r]-a.defaultValue+Number.EPSILON)/(a.defaultValue-a.minValue+Number.EPSILON)):t.push((e[r]-a.defaultValue+Number.EPSILON)/(a.maxValue-a.defaultValue+Number.EPSILON))}if(this.font.avar)for(var r=0;r<this.font.avar.segment.length;r++){let n=this.font.avar.segment[r];for(let i=0;i<n.correspondence.length;i++){let o=n.correspondence[i];if(i>=1&&t[r]<o.fromCoord){let u=n.correspondence[i-1];t[r]=((t[r]-u.fromCoord)*(o.toCoord-u.toCoord)+Number.EPSILON)/(o.fromCoord-u.fromCoord+Number.EPSILON)+u.toCoord;break}}}return t}transformPoints(e,t){if(!this.font.fvar||!this.font.gvar)return;let{gvar:r}=this.font;if(e>=r.glyphCount)return;let a=r.offsets[e];if(a===r.offsets[e+1])return;let{stream:n}=this.font;if(n.pos=a,n.pos>=n.length)return;let i=n.readUInt16BE(),o=a+n.readUInt16BE();if(i&a1){var u=n.pos;n.pos=o;var c=this.decodePoints();o=n.pos,n.pos=u}let d=t.map($=>$.copy());i&=s1;for(let $=0;$<i;$++){let B=n.readUInt16BE(),R=n.readUInt16BE();if(R&n1){var f=[];for(let N=0;N<r.axisCount;N++)f.push(n.readInt16BE()/16384)}else{if((R&Es)>=r.globalCoordCount)throw new Error("Invalid gvar table");var f=r.globalCoords[R&Es]}if(R&Ps){var x=[];for(let N=0;N<r.axisCount;N++)x.push(n.readInt16BE()/16384);var C=[];for(let N=0;N<r.axisCount;N++)C.push(n.readInt16BE()/16384)}let m=this.tupleFactor(R,f,x,C);if(m===0){o+=B;continue}var u=n.pos;if(n.pos=o,R&i1)var A=this.decodePoints();else var A=c;let h=A.length===0?t.length:A.length,j=this.decodeDeltas(h),H=this.decodeDeltas(h);if(A.length===0)for(let N=0;N<t.length;N++){var D=t[N];D.x+=Math.round(j[N]*m),D.y+=Math.round(H[N]*m)}else{let N=d.map(z=>z.copy()),re=t.map(()=>!1);for(let z=0;z<A.length;z++){let ae=A[z];if(ae<t.length){let xe=N[ae];re[ae]=!0,xe.x+=Math.round(j[z]*m),xe.y+=Math.round(H[z]*m)}}this.interpolateMissingDeltas(N,d,re);for(let z=0;z<t.length;z++){let ae=N[z].x-d[z].x,xe=N[z].y-d[z].y;t[z].x+=ae,t[z].y+=xe}}o+=B,n.pos=u}}decodePoints(){let e=this.font.stream,t=e.readUInt8();t&Ts&&(t=(t&Fs)<<8|e.readUInt8());let r=new Uint16Array(t),a=0,n=0;for(;a<t;){let i=e.readUInt8(),o=(i&Fs)+1,u=i&Ts?e.readUInt16:e.readUInt8;for(let c=0;c<o&&a<t;c++)n+=u.call(e),r[a++]=n}return r}decodeDeltas(e){let t=this.font.stream,r=0,a=new Int16Array(e);for(;r<e;){let n=t.readUInt8(),i=(n&u1)+1;if(n&l1)r+=i;else{let o=n&o1?t.readInt16BE:t.readInt8;for(let u=0;u<i&&r<e;u++)a[r++]=o.call(t)}}return a}tupleFactor(e,t,r,a){let n=this.normalizedCoords,{gvar:i}=this.font,o=1;for(let u=0;u<i.axisCount;u++)if(t[u]!==0){if(n[u]===0)return 0;if(e&Ps){if(n[u]<r[u]||n[u]>a[u])return 0;n[u]<t[u]?o=o*(n[u]-r[u]+Number.EPSILON)/(t[u]-r[u]+Number.EPSILON):o=o*(a[u]-n[u]+Number.EPSILON)/(a[u]-t[u]+Number.EPSILON)}else{if(n[u]<Math.min(0,t[u])||n[u]>Math.max(0,t[u]))return 0;o=(o*n[u]+Number.EPSILON)/(t[u]+Number.EPSILON)}}return o}interpolateMissingDeltas(e,t,r){if(e.length===0)return;let a=0;for(;a<e.length;){let n=a,i=a,o=e[i];for(;!o.endContour;)o=e[++i];for(;a<=i&&!r[a];)a++;if(a>i)continue;let u=a,c=a;for(a++;a<=i;)r[a]&&(this.deltaInterpolate(c+1,a-1,c,a,t,e),c=a),a++;c===u?this.deltaShift(n,i,c,t,e):(this.deltaInterpolate(c+1,i,c,u,t,e),u>0&&this.deltaInterpolate(n,u-1,c,u,t,e)),a=i+1}}deltaInterpolate(e,t,r,a,n,i){if(e>t)return;let o=["x","y"];for(let c=0;c<o.length;c++){let d=o[c];if(n[r][d]>n[a][d]){var u=r;r=a,a=u}let f=n[r][d],x=n[a][d],C=i[r][d],A=i[a][d];if(f!==x||C===A){let D=f===x?0:(A-C)/(x-f);for(let $=e;$<=t;$++){let B=n[$][d];B<=f?B+=C-f:B>=x?B+=A-x:B=C+(B-f)*D,i[$][d]=B}}}}deltaShift(e,t,r,a,n){let i=n[r].x-a[r].x,o=n[r].y-a[r].y;if(!(i===0&&o===0))for(let u=e;u<=t;u++)u!==r&&(n[u].x+=i,n[u].y+=o)}getAdvanceAdjustment(e,t){let r,a;if(t.advanceWidthMapping){let n=e;n>=t.advanceWidthMapping.mapCount&&(n=t.advanceWidthMapping.mapCount-1),t.advanceWidthMapping.entryFormat,{outerIndex:r,innerIndex:a}=t.advanceWidthMapping.mapData[n]}else r=0,a=e;return this.getDelta(t.itemVariationStore,r,a)}getDelta(e,t,r){if(t>=e.itemVariationData.length)return 0;let a=e.itemVariationData[t];if(r>=a.deltaSets.length)return 0;let n=a.deltaSets[r],i=this.getBlendVector(e,t),o=0;for(let u=0;u<a.regionIndexCount;u++)o+=n.deltas[u]*i[u];return o}getBlendVector(e,t){let r=e.itemVariationData[t];if(this.blendVectors.has(r))return this.blendVectors.get(r);let a=this.normalizedCoords,n=[];for(let i=0;i<r.regionIndexCount;i++){let o=1,u=r.regionIndexes[i],c=e.variationRegionList.variationRegions[u];for(let d=0;d<c.length;d++){let f=c[d],x;f.startCoord>f.peakCoord||f.peakCoord>f.endCoord||f.startCoord<0&&f.endCoord>0&&f.peakCoord!==0||f.peakCoord===0?x=1:a[d]<f.startCoord||a[d]>f.endCoord?x=0:a[d]===f.peakCoord?x=1:a[d]<f.peakCoord?x=(a[d]-f.startCoord+Number.EPSILON)/(f.peakCoord-f.startCoord+Number.EPSILON):x=(f.endCoord-a[d]+Number.EPSILON)/(f.endCoord-f.peakCoord+Number.EPSILON),o*=x}n[i]=o}return this.blendVectors.set(r,n),n}constructor(e,t){this.font=e,this.normalizedCoords=this.normalizeCoords(t),this.blendVectors=new Map}}Promise.resolve();class Ln{includeGlyph(e){return typeof e=="object"&&(e=e.id),this.mapping[e]==null&&(this.glyphs.push(e),this.mapping[e]=this.glyphs.length-1),this.mapping[e]}constructor(e){this.font=e,this.glyphs=[],this.mapping={},this.includeGlyph(0)}}const f1=1,d1=2,h1=4,p1=8,b1=16,g1=32;class Ds{static size(e){return e>=0&&e<=255?1:2}static encode(e,t){t>=0&&t<=255?e.writeUInt8(t):e.writeInt16BE(t)}}let Bs=new v({numberOfContours:w,xMin:w,yMin:w,xMax:w,yMax:w,endPtsOfContours:new p(l,"numberOfContours"),instructions:new p(O,l),flags:new p(O,0),xPoints:new p(Ds,0),yPoints:new p(Ds,0)});class v1{encodeSimple(e,t=[]){let r=[],a=[],n=[],i=[],o=0,u=0,c=0,d=0,f=0;for(let B=0;B<e.commands.length;B++){let R=e.commands[B];for(let m=0;m<R.args.length;m+=2){let T=R.args[m],h=R.args[m+1],j=0;if(R.command==="quadraticCurveTo"&&m===2){let H=e.commands[B+1];if(H&&H.command==="quadraticCurveTo"){let N=(u+H.args[0])/2,re=(c+H.args[1])/2;if(T===N&&h===re)continue}}R.command==="quadraticCurveTo"&&m===0||(j|=f1),j=this._encodePoint(T,u,a,j,d1,b1),j=this._encodePoint(h,c,n,j,h1,g1),j===d&&o<255?(i[i.length-1]|=p1,o++):(o>0&&(i.push(o),o=0),i.push(j),d=j),u=T,c=h,f++}R.command==="closePath"&&r.push(f-1)}e.commands.length>1&&e.commands[e.commands.length-1].command!=="closePath"&&r.push(f-1);let x=e.bbox,C={numberOfContours:r.length,xMin:x.minX,yMin:x.minY,xMax:x.maxX,yMax:x.maxY,endPtsOfContours:r,instructions:t,flags:i,xPoints:a,yPoints:n},A=Bs.size(C),D=4-A%4,$=new Rt(A+D);return Bs.encode($,C),D!==0&&$.fill(0,D),$.buffer}_encodePoint(e,t,r,a,n,i){let o=e-t;return e===t?a|=i:(-255<=o&&o<=255&&(a|=n,o<0?o=-o:a|=i),r.push(o)),a}}class x1 extends Ln{_addGlyph(e){let t=this.font.getGlyph(e),r=t._decode(),a=this.font.loca.offsets[e],n=this.font.loca.offsets[e+1],i=this.font._getTableStream("glyf");i.pos+=a;let o=i.readBuffer(n-a);if(r&&r.numberOfContours<0){o=new Uint8Array(o);let u=new DataView(o.buffer);for(let c of r.components)e=this.includeGlyph(c.glyphID),u.setUint16(c.pos,e)}else r&&this.font._variationProcessor&&(o=this.glyphEncoder.encodeSimple(t.path,r.instructions));return this.glyf.push(o),this.loca.offsets.push(this.offset),this.hmtx.metrics.push({advance:t.advanceWidth,bearing:t._getMetrics().leftBearing}),this.offset+=o.length,this.glyf.length-1}encode(){this.glyf=[],this.offset=0,this.loca={offsets:[],version:this.font.loca.version},this.hmtx={metrics:[],bearings:[]};let e=0;for(;e<this.glyphs.length;)this._addGlyph(this.glyphs[e++]);let t=it(this.font.maxp);t.numGlyphs=this.glyf.length,this.loca.offsets.push(this.offset);let r=it(this.font.head);r.indexToLocFormat=this.loca.version;let a=it(this.font.hhea);return a.numberOfMetrics=this.hmtx.metrics.length,Sn.toBuffer({tables:{head:r,hhea:a,loca:this.loca,maxp:t,"cvt ":this.font["cvt "],prep:this.font.prep,glyf:this.glyf,hmtx:this.hmtx,fpgm:this.font.fpgm}})}constructor(e){super(e),this.glyphEncoder=new v1}}class m1 extends Ln{subsetCharstrings(){this.charstrings=[];let e={};for(let t of this.glyphs){this.charstrings.push(this.cff.getCharString(t));let r=this.font.getGlyph(t);r.path;for(let a in r._usedGsubrs)e[a]=!0}this.gsubrs=this.subsetSubrs(this.cff.globalSubrIndex,e)}subsetSubrs(e,t){let r=[];for(let a=0;a<e.length;a++){let n=e[a];t[a]?(this.cff.stream.pos=n.offset,r.push(this.cff.stream.readBuffer(n.length))):r.push(new Uint8Array([11]))}return r}subsetFontdict(e){e.FDArray=[],e.FDSelect={version:0,fds:[]};let t={},r=[],a={};for(let n of this.glyphs){let i=this.cff.fdForGlyph(n);if(i==null)continue;t[i]||(e.FDArray.push(Object.assign({},this.cff.topDict.FDArray[i])),r.push({}),a[i]=e.FDArray.length-1),t[i]=!0,e.FDSelect.fds.push(a[i]);let o=this.font.getGlyph(n);o.path;for(let u in o._usedSubrs)r[a[i]][u]=!0}for(let n=0;n<e.FDArray.length;n++){let i=e.FDArray[n];delete i.FontName,i.Private&&i.Private.Subrs&&(i.Private=Object.assign({},i.Private),i.Private.Subrs=this.subsetSubrs(i.Private.Subrs,r[n]))}}createCIDFontdict(e){let t={};for(let a of this.glyphs){let n=this.font.getGlyph(a);n.path;for(let i in n._usedSubrs)t[i]=!0}let r=Object.assign({},this.cff.topDict.Private);return this.cff.topDict.Private&&this.cff.topDict.Private.Subrs&&(r.Subrs=this.subsetSubrs(this.cff.topDict.Private.Subrs,t)),e.FDArray=[{Private:r}],e.FDSelect={version:3,nRanges:1,ranges:[{first:0,fd:0}],sentinel:this.charstrings.length}}addString(e){return e?(this.strings||(this.strings=[]),this.strings.push(e),Bt.length+this.strings.length-1):null}encode(){this.subsetCharstrings();let e={version:this.charstrings.length>255?2:1,ranges:[{first:1,nLeft:this.charstrings.length-2}]},t=Object.assign({},this.cff.topDict);t.Private=null,t.charset=e,t.Encoding=null,t.CharStrings=this.charstrings;for(let a of["version","Notice","Copyright","FullName","FamilyName","Weight","PostScript","BaseFontName","FontName"])t[a]=this.addString(this.cff.string(t[a]));t.ROS=[this.addString("Adobe"),this.addString("Identity"),0],t.CIDCount=this.charstrings.length,this.cff.isCIDFont?this.subsetFontdict(t):this.createCIDFontdict(t);let r={version:1,hdrSize:this.cff.hdrSize,offSize:4,header:this.cff.header,nameIndex:[this.cff.postscriptName],topDictIndex:[t],stringIndex:this.strings,globalSubrIndex:this.gsubrs};return xn.toBuffer(r)}constructor(e){if(super(e),this.cff=this.font["CFF "],!this.cff)throw new Error("Not a CFF Font")}}class Fe{static probe(e){let t=ar.decode(e.slice(0,4));return t==="true"||t==="OTTO"||t===String.fromCharCode(0,1,0,0)}setDefaultLanguage(e=null){this.defaultLanguage=e}_getTable(e){if(!(e.tag in this._tables))try{this._tables[e.tag]=this._decodeTable(e)}catch{}return this._tables[e.tag]}_getTableStream(e){let t=this.directory.tables[e];return t?(this.stream.pos=t.offset,this.stream):null}_decodeDirectory(){return this.directory=Sn.decode(this.stream,{_startOffset:0})}_decodeTable(e){let t=this.stream.pos,r=this._getTableStream(e.tag),a=Ht[e.tag].decode(r,this,e.length);return this.stream.pos=t,a}getName(e,t=this.defaultLanguage||Gt){let r=this.name&&this.name.records[e];return r&&(r[t]||r[this.defaultLanguage]||r[Gt]||r.en||r[Object.keys(r)[0]])||null}get postscriptName(){return this.getName("postscriptName")}get fullName(){return this.getName("fullName")}get familyName(){return this.getName("fontFamily")}get subfamilyName(){return this.getName("fontSubfamily")}get copyright(){return this.getName("copyright")}get version(){return this.getName("version")}get ascent(){return this.hhea.ascent}get descent(){return this.hhea.descent}get lineGap(){return this.hhea.lineGap}get underlinePosition(){return this.post.underlinePosition}get underlineThickness(){return this.post.underlineThickness}get italicAngle(){return this.post.italicAngle}get capHeight(){let e=this["OS/2"];return e?e.capHeight:this.ascent}get xHeight(){let e=this["OS/2"];return e?e.xHeight:0}get numGlyphs(){return this.maxp.numGlyphs}get unitsPerEm(){return this.head.unitsPerEm}get bbox(){return Object.freeze(new m0(this.head.xMin,this.head.yMin,this.head.xMax,this.head.yMax))}get _cmapProcessor(){return new ua(this.cmap)}get characterSet(){return this._cmapProcessor.getCharacterSet()}hasGlyphForCodePoint(e){return!!this._cmapProcessor.lookup(e)}glyphForCodePoint(e){return this.getGlyph(this._cmapProcessor.lookup(e),[e])}glyphsForString(e){let t=[],r=e.length,a=0,n=-1,i=-1;for(;a<=r;){let o=0,u=0;if(a<r){if(o=e.charCodeAt(a++),55296<=o&&o<=56319&&a<r){let c=e.charCodeAt(a);56320<=c&&c<=57343&&(a++,o=((o&1023)<<10)+(c&1023)+65536)}u=65024<=o&&o<=65039||917760<=o&&o<=917999?1:0}else a++;i===0&&u===1?t.push(this.getGlyph(this._cmapProcessor.lookup(n,o),[n,o])):i===0&&u===0&&t.push(this.glyphForCodePoint(n)),n=o,i=u}return t}get _layoutEngine(){return new Vf(this)}layout(e,t,r,a,n){return this._layoutEngine.layout(e,t,r,a,n)}stringsForGlyph(e){return this._layoutEngine.stringsForGlyph(e)}get availableFeatures(){return this._layoutEngine.getAvailableFeatures()}getAvailableFeatures(e,t){return this._layoutEngine.getAvailableFeatures(e,t)}_getBaseGlyph(e,t=[]){return this._glyphs[e]||(this.directory.tables.glyf?this._glyphs[e]=new lr(e,t,this):(this.directory.tables["CFF "]||this.directory.tables.CFF2)&&(this._glyphs[e]=new _f(e,t,this))),this._glyphs[e]||null}getGlyph(e,t=[]){return this._glyphs[e]||(this.directory.tables.sbix?this._glyphs[e]=new t1(e,t,this):this.directory.tables.COLR&&this.directory.tables.CPAL?this._glyphs[e]=new r1(e,t,this):this._getBaseGlyph(e,t)),this._glyphs[e]||null}createSubset(){return this.directory.tables["CFF "]?new m1(this):new x1(this)}get variationAxes(){let e={};if(!this.fvar)return e;for(let t of this.fvar.axis)e[t.axisTag.trim()]={name:t.name.en,min:t.minValue,default:t.defaultValue,max:t.maxValue};return e}get namedVariations(){let e={};if(!this.fvar)return e;for(let t of this.fvar.instance){let r={};for(let a=0;a<this.fvar.axis.length;a++){let n=this.fvar.axis[a];r[n.axisTag.trim()]=t.coord[a]}e[t.name.en]=r}return e}getVariation(e){if(!(this.directory.tables.fvar&&(this.directory.tables.gvar&&this.directory.tables.glyf||this.directory.tables.CFF2)))throw new Error("Variations require a font with the fvar, gvar and glyf, or CFF2 tables.");if(typeof e=="string"&&(e=this.namedVariations[e]),typeof e!="object")throw new Error("Variation settings must be either a variation name or settings object.");let t=this.fvar.axis.map((n,i)=>{let o=n.axisTag.trim();return o in e?Math.max(n.minValue,Math.min(n.maxValue,e[o])):n.defaultValue}),r=new ke(this.stream.buffer);r.pos=this._directoryPos;let a=new Fe(r,t);return a._tables=this._tables,a}get _variationProcessor(){if(!this.fvar)return null;let e=this.variationCoords;return!e&&!this.CFF2?null:(e||(e=this.fvar.axis.map(t=>t.defaultValue)),new c1(this,e))}getFont(e){return this.getVariation(e)}constructor(e,t=null){Ue(this,"type","TTF"),this.defaultLanguage=null,this.stream=e,this.variationCoords=t,this._directoryPos=this.stream.pos,this._tables={},this._glyphs={},this._decodeDirectory();for(let r in this.directory.tables){let a=this.directory.tables[r];Ht[r]&&a.length>0&&Object.defineProperty(this,r,{get:this._getTable.bind(this,a)})}}}Ie([Oe],Fe.prototype,"bbox",null);Ie([Oe],Fe.prototype,"_cmapProcessor",null);Ie([Oe],Fe.prototype,"characterSet",null);Ie([Oe],Fe.prototype,"_layoutEngine",null);Ie([Oe],Fe.prototype,"variationAxes",null);Ie([Oe],Fe.prototype,"namedVariations",null);Ie([Oe],Fe.prototype,"_variationProcessor",null);let w1=new v({tag:new ce(4),offset:new b(g,"void",{type:"global"}),compLength:g,length:g,origChecksum:g}),Mn=new v({tag:new ce(4),flavor:g,length:g,numTables:l,reserved:new pe(l),totalSfntSize:g,majorVersion:l,minorVersion:l,metaOffset:g,metaLength:g,metaOrigLength:g,privOffset:g,privLength:g,tables:new p(w1,"numTables")});Mn.process=function(){let s={};for(let e of this.tables)s[e.tag]=e;this.tables=s};var y1=Mn;class C1 extends Fe{static probe(e){return ar.decode(e.slice(0,4))==="wOFF"}_decodeDirectory(){this.directory=y1.decode(this.stream,{_startOffset:0})}_getTableStream(e){let t=this.directory.tables[e];if(t)if(this.stream.pos=t.offset,t.compLength<t.length){this.stream.pos+=2;let r=new Uint8Array(t.length),a=qs(this.stream.readBuffer(t.compLength-2),r);return new ke(a)}else return this.stream;return null}constructor(...e){super(...e),Ue(this,"type","WOFF")}}class S1 extends lr{_decode(){return this._font._transformedGlyphs[this.id]}_getCBox(){return this.path.bbox}constructor(...e){super(...e),Ue(this,"type","WOFF2")}}const Ls={decode(s){let e=0,t=[0,1,2,3,4];for(let r=0;r<t.length;r++){let a=s.readUInt8();if(e&3758096384)throw new Error("Overflow");if(e=e<<7|a&127,!(a&128))return e}throw new Error("Bad base 128 number")}};let A1=["cmap","head","hhea","hmtx","maxp","name","OS/2","post","cvt ","fpgm","glyf","loca","prep","CFF ","VORG","EBDT","EBLC","gasp","hdmx","kern","LTSH","PCLT","VDMX","vhea","vmtx","BASE","GDEF","GPOS","GSUB","EBSC","JSTF","MATH","CBDT","CBLC","COLR","CPAL","SVG ","sbix","acnt","avar","bdat","bloc","bsln","cvar","fdsc","feat","fmtx","fvar","gvar","hsty","just","lcar","mort","morx","opbd","prop","trak","Zapf","Silf","Glat","Gloc","Feat","Sill"],k1=new v({flags:O,customTag:new Nt(new ce(4),s=>(s.flags&63)===63),tag:s=>s.customTag||A1[s.flags&63],length:Ls,transformVersion:s=>s.flags>>>6&3,transformed:s=>s.tag==="glyf"||s.tag==="loca"?s.transformVersion===0:s.transformVersion!==0,transformLength:new Nt(Ls,s=>s.transformed)}),Rn=new v({tag:new ce(4),flavor:g,length:g,numTables:l,reserved:new pe(l),totalSfntSize:g,totalCompressedSize:g,majorVersion:l,minorVersion:l,metaOffset:g,metaLength:g,metaOrigLength:g,privOffset:g,privLength:g,tables:new p(k1,"numTables")});Rn.process=function(){let s={};for(let e=0;e<this.tables.length;e++){let t=this.tables[e];s[t.tag]=t}return this.tables=s};var I1=Rn;class O1 extends Fe{static probe(e){return ar.decode(e.slice(0,4))==="wOF2"}_decodeDirectory(){this.directory=I1.decode(this.stream),this._dataPos=this.stream.pos}_decompress(){if(!this._decompressed){this.stream.pos=this._dataPos;let e=this.stream.readBuffer(this.directory.totalCompressedSize),t=0;for(let a in this.directory.tables){let n=this.directory.tables[a];n.offset=t,t+=n.transformLength!=null?n.transformLength:n.length}let r=Ki(e,t);if(!r)throw new Error("Error decoding compressed data in WOFF2");this.stream=new ke(r),this._decompressed=!0}}_decodeTable(e){return this._decompress(),super._decodeTable(e)}_getBaseGlyph(e,t=[]){if(!this._glyphs[e])return this.directory.tables.glyf&&this.directory.tables.glyf.transformed?(this._transformedGlyphs||this._transformGlyfTable(),this._glyphs[e]=new S1(e,t,this)):super._getBaseGlyph(e,t)}_transformGlyfTable(){this._decompress(),this.stream.pos=this.directory.tables.glyf.offset;let e=P1.decode(this.stream),t=[];for(let a=0;a<e.numGlyphs;a++){let n={},i=e.nContours.readInt16BE();if(n.numberOfContours=i,i>0){let o=[],u=0;for(let c=0;c<i;c++){let d=Rr(e.nPoints);u+=d,o.push(u)}n.points=D1(e.flags,e.glyphs,u);for(let c=0;c<i;c++)n.points[o[c]-1].endContour=!0;var r=Rr(e.glyphs)}else if(i<0&&lr.prototype._decodeComposite.call({_font:this},n,e.composites))var r=Rr(e.glyphs);t.push(n)}this._transformedGlyphs=t}constructor(...e){super(...e),Ue(this,"type","WOFF2")}}class A0{decode(e,t){return new ke(this._buf.decode(e,t))}constructor(e){this.length=e,this._buf=new r0(e)}}let P1=new v({version:g,numGlyphs:l,indexFormat:l,nContourStreamSize:g,nPointsStreamSize:g,flagStreamSize:g,glyphStreamSize:g,compositeStreamSize:g,bboxStreamSize:g,instructionStreamSize:g,nContours:new A0("nContourStreamSize"),nPoints:new A0("nPointsStreamSize"),flags:new A0("flagStreamSize"),glyphs:new A0("glyphStreamSize"),composites:new A0("compositeStreamSize"),bboxes:new A0("bboxStreamSize"),instructions:new A0("instructionStreamSize")});const E1=253,T1=254,F1=255,Ms=253;function Rr(s){let e=s.readUInt8();return e===E1?s.readUInt16BE():e===F1?s.readUInt8()+Ms:e===T1?s.readUInt8()+Ms*2:e}function Ze(s,e){return s&1?e:-e}function D1(s,e,t){let r,a=r=0,n=[];for(let u=0;u<t;u++){let c=0,d=0,f=s.readUInt8(),x=!(f>>7);if(f&=127,f<10)c=0,d=Ze(f,((f&14)<<7)+e.readUInt8());else if(f<20)c=Ze(f,((f-10&14)<<7)+e.readUInt8()),d=0;else if(f<84){var i=f-20,o=e.readUInt8();c=Ze(f,1+(i&48)+(o>>4)),d=Ze(f>>1,1+((i&12)<<2)+(o&15))}else if(f<120){var i=f-84;c=Ze(f,1+(i/12<<8)+e.readUInt8()),d=Ze(f>>1,1+(i%12>>2<<8)+e.readUInt8())}else if(f<124){var o=e.readUInt8();let A=e.readUInt8();c=Ze(f,(o<<4)+(A>>4)),d=Ze(f>>1,((A&15)<<8)+e.readUInt8())}else c=Ze(f,e.readUInt16BE()),d=Ze(f>>1,e.readUInt16BE());a+=c,r+=d,n.push(new qe(x,!1,a,r))}return n}let B1=new J(g,{65536:{numFonts:g,offsets:new p(g,"numFonts")},131072:{numFonts:g,offsets:new p(g,"numFonts"),dsigTag:g,dsigLength:g,dsigOffset:g}});class L1{static probe(e){return ar.decode(e.slice(0,4))==="ttcf"}getFont(e){for(let t of this.header.offsets){let r=new ke(this.stream.buffer);r.pos=t;let a=new Fe(r);if(a.postscriptName===e||a.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&a.postscriptName.every((n,i)=>e[i]===n))return a}return null}get fonts(){let e=[];for(let t of this.header.offsets){let r=new ke(this.stream.buffer);r.pos=t,e.push(new Fe(r))}return e}constructor(e){if(Ue(this,"type","TTC"),this.stream=e,e.readString(4)!=="ttcf")throw new Error("Not a TrueType collection");this.header=B1.decode(e)}}let M1=new ce(O);new v({len:g,buf:new r0("len")});let R1=new v({id:l,nameOffset:w,attr:O,dataOffset:g0,handle:g}),N1=new v({name:new ce(4),maxTypeIndex:l,refList:new b(l,new p(R1,s=>s.maxTypeIndex+1),{type:"parent"})}),U1=new v({length:l,types:new p(N1,s=>s.length+1)}),V1=new v({reserved:new pe(O,24),typeList:new b(l,U1),nameListOffset:new b(l,"void")}),Rs=new v({dataOffset:g,map:new b(g,V1),dataLength:g,mapLength:g});class G1{static probe(e){let t=new ke(e);try{var r=Rs.decode(t)}catch{return!1}for(let a of r.map.typeList.types)if(a.name==="sfnt")return!0;return!1}getFont(e){if(!this.sfnt)return null;for(let t of this.sfnt.refList){let r=this.header.dataOffset+t.dataOffset+4,a=new ke(this.stream.buffer.slice(r)),n=new Fe(a);if(n.postscriptName===e||n.postscriptName instanceof Uint8Array&&e instanceof Uint8Array&&n.postscriptName.every((i,o)=>e[o]===i))return n}return null}get fonts(){let e=[];for(let t of this.sfnt.refList){let r=this.header.dataOffset+t.dataOffset+4,a=new ke(this.stream.buffer.slice(r));e.push(new Fe(a))}return e}constructor(e){Ue(this,"type","DFont"),this.stream=e,this.header=Rs.decode(this.stream);for(let t of this.header.map.typeList.types){for(let r of t.refList)r.nameOffset>=0?(this.stream.pos=r.nameOffset+this.header.map.nameListOffset,r.name=M1.decode(this.stream)):r.name=null;t.name==="sfnt"&&(this.sfnt=t)}}}K0(Fe);K0(C1);K0(O1);K0(L1);K0(G1);export{Zi as create,Gt as defaultLanguage,ji as logErrors,K0 as registerFormat,Ji as setDefaultLanguage};
