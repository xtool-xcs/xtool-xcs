const c=(t,a)=>{const e=document.createElement("canvas"),n=e.getContext("2d");return e.width=t,e.height=a,{canvas:e,ctx:n}},g=t=>{const{naturalWidth:a,naturalHeight:e}=t,{ctx:n}=c(a,e);return n.drawImage(t,0,0,a,e),n.getImageData(0,0,a,e)},m=(t,a="image/jpeg")=>new Promise((e,n)=>{const r=new Image;r.src=i(t,a),r.onload=()=>{e(r)},r.onerror=n}),i=(t,a="image/jpeg")=>{const{canvas:e,ctx:n}=c(t.width,t.height);return n==null||n.putImageData(t,0,0),e.toDataURL(a)},l=t=>new Promise(async(a,e)=>{const n=URL.createObjectURL(t),r=new Image;r.src=n,r.onload=()=>{URL.revokeObjectURL(n),a(r)},r.onerror=e}),u=t=>new Promise(async(a,e)=>{const n=new FileReader;n.readAsDataURL(t),n.onload=function(r){var o,s;if(typeof((o=r.target)==null?void 0:o.result)=="string")a((s=r.target)==null?void 0:s.result);else return!1;n.onerror=e}}),h=async t=>{const a=await l(t);return g(a)},d=t=>{const a=new Uint8ClampedArray(t.length);for(let e=0;e<t.length;e+=4){const n=t[e],r=t[e+1],o=t[e+2],s=t[e+3];s===0?a.set([n,r,o,s],e):n!==255||r!==255||o!==255?a.set([0,0,0,s],e):a.set([0,0,0,0],e)}return a};export{h as a,l as b,i as c,d,u as f,m as i};
